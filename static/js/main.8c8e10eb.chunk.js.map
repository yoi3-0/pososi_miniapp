{"version":3,"sources":["panels/Home.js","panels/AList.js","img/persik.png","App.js","index.js"],"names":["Home","id","go","fetchedUser","header","mode","before","photo_200","src","description","city","title","first_name","last_name","stretched","size","onClick","thematics","name","AList","props","state","popout","activePanel","search","onChange","bind","openBase","e","this","setState","target","value","toLowerCase","filter","indexOf","onClose","iosCloseItem","autoclose","after","length","map","thematic","disabled","caption","React","Component","App","useState","setActivePanel","setUser","activeStory","setActiveStory","setPopout","onStoryChange","currentTarget","dataset","story","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","to","tabbar","selected","text","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8c8e10eb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n\tActionSheet, ActionSheetItem,\n\tAvatar,\n\tCell,\n\tFooter,\n\tGroup, IconButton,\n\tPanel,\n\tPanelHeader,\n\tPanelHeaderBack,\n\tRichCell,\n\tSearch, View\n} from '@vkontakte/vkui';\nimport { Icon28WriteSquareOutline } from '@vkontakte/icons';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst thematics = [\n\t{id: 3201, name: \"Токийский сруль\"},\n\t{id: 3273, name: \"Гуль из Токио\"},\n\t{id: 3205, name: \"Бегущая Тока\"},\n\t{id: 3282, name: \"Марьян the @avandi\"},\n\n];\n\nclass AList extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpopout: null,\n\t\t\tactivePanel:'default',\n\t\t\tsearch: '',\n\t\t};\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.openBase = this.openBase.bind(this);\n\t}\n\tonChange (e) { this.setState({ search: e.target.value }); }\n\n\tget thematics () {\n\t\tconst search = this.state.search.toLowerCase();\n\t\treturn thematics.filter(({name}) => name.toLowerCase().indexOf(search) > -1);\n\t}\n\n\topenBase () {\n\t\tthis.setState({ popout:\n\t\t\t\t<ActionSheet\n\t\t\t\t\tonClose={() => this.setState({ popout: null })}\n\t\t\t\t\tiosCloseItem={<ActionSheetItem autoclose mode=\"cancel\">Отменить</ActionSheetItem>}\n\t\t\t\t>\n\t\t\t\t\t<ActionSheetItem autoclose>\n\t\t\t\t\t\tРедактировать количество серий\n\t\t\t\t\t</ActionSheetItem>\n\t\t\t\t\t<ActionSheetItem autoclose>\n\t\t\t\t\t\tРедактировать оценку\n\t\t\t\t\t</ActionSheetItem>\n\t\t\t\t\t<ActionSheetItem autoclose mode=\"destructive\">\n\t\t\t\t\t\tУдалить из списка\n\t\t\t\t\t</ActionSheetItem>\n\t\t\t\t</ActionSheet>\n\t\t});\n\t}\n\n\trender()\n\t{\n\t\t//return\n\t\treturn (\n\t\t\t<View activePanel={this.props.id} popout={this.state.popout}>\n\t\t\t\t<Panel id={this.props.id} >\n\t\t\t\t\t<PanelHeader\n\t\t\t\t\t>\n\t\t\t\t\t\tАниме-лист\n\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t<Group>\n\t\t\t\t\t\t<Search value={this.state.search} onChange={this.onChange} after={null}/>\n\t\t\t\t\t\t{this.thematics.length > 0 && this.thematics.map(thematic =>  <RichCell\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tafter={<IconButton onClick={this.openBase}> <Icon28WriteSquareOutline /> </IconButton>}\n\t\t\t\t\t\t\tbefore={<Avatar size={72} src={null} />}\n\t\t\t\t\t\t\tcaption=\"10 серий, оценка 5 из 5\"\n\t\t\t\t\t\t\tkey={thematic.id}>\n\t\t\t\t\t\t\t{thematic.name}\n\t\t\t\t\t\t</RichCell>)}\n\t\t\t\t\t\t{this.thematics.length === 0 && <Footer>Ничего не найдено</Footer>}\n\t\t\t\t\t</Group>\n\t\t\t\t</Panel>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default AList;\n\nAList.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport {View, ScreenSpinner, AdaptivityProvider, AppRoot, Epic, Tabbar, TabbarItem} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport AList from './panels/AList';\nimport {Icon28NewsfeedOutline, Icon28ServicesOutline} from \"@vkontakte/icons\";\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('profile');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [activeStory, setActiveStory] = React.useState('profile');\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst onStoryChange = (e) => {\n\t\tsetActiveStory(e.currentTarget.dataset.story)\n\t\tsetActivePanel(e.currentTarget.dataset.story)\n\t};\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<Epic activeStory={activeStory} tabbar={\n\t\t\t\t\t<Tabbar>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={onStoryChange}\n\t\t\t\t\t\t\tselected={activeStory === 'AList'}\n\t\t\t\t\t\t\tdata-story=\"AList\"\n\t\t\t\t\t\t\ttext=\"Аниме-лист\"\n\t\t\t\t\t\t><Icon28NewsfeedOutline /></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={onStoryChange}\n\t\t\t\t\t\t\tselected={activeStory === 'profile'}\n\t\t\t\t\t\t\tdata-story=\"profile\"\n\t\t\t\t\t\t\ttext=\"Сервисы\"\n\t\t\t\t\t\t><Icon28ServicesOutline/></TabbarItem>\n\t\t\t\t\t</Tabbar>\n\t\t\t\t}>\n\t\t\t\t\t\t<Home id='profile' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t\t<AList id='AList' go={go} />\n\t\t\t\t</Epic>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}