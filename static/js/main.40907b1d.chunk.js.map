{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Persik.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","header","mode","before","photo_200","src","description","city","title","first_name","last_name","stretched","size","onClick","Persik","props","value","onChange","after","className","persik","alt","App","useState","activePanel","setActivePanel","setUser","React","activeStory","setActiveStory","popout","setPopout","onStoryChange","e","currentTarget","dataset","story","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","to","tabbar","selected","text","ReactDOM","render","getElementById"],"mappings":"wPAyCeA,EApCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,YAAX,OACZ,eAAC,IAAD,CAAOF,GAAIA,EAAX,UACC,cAAC,IAAD,sBACCE,GACD,cAAC,IAAD,CAAOC,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,8CAAf,SACC,cAAC,IAAD,CACCC,OAAQH,EAAYI,UAAY,cAAC,IAAD,CAAQC,IAAKL,EAAYI,YAAe,KACxEE,YAAaN,EAAYO,MAAQP,EAAYO,KAAKC,MAAQR,EAAYO,KAAKC,MAAQ,GAFpF,mBAIKR,EAAYS,WAJjB,YAI+BT,EAAYU,eAI5C,cAAC,IAAD,CAAOT,OAAQ,cAAC,IAAD,CAAQC,KAAK,YAAb,gCAAf,SACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAQS,WAAS,EAACC,KAAK,IAAIV,KAAK,YAAYW,QAASd,EAAI,UAAQ,SAAjE,gDCpBW,MAA0B,mCC0B1Be,G,OAlBA,SAAAC,GAAK,OACnB,eAAC,IAAD,CAAOjB,GAAIiB,EAAMjB,GAAjB,UACC,cAAC,IAAD,qBAIA,cAAC,IAAD,UACC,cAAC,IAAD,CAAQkB,MAAO,KAAMC,SAAU,KAAMC,MAAO,SAE7C,qBAAKC,UAAU,SAASd,IAAKe,EAAQC,IAAI,wB,kBCmD5BC,EA3DH,WACX,MAAsCC,mBAAS,WAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA+BF,mBAAS,MAAxC,mBAAOvB,EAAP,KAAoB0B,EAApB,KACA,EAAsCC,IAAMJ,SAAS,WAArD,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA4BN,mBAAS,cAAC,IAAD,CAAeX,KAAK,WAAzD,mBAAOkB,EAAP,KAAeC,EAAf,KACMC,EAAgB,SAACC,GACtBJ,EAAeI,EAAEC,cAAcC,QAAQC,OACvCX,EAAeQ,EAAEC,cAAcC,QAAQC,QAGxCC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBC,IAAOC,KAAK,uBADhC,OACOC,EADP,OAECf,EAAQe,GACRV,EAAU,MAHX,4CARe,sBACfQ,IAAOG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgB9B,MAAQ6B,EAAKI,OAASJ,EAAKI,OAAS,eACpDF,SAASG,KAAKC,WAAWC,aAAaN,OALzB,mCAafO,KACE,IAEH,IAAMtD,EAAK,SAAAkC,GACVR,EAAeQ,EAAEC,cAAcC,QAAQmB,KAGxC,OACC,cAAC,IAAD,UACC,eAAC,IAAD,WACC,eAAC,IAAD,CAAM9B,YAAaA,EAAaM,OAAQA,EAAxC,UACC,cAAC,EAAD,CAAMhC,GAAG,UAAUE,YAAaA,EAAaD,GAAIA,IACjD,cAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,OAEzB,cAAC,IAAD,CAAM6B,YAAaA,EAAa2B,OAC/B,eAAC,IAAD,WACC,cAAC,IAAD,CACC1C,QAASmB,EACTwB,SAA0B,WAAhB5B,EACV,aAAW,SACX6B,KAAK,6CAJN,SAKC,cAAC,IAAD,MACD,cAAC,IAAD,CACC5C,QAASmB,EACTwB,SAA0B,YAAhB5B,EACV,aAAW,UACX6B,KAAK,6CAJN,SAKC,cAAC,IAAD,iBCrDPlB,IAAOC,KAAK,gBAEZkB,IAASC,OAAO,cAAC,EAAD,IAASZ,SAASa,eAAe,W","file":"static/js/main.40907b1d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Group, Panel, PanelHeader, PanelHeaderBack, Search} from '@vkontakte/vkui';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<Group>\n\t\t\t<Search value={null} onChange={null} after={null}/>\n\t\t</Group>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport {View, ScreenSpinner, AdaptivityProvider, AppRoot, Epic, Tabbar, TabbarItem} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport {Icon28NewsfeedOutline, Icon28ServicesOutline} from \"@vkontakte/icons\";\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('profile');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [activeStory, setActiveStory] = React.useState('profile');\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst onStoryChange = (e) => {\n\t\tsetActiveStory(e.currentTarget.dataset.story)\n\t\tsetActivePanel(e.currentTarget.dataset.story)\n\t};\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='profile' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t</View>\n\t\t\t\t<Epic activeStory={activeStory} tabbar={\n\t\t\t\t\t<Tabbar>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={onStoryChange}\n\t\t\t\t\t\t\tselected={activeStory === 'persik'}\n\t\t\t\t\t\t\tdata-story=\"persik\"\n\t\t\t\t\t\t\ttext=\"Новости\"\n\t\t\t\t\t\t><Icon28NewsfeedOutline /></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={onStoryChange}\n\t\t\t\t\t\t\tselected={activeStory === 'profile'}\n\t\t\t\t\t\t\tdata-story=\"profile\"\n\t\t\t\t\t\t\ttext=\"Сервисы\"\n\t\t\t\t\t\t><Icon28ServicesOutline/></TabbarItem>\n\t\t\t\t\t</Tabbar>\n\t\t\t\t}>\n\t\t\t\t</Epic>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}