import React, { Component, HTMLAttributes, RefObject } from 'react';
import { AdaptivityProps } from '../../hoc/withAdaptivity';
import { DOMProps } from '../../lib/dom';
import { HasPlatform } from '../../types';
export interface PanelHeaderContextProps extends HTMLAttributes<HTMLDivElement>, HasPlatform, AdaptivityProps {
    opened: boolean;
    onClose: VoidFunction;
}
export interface PanelHeaderContextState {
    closing: boolean;
}
export declare class PanelHeaderContext extends Component<PanelHeaderContextProps & DOMProps, PanelHeaderContextState> {
    static defaultProps: Partial<PanelHeaderContextProps>;
    state: PanelHeaderContextState;
    elementRef: RefObject<HTMLDivElement>;
    private animationFinishTimeout;
    get isDesktop(): boolean;
    startClosing: (event: Event) => void;
    componentDidMount(): void;
    componentDidUpdate(prevProps: PanelHeaderContextProps): void;
    componentWillUnmount(): void;
    waitAnimationFinish(eventHandler: VoidFunction): void;
    onAnimationFinish: VoidFunction;
    render(): JSX.Element;
}
declare const _default: React.FC<PanelHeaderContextProps>;
export default _default;
