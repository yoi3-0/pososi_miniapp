import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import { useState, useCallback } from 'react';
export function useEnsuredControl(props, options) {
  var isControlled = props.hasOwnProperty('value');

  var _useState = useState(options.defaultValue),
      _useState2 = _slicedToArray(_useState, 2),
      localValue = _useState2[0],
      setLocalValue = _useState2[1];

  var onChange = useCallback(function (e) {
    !isControlled && setLocalValue(e.target.value);
    props.onChange && props.onChange(e);
  }, [props.onChange]);
  return [isControlled ? props.value : localValue, onChange];
}
//# sourceMappingURL=useEnsuredControl.js.map