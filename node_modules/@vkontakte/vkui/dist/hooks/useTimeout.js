import { useCallback, useEffect, useRef } from 'react';
import { useIsomorphicLayoutEffect } from "../lib/useIsomorphicLayoutEffect";
import { canUseDOM } from "../lib/dom";
export function useTimeout(cb, duration) {
  var options = useRef({
    cb: cb,
    duration: duration
  });
  useIsomorphicLayoutEffect(function () {
    options.current.cb = cb;
    options.current.duration = duration;
  }, [cb, duration]);
  var timeout = useRef();
  var clear = useCallback(function () {
    return canUseDOM && clearTimeout(timeout.current);
  }, []);
  var set = useCallback(function () {
    clear();

    if (canUseDOM) {
      timeout.current = setTimeout(function () {
        var cb = options.current.cb;
        typeof cb === 'function' && cb();
      }, options.current.duration);
    }
  }, []);
  useEffect(function () {
    return clear;
  }, []);
  return {
    set: set,
    clear: clear
  };
}
//# sourceMappingURL=useTimeout.js.map