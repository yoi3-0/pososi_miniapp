{"version":3,"sources":["../../../src/hooks/useKeyboardInputTracker.ts"],"names":["useKeyboardInputTracker","document","isKeyboardInputActive","toggleKeyboardInput","enableKeyboardInput","key","toUpperCase","disableKeyboardInput","eventOptions","passive","capture"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEO,SAASA,uBAAT,GAA4C;AAAA,gBAC5B,kBAD4B;AAAA,MACzCC,QADyC,WACzCA,QADyC;;AAAA,kBAGI,qBAAkB,IAAlB,CAHJ;AAAA;AAAA,MAG1CC,qBAH0C;AAAA,MAGnBC,mBAHmB;;AAKjD,MAAMC,mBAAmB,GAAG,wBAAY,gBAA4B;AAAA,QAAzBC,GAAyB,QAAzBA,GAAyB;;AAClE,QAAIA,GAAG,CAACC,WAAJ,OAAsB,KAA1B,EAAiC;AAC/BH,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;AACF,GAJ2B,EAIzB,EAJyB,CAA5B;AAMA,MAAMI,oBAAoB,GAAG,wBAAY,YAAM;AAC7CJ,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GAF4B,EAE1B,EAF0B,CAA7B;AAIA,MAAMK,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE,IADU;AAEnBC,IAAAA,OAAO,EAAE;AAFU,GAArB;AAKA,sDAAuBT,QAAvB,EAAiC,SAAjC,EAA4CG,mBAA5C,EAAiEI,YAAjE;AACA,sDAAuBP,QAAvB,EAAiC,WAAjC,EAA8CM,oBAA9C,EAAoEC,YAApE;AACA,sDAAuBP,QAAvB,EAAiC,YAAjC,EAA+CM,oBAA/C,EAAqEC,YAArE;AAEA,SAAON,qBAAP;AACD","sourcesContent":["import { useCallback, useState } from 'react';\nimport { useDOM } from '../lib/dom';\nimport { useGlobalEventListener } from './useGlobalEventListener';\n\nexport function useKeyboardInputTracker(): boolean {\n  const { document } = useDOM();\n\n  const [isKeyboardInputActive, toggleKeyboardInput] = useState<boolean>(true);\n\n  const enableKeyboardInput = useCallback(({ key }: KeyboardEvent) => {\n    if (key.toUpperCase() === 'TAB') {\n      toggleKeyboardInput(true);\n    }\n  }, []);\n\n  const disableKeyboardInput = useCallback(() => {\n    toggleKeyboardInput(false);\n  }, []);\n\n  const eventOptions = {\n    passive: true,\n    capture: true,\n  };\n\n  useGlobalEventListener(document, 'keydown', enableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, 'mousedown', disableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, 'touchstart', disableKeyboardInput, eventOptions);\n\n  return isKeyboardInputActive;\n}\n"],"file":"useKeyboardInputTracker.js"}