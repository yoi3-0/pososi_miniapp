{"version":3,"sources":["../../../src/hooks/useExternRef.ts"],"names":["useExternRef","externRefs","stableRef","current","el","forEach","ref"],"mappings":";;;;;;;AAAA;;AACA;;AAEO,SAASA,YAAT,GAA4E;AAAA,oCAAhDC,UAAgD;AAAhDA,IAAAA,UAAgD;AAAA;;AACjF,MAAMC,SAAS,GAAG,oBAAlB;AACA,SAAO,oBAAQ;AAAA,WAAO;AACpB,UAAIC,OAAJ,GAAc;AACZ,eAAOD,SAAS,CAACC,OAAjB;AACD,OAHmB;;AAIpB,UAAIA,OAAJ,CAAYC,EAAZ,EAAgB;AACdF,QAAAA,SAAS,CAACC,OAAV,GAAoBC,EAApB;AACAH,QAAAA,UAAU,CAACI,OAAX,CAAmB,UAACC,GAAD;AAAA,iBAAS,mBAAOF,EAAP,EAAWE,GAAX,CAAT;AAAA,SAAnB;AACD;;AAPmB,KAAP;AAAA,GAAR,EAQHL,UARG,CAAP;AASD","sourcesContent":["import { MutableRefObject, Ref, useMemo, useRef } from 'react';\nimport { setRef } from '../lib/utils';\n\nexport function useExternRef<T>(...externRefs: Array<Ref<T>>): MutableRefObject<T> {\n  const stableRef = useRef<T>();\n  return useMemo(() => ({\n    get current() {\n      return stableRef.current;\n    },\n    set current(el) {\n      stableRef.current = el;\n      externRefs.forEach((ref) => setRef(el, ref));\n    },\n  }), externRefs);\n}\n"],"file":"useExternRef.js"}