"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useKeyboardInputTracker = useKeyboardInputTracker;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = require("react");

var _dom = require("../lib/dom");

var _useGlobalEventListener = require("./useGlobalEventListener");

function useKeyboardInputTracker() {
  var _useDOM = (0, _dom.useDOM)(),
      document = _useDOM.document;

  var _useState = (0, _react.useState)(true),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      isKeyboardInputActive = _useState2[0],
      toggleKeyboardInput = _useState2[1];

  var enableKeyboardInput = (0, _react.useCallback)(function (_ref) {
    var key = _ref.key;

    if (key.toUpperCase() === 'TAB') {
      toggleKeyboardInput(true);
    }
  }, []);
  var disableKeyboardInput = (0, _react.useCallback)(function () {
    toggleKeyboardInput(false);
  }, []);
  var eventOptions = {
    passive: true,
    capture: true
  };
  (0, _useGlobalEventListener.useGlobalEventListener)(document, 'keydown', enableKeyboardInput, eventOptions);
  (0, _useGlobalEventListener.useGlobalEventListener)(document, 'mousedown', disableKeyboardInput, eventOptions);
  (0, _useGlobalEventListener.useGlobalEventListener)(document, 'touchstart', disableKeyboardInput, eventOptions);
  return isKeyboardInputActive;
}
//# sourceMappingURL=useKeyboardInputTracker.js.map