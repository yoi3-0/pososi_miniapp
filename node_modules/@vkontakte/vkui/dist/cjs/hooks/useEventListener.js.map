{"version":3,"sources":["../../../src/hooks/useEventListener.ts"],"names":["useEventListener","event","_cb","_options","cbRef","current","cb","e","detach","noop","remove","add","el","canUseDOM","options","addEventListener","removeEventListener"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAaO,SAASA,gBAAT,CAA0BC,KAA1B,EAAyCC,GAAzC,EAAkEC,QAAlE,EAAsG;AAC3G,MAAMC,KAAK,GAAG,mBAAOF,GAAP,CAAd;AACA,4DAA0B,YAAM;AAC9BE,IAAAA,KAAK,CAACC,OAAN,GAAgBH,GAAhB;AACD,GAFD,EAEG,CAACA,GAAD,CAFH;AAGA,MAAMI,EAAE,GAAG,wBAAwB,UAACC,CAAD;AAAA,WAAOH,KAAK,CAACC,OAAN,CAAcE,CAAd,CAAP;AAAA,GAAxB,EAAiD,EAAjD,CAAX;AAEA,MAAMC,MAAM,GAAG,mBAAOC,WAAP,CAAf;AACA,MAAMC,MAAM,GAAG,wBAAY;AAAA,WAAMF,MAAM,CAACH,OAAP,EAAN;AAAA,GAAZ,EAAoC,EAApC,CAAf;AACA,MAAMM,GAAG,GAAG,wBAAY,UAACC,EAAD,EAAgC;AACtD,QAAI,CAACC,cAAL,EAAgB;AACd;AACD;;AACDH,IAAAA,MAAM;AACN,QAAMI,OAAO,mCAAQX,QAAR,CAAb;AACAS,IAAAA,EAAE,CAACG,gBAAH,CAAoBd,KAApB,EAA2BK,EAA3B,EAA+BQ,OAA/B;;AACAN,IAAAA,MAAM,CAACH,OAAP,GAAiB,YAAM;AACrBO,MAAAA,EAAE,CAACI,mBAAH,CAAuBf,KAAvB,EAA8BK,EAA9B,EAAkCQ,OAAlC;AACAN,MAAAA,MAAM,CAACH,OAAP,GAAiBI,WAAjB;AACD,KAHD;AAID,GAXW,EAWT,EAXS,CAAZ;AAYA,wBAAU;AAAA,WAAMC,MAAN;AAAA,GAAV,EAAwB,EAAxB;AAEA,SAAO;AAAEC,IAAAA,GAAG,EAAHA,GAAF;AAAOD,IAAAA,MAAM,EAANA;AAAP,GAAP;AACD","sourcesContent":["import { noop } from '../lib/utils';\nimport { useCallback, useEffect, useRef } from 'react';\nimport { canUseDOM } from '../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\n\ninterface EventListenerHandle {\n  add(el: HTMLElement | Document): void;\n  remove(): void;\n}\n\nexport function useEventListener<K extends keyof GlobalEventHandlersEventMap>(\n  event: K,\n  _cb: (ev: GlobalEventHandlersEventMap[K]) => any,\n  _options?: AddEventListenerOptions,\n): EventListenerHandle;\nexport function useEventListener(event: string, _cb: (ev: Event) => any, _options?: AddEventListenerOptions): EventListenerHandle;\nexport function useEventListener(event: string, _cb: (ev: Event) => any, _options?: AddEventListenerOptions) {\n  const cbRef = useRef(_cb);\n  useIsomorphicLayoutEffect(() => {\n    cbRef.current = _cb;\n  }, [_cb]);\n  const cb = useCallback<typeof _cb>((e) => cbRef.current(e), []);\n\n  const detach = useRef(noop);\n  const remove = useCallback(() => detach.current(), []);\n  const add = useCallback((el: HTMLElement | Document) => {\n    if (!canUseDOM) {\n      return;\n    }\n    remove();\n    const options = { ..._options };\n    el.addEventListener(event, cb, options);\n    detach.current = () => {\n      el.removeEventListener(event, cb, options);\n      detach.current = noop;\n    };\n  }, []);\n  useEffect(() => remove, []);\n\n  return { add, remove };\n}\n"],"file":"useEventListener.js"}