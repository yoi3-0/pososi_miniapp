{"version":3,"sources":["../../../src/lib/touch.ts"],"names":["coordX","e","clientX","changedTouches","coordY","clientY","isClient","window","touchEnabled","getSupportedEvents","rubber","offset","dimension","resistanceRate","isAndroid","offsettedResistance"],"mappings":";;;;;;;;;AAGA;;;AAGA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,CAAD,EAA+B;AAC5C,MAAIA,CAAC,CAACC,OAAF,IAAa,IAAjB,EAAuB;AACrB,WAAOD,CAAC,CAACC,OAAT;AACD;;AACD,SAAOD,CAAC,CAACE,cAAF,IAAoBF,CAAC,CAACE,cAAF,CAAiB,CAAjB,EAAoBD,OAA/C;AACD,CALD;AAOA;;;;;;;AAGA,IAAME,MAAM,GAAG,SAATA,MAAS,CAACH,CAAD,EAA+B;AAC5C,MAAIA,CAAC,CAACI,OAAF,IAAa,IAAjB,EAAuB;AACrB,WAAOJ,CAAC,CAACI,OAAT;AACD;;AACD,SAAOJ,CAAC,CAACE,cAAF,IAAoBF,CAAC,CAACE,cAAF,CAAiB,CAAjB,EAAoBE,OAA/C;AACD,CALD;;;AAOA,IAAMC,QAAiB,GAAG,OAAOC,MAAP,KAAkB,WAA5C;AACA,IAAMC,YAAqB,GAAGF,QAAQ,IAAI,kBAAkBC,MAA5D;AAEA;;;;;;;;AAKA,SAASE,kBAAT,GAAwC;AACtC,MAAID,YAAJ,EAAkB;AAChB,WAAO,CAAC,YAAD,EAAe,WAAf,EAA4B,UAA5B,EAAwC,aAAxC,CAAP;AACD;;AAED,SAAO,CAAC,WAAD,EAAc,WAAd,EAA2B,SAA3B,EAAsC,YAAtC,CAAP;AACD;AAED;;;;;AAGA,SAASE,MAAT,CAAgBC,MAAhB,EAAgCC,SAAhC,EAAmDC,cAAnD,EAA2EC,SAA3E,EAAuG;AACrG,MAAIA,SAAS,IAAIH,MAAM,GAAG,CAA1B,EAA6B;AAC3B,WAAOA,MAAP;AACD;;AAED,MAAMI,mBAAmB,GAAGJ,MAAM,GAAGE,cAArC;AACA,SAAOE,mBAAmB,GAAGH,SAAtB,IAAmCG,mBAAmB,GAAGH,SAAzD,CAAP;AACD","sourcesContent":["export interface VKUITouchEvent extends MouseEvent, TouchEvent {}\nexport type VKUITouchEventHander = (e: VKUITouchEvent) => void;\n\n/*\n * Получает координату по оси абсцисс из touch- или mouse-события\n */\nconst coordX = (e: VKUITouchEvent): number => {\n  if (e.clientX != null) {\n    return e.clientX;\n  }\n  return e.changedTouches && e.changedTouches[0].clientX;\n};\n\n/*\n * Получает координату по оси ординат из touch- или mouse-события\n */\nconst coordY = (e: VKUITouchEvent): number => {\n  if (e.clientY != null) {\n    return e.clientY;\n  }\n  return e.changedTouches && e.changedTouches[0].clientY;\n};\n\nconst isClient: boolean = typeof window !== 'undefined';\nconst touchEnabled: boolean = isClient && 'ontouchstart' in window;\n\n/*\n * Возвращает массив поддерживаемых событий\n * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.\n * Если нет, используем события мыши\n */\nfunction getSupportedEvents(): string[] {\n  if (touchEnabled) {\n    return ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n  }\n\n  return ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n}\n\n/*\n * Рассчитывает \"сопротивление\" для iOS тач-событий\n */\nfunction rubber(offset: number, dimension: number, resistanceRate: number, isAndroid: boolean): number {\n  if (isAndroid || offset < 0) {\n    return offset;\n  }\n\n  const offsettedResistance = offset * resistanceRate;\n  return offsettedResistance * dimension / (offsettedResistance + dimension);\n}\n\nexport { getSupportedEvents, coordX, coordY, touchEnabled, rubber };\n"],"file":"touch.js"}