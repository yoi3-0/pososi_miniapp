{"version":3,"sources":["../../../../src/components/Link/Link.tsx"],"names":["Link","children","restProps","platform","href"],"mappings":";;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AAIA,IAAMA,IAAmB,GAAG,SAAtBA,IAAsB,OAGX;AAAA,MAFfC,QAEe,QAFfA,QAEe;AAAA,MADZC,SACY;AACf,MAAMC,QAAQ,GAAG,+BAAjB;AAEA,SACE,qCAAC,iBAAD;AACE,IAAA,SAAS,EAAED,SAAS,CAACE,IAAV,GAAiB,GAAjB,GAAuB;AADpC,KAEMF,SAFN;AAGE,IAAA,SAAS,EAAE,gCAAa,MAAb,EAAqBC,QAArB,CAHb;AAIE,IAAA,SAAS,EAAE,KAJb;AAKE,IAAA,SAAS,EAAC;AALZ,MAOGF,QAPH,CADF;AAWD,CAjBD;;eAmBeD,I","sourcesContent":["import { FC, AnchorHTMLAttributes } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport Tappable, { TappableProps } from '../Tappable/Tappable';\n\nexport interface LinkProps extends AnchorHTMLAttributes<HTMLElement>, TappableProps {}\n\nconst Link: FC<LinkProps> = ({\n  children,\n  ...restProps\n}: LinkProps) => {\n  const platform = usePlatform();\n\n  return (\n    <Tappable\n      Component={restProps.href ? 'a' : 'button'}\n      {...restProps}\n      vkuiClass={getClassName('Link', platform)}\n      hasActive={false}\n      hoverMode=\"opacity\"\n    >\n      {children}\n    </Tappable>\n  );\n};\n\nexport default Link;\n"],"file":"Link.js"}