{"version":3,"sources":["../../../../src/components/Counter/Counter.tsx"],"names":["CounterTypography","size","platform","restProps","VKCOM","Counter","props","mode","children","Children","count","defaultProps"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAaA,IAAMA,iBAA6C,GAAG,SAAhDA,iBAAgD,OAAsC;AAAA,MAAnCC,IAAmC,QAAnCA,IAAmC;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,MAAhBC,SAAgB;AAC1F,SAAOF,IAAI,KAAK,GAAT,GACH,qCAAC,gBAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAmB,IAAA,MAAM,EAAEC,QAAQ,KAAKE,eAAb,GAAqB,QAArB,GAAgC;AAA3D,KAA0ED,SAA1E,EADG,GAEH,qCAAC,aAAD;AAAM,IAAA,MAAM,EAAC;AAAb,KAA0BA,SAA1B,EAFJ;AAGD,CAJD;;AAMA,IAAME,OAAyB,GAAG,SAA5BA,OAA4B,CAACC,KAAD,EAAyB;AAAA,MACjDC,IADiD,GACVD,KADU,CACjDC,IADiD;AAAA,MAC3CN,IAD2C,GACVK,KADU,CAC3CL,IAD2C;AAAA,MACrCO,QADqC,GACVF,KADU,CACrCE,QADqC;AAAA,MACxBL,SADwB,0CACVG,KADU;AAEzD,MAAMJ,QAAQ,GAAG,+BAAjB;;AAEA,MAAIO,gBAASC,KAAT,CAAeF,QAAf,MAA6B,CAAjC,EAAoC;AAClC,WAAO,IAAP;AACD;;AAED,SACE,wEACML,SADN;AAEE,IAAA,SAAS,EAAE,4BACT,gCAAa,SAAb,EAAwBD,QAAxB,CADS,qBAEGK,IAFH,wBAGKN,IAHL;AAFb,MAQG,yBAAaO,QAAb,KAA0B,qCAAC,iBAAD;AAAmB,IAAA,QAAQ,EAAEN,QAA7B;AAAuC,IAAA,IAAI,EAAED,IAA7C;AAAmD,IAAA,SAAS,EAAC;AAA7D,KAA4EO,QAA5E,CAR7B,CADF;AAYD,CApBD;;AAsBAH,OAAO,CAACM,YAAR,GAAuB;AACrBJ,EAAAA,IAAI,EAAE,WADe;AAErBN,EAAAA,IAAI,EAAE;AAFe,CAAvB;;4BAKe,iBAAKI,OAAL,C","sourcesContent":["import { Children, ElementType, FC, HTMLAttributes, memo } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport Caption from '../Typography/Caption/Caption';\nimport Text from '../Typography/Text/Text';\nimport { VKCOM } from '../../lib/platform';\nimport { hasReactNode } from '../../lib/utils';\nimport { HasPlatform } from '../../types';\n\nexport interface CounterProps extends HTMLAttributes<HTMLSpanElement> {\n  /**\n   * Тип счетчика. При использовании компонента в качестве значения свойства `after` у `Button` эти значения игнорируются\n   */\n  mode?: 'secondary' | 'primary' | 'prominent';\n  size?: 's' | 'm';\n}\n\ntype CounterTypographyProps = Pick<CounterProps, 'size'> & HasPlatform & { Component?: ElementType };\n\nconst CounterTypography: FC<CounterTypographyProps> = ({ size, platform, ...restProps }) => {\n  return size === 's'\n    ? <Caption level=\"2\" weight={platform === VKCOM ? 'medium' : 'regular'} {...restProps} />\n    : <Text weight=\"medium\" {...restProps} />;\n};\n\nconst Counter: FC<CounterProps> = (props: CounterProps) => {\n  const { mode, size, children, ...restProps } = props;\n  const platform = usePlatform();\n\n  if (Children.count(children) === 0) {\n    return null;\n  }\n\n  return (\n    <span\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName('Counter', platform),\n        `Counter--${mode}`,\n        `Counter--s-${size}`,\n      )}\n    >\n      {hasReactNode(children) && <CounterTypography platform={platform} size={size} vkuiClass=\"Counter__in\">{children}</CounterTypography>}\n    </span>\n  );\n};\n\nCounter.defaultProps = {\n  mode: 'secondary',\n  size: 'm',\n};\n\nexport default memo(Counter);\n"],"file":"Counter.js"}