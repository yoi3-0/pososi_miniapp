import React, { HTMLAttributes, ReactNode } from 'react';
import { HasPlatform } from '../../types';
import { ConfigProviderContextInterface } from '../ConfigProvider/ConfigProviderContext';
import { SplitColContextProps } from '../SplitCol/SplitCol';
import { ScrollContextInterface } from '../AppRoot/ScrollContext';
import { NavIdProps } from '../../lib/getNavId';
export declare const transitionStartEventName = "VKUI:View:transition-start";
export declare const transitionEndEventName = "VKUI:View:transition-end";
declare enum SwipeBackResults {
    fail = 1,
    success = 2
}
interface Scrolls {
    [index: string]: number;
}
export declare type TransitionStartEventDetail = {
    scrolls: Scrolls;
    from: string;
    to: string;
    isBack: boolean;
};
export interface ViewProps extends HTMLAttributes<HTMLElement>, HasPlatform, NavIdProps {
    activePanel: string;
    /**
     * @deprecated будет удалено в 5.0.0. Используйте одноименное свойство у `SplitLayout`.
     *
     * Свойство для отрисовки `Alert`, `ActionSheet` и `ScreenSpinner`.
     */
    popout?: ReactNode;
    /**
     * @deprecated будет удалено в 5.0.0. Используйте одноименное свойство у `SplitLayout`.
     *
     * Свойство для отрисовки `ModalRoot`.
     */
    modal?: ReactNode;
    onTransition?(params: {
        isBack: boolean;
        from: string;
        to: string;
    }): void;
    /**
     * callback свайпа назад
     */
    onSwipeBack?(): void;
    /**
     * callback начала анимации свайпа назад.
     */
    onSwipeBackStart?(): void;
    /**
     * callback завершения анимации отмененного пользователем свайпа
     */
    onSwipeBackCancel?(): void;
    history?: string[];
    /**
     * @ignore
     */
    splitCol?: SplitColContextProps;
    /**
     * @ignore
     */
    configProvider?: ConfigProviderContextInterface;
    /**
     * @ignore
     */
    scroll?: ScrollContextInterface;
}
export interface ViewState {
    scrolls: Scrolls;
    animated: boolean;
    startT?: Date;
    visiblePanels: string[];
    activePanel: string;
    isBack: boolean;
    prevPanel: string;
    nextPanel: string;
    swipingBack: boolean;
    swipebackStartX: number;
    swipeBackShift: number;
    swipeBackNextPanel: string;
    swipeBackPrevPanel: string;
    swipeBackResult: SwipeBackResults;
    browserSwipe: boolean;
}
declare const _default: React.FC<ViewProps>;
export default _default;
