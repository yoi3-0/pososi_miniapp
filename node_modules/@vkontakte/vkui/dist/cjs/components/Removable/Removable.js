"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Removable = void 0;

var _jsxRuntime = require("../../lib/jsxRuntime");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _classNames = require("../../lib/classNames");

var _utils = require("../../lib/utils");

var _usePlatform = require("../../hooks/usePlatform");

var _getClassName = require("../../helpers/getClassName");

var _withAdaptivity = require("../../hoc/withAdaptivity");

var _dom = require("../../lib/dom");

var _platform = require("../../lib/platform");

var _icons = require("@vkontakte/icons");

var _IconButton = _interopRequireDefault(require("../IconButton/IconButton"));

var _useGlobalEventListener = require("../../hooks/useGlobalEventListener");

var Removable = (0, _withAdaptivity.withAdaptivity)(function (props) {
  var children = props.children,
      sizeY = props.sizeY,
      onRemove = props.onRemove,
      removePlaceholder = props.removePlaceholder,
      align = props.align,
      restProps = (0, _objectWithoutProperties2.default)(props, ["children", "sizeY", "onRemove", "removePlaceholder", "align"]);
  var platform = (0, _usePlatform.usePlatform)();

  var _useDOM = (0, _dom.useDOM)(),
      document = _useDOM.document;

  var removeButtonRef = (0, _react.useRef)(null);

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      isRemoveActivated = _useState2[0],
      setRemoveActivated = _useState2[1];

  var _useState3 = (0, _react.useState)(0),
      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
      removeOffset = _useState4[0],
      updateRemoveOffset = _useState4[1];

  (0, _useGlobalEventListener.useGlobalEventListener)(document, 'click', isRemoveActivated && function () {
    setRemoveActivated(false);
    updateRemoveOffset(0);
  });

  var onRemoveActivateClick = function onRemoveActivateClick(e) {
    e.nativeEvent.stopPropagation();
    e.preventDefault();
    setRemoveActivated(true);
  };

  var onRemoveClick = function onRemoveClick(e) {
    e.nativeEvent.stopImmediatePropagation();
    e.preventDefault();
    onRemove && onRemove(e);
  };

  (0, _react.useEffect)(function () {
    if (isRemoveActivated && (removeButtonRef === null || removeButtonRef === void 0 ? void 0 : removeButtonRef.current)) {
      updateRemoveOffset(removeButtonRef.current.offsetWidth);
    }
  }, [isRemoveActivated]);
  var removePlaceholderString = (0, _utils.getTitleFromChildren)(removePlaceholder);
  return (0, _jsxRuntime.createScopedElement)("div", (0, _extends2.default)({}, restProps, {
    vkuiClass: (0, _classNames.classNames)((0, _getClassName.getClassName)('Removable', platform), "Removable--".concat(align), "Removable--sizeY-".concat(sizeY))
  }), (platform === _platform.ANDROID || platform === _platform.VKCOM) && (0, _jsxRuntime.createScopedElement)("div", {
    vkuiClass: "Removable__content"
  }, children, (0, _jsxRuntime.createScopedElement)(_IconButton.default, {
    "aria-label": removePlaceholderString,
    vkuiClass: "Removable__action Removable__action--remove",
    onClick: onRemoveClick
  }, (0, _jsxRuntime.createScopedElement)(_icons.Icon24Cancel, null))), platform === _platform.IOS && (0, _jsxRuntime.createScopedElement)(_react.default.Fragment, null, (0, _jsxRuntime.createScopedElement)("div", {
    vkuiClass: "Removable__content",
    style: {
      transform: "translateX(-".concat(removeOffset, "px)")
    }
  }, (0, _jsxRuntime.createScopedElement)("button", {
    type: "button",
    "aria-label": removePlaceholderString,
    vkuiClass: "Removable__action Removable__action--indicator",
    onClick: onRemoveActivateClick
  }, (0, _jsxRuntime.createScopedElement)("i", {
    vkuiClass: "Removable__action-in",
    role: "presentation"
  })), children, (0, _jsxRuntime.createScopedElement)("span", {
    vkuiClass: "Removable__offset",
    "aria-hidden": "true"
  })), (0, _jsxRuntime.createScopedElement)("button", {
    type: "button",
    tabIndex: isRemoveActivated ? null : -1,
    ref: removeButtonRef,
    vkuiClass: "Removable__action Removable__action--remove",
    onClick: onRemoveClick,
    style: {
      transform: "translateX(-".concat(removeOffset, "px)")
    }
  }, (0, _jsxRuntime.createScopedElement)("span", {
    vkuiClass: "Removable__action-in"
  }, removePlaceholder))));
}, {
  sizeY: true
});
exports.Removable = Removable;
Removable.defaultProps = {
  align: 'center',
  removePlaceholder: 'Удалить'
};
//# sourceMappingURL=Removable.js.map