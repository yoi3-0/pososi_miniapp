{"version":3,"sources":["../../../../../src/components/Typography/Text/Text.tsx"],"names":["warn","Text","children","weight","Component","getRootRef","restProps","platform","process","env","NODE_ENV"],"mappings":";;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AAEA;;AAOA,IAAMA,IAAI,GAAG,wBAAS,MAAT,CAAb;;AACA,IAAMC,IAAmB,GAAG,SAAtBA,IAAsB,OAMX;AAAA,MALfC,QAKe,QALfA,QAKe;AAAA,MAJfC,MAIe,QAJfA,MAIe;AAAA,4BAHfC,SAGe;AAAA,MAHfA,SAGe,+BAHH,MAGG;AAAA,MAFfC,UAEe,QAFfA,UAEe;AAAA,MADZC,SACY;AACf,MAAMC,QAAQ,GAAG,+BAAjB;;AAEA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0C,OAAON,SAAP,KAAqB,QAA/D,IAA2EC,UAA/E,EAA2F;AACzFL,IAAAA,IAAI,CAAC,iDAAD,CAAJ;AACD;;AAED,SACE,qCAAC,SAAD,6BACMM,SADN;AAEE,IAAA,GAAG,EAAED,UAFP;AAGE,IAAA,SAAS,EAAE,4BAAW,gCAAa,MAAb,EAAqBE,QAArB,CAAX,oBAAsDJ,MAAtD;AAHb,MAKGD,QALH,CADF;AASD,CAtBD;;eAwBeD,I","sourcesContent":["import { AllHTMLAttributes, ElementType, FC } from 'react';\nimport { usePlatform } from '../../../hooks/usePlatform';\nimport { classNames } from '../../../lib/classNames';\nimport { getClassName } from '../../../helpers/getClassName';\nimport { HasRootRef } from '../../../types';\nimport { warnOnce } from '../../../lib/warnOnce';\n\nexport interface TextProps extends AllHTMLAttributes<HTMLElement>, HasRootRef<HTMLDivElement> {\n  weight: 'regular' | 'medium' | 'semibold';\n  Component?: ElementType;\n}\n\nconst warn = warnOnce('Text');\nconst Text: FC<TextProps> = ({\n  children,\n  weight,\n  Component = 'span',\n  getRootRef,\n  ...restProps\n}: TextProps) => {\n  const platform = usePlatform();\n\n  if (process.env.NODE_ENV === 'development' && typeof Component !== 'string' && getRootRef) {\n    warn('getRootRef can only be used with DOM components');\n  }\n\n  return (\n    <Component\n      {...restProps}\n      ref={getRootRef}\n      vkuiClass={classNames(getClassName('Text', platform), `Text--w-${weight}`)}\n    >\n      {children}\n    </Component>\n  );\n};\n\nexport default Text;\n"],"file":"Text.js"}