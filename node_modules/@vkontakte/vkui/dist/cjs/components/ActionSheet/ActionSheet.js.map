{"version":3,"sources":["../../../../src/components/ActionSheet/ActionSheet.tsx"],"names":["ActionSheet","props","closing","setState","waitTransitionFinish","onClose","action","autoclose","event","persist","elRef","React","createRef","eventHandler","isDesktop","transitionEvent","supported","current","removeEventListener","name","addEventListener","clearTimeout","transitionFinishTimeout","setTimeout","platform","ANDROID","VKCOM","children","className","header","text","style","viewWidth","viewHeight","hasMouse","iosCloseItem","restProps","DropdownComponent","ActionSheetDropdownDesktop","ActionSheetDropdown","state","onItemClick","IOS","ViewWidth","SMALL_TABLET","ViewHeight","MEDIUM","Component","popupDirection"],"mappings":"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","sourcesContent":["import React, { Component, HTMLAttributes } from 'react';\nimport PopoutWrapper from '../PopoutWrapper/PopoutWrapper';\nimport { transitionEvent } from '../../lib/supportEvents';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { withAdaptivity, AdaptivityProps, ViewWidth, ViewHeight } from '../../hoc/withAdaptivity';\nimport { HasPlatform } from '../../types';\nimport { ANDROID, IOS, VKCOM } from '../../lib/platform';\nimport ActionSheetDropdownDesktop from './ActionSheetDropdownDesktop';\nimport ActionSheetDropdown from './ActionSheetDropdown';\nimport { hasReactNode } from '../../lib/utils';\nimport { ActionSheetContext, ItemClickHandler } from './ActionSheetContext';\nimport Caption from '../Typography/Caption/Caption';\n\nexport type PopupDirectionFunction = (elRef: React.RefObject<HTMLDivElement>) => 'top' | 'bottom';\n\nexport interface ActionSheetProps extends HTMLAttributes<HTMLDivElement>, HasPlatform, AdaptivityProps {\n  header?: React.ReactNode;\n  text?: React.ReactNode;\n  onClose?: VoidFunction;\n  /**\n   * Desktop only\n   */\n  toggleRef: Element;\n  /**\n   * Desktop only\n   */\n  popupDirection?: 'top' | 'bottom' | PopupDirectionFunction;\n  /**\n   * iOS only\n   */\n  iosCloseItem: React.ReactNode;\n}\n\nexport interface ActionSheetState {\n  closing: boolean;\n}\n\nexport type CloseCallback = () => void;\n\nexport type AnimationEndCallback = (e?: AnimationEvent) => void;\n\nclass ActionSheet extends Component<ActionSheetProps, ActionSheetState> {\n  constructor(props: ActionSheetProps) {\n    super(props);\n    this.elRef = React.createRef();\n  }\n\n  state: ActionSheetState = {\n    closing: false,\n  };\n\n  elRef: React.RefObject<HTMLDivElement>;\n\n  private transitionFinishTimeout: ReturnType<typeof setTimeout>;\n\n  static defaultProps: Partial<ActionSheetProps> = {\n    popupDirection: 'bottom',\n  };\n\n  onClose: CloseCallback = () => {\n    this.setState({ closing: true });\n    this.waitTransitionFinish(this.props.onClose);\n  };\n\n  onItemClick: ItemClickHandler = (action, autoclose) => (event) => {\n    event.persist();\n\n    if (autoclose) {\n      this.setState({ closing: true });\n      this.waitTransitionFinish(() => {\n        this.props.onClose();\n        action && action(event);\n      });\n    } else {\n      action && action(event);\n    }\n  };\n\n  get isDesktop() {\n    const { viewWidth, viewHeight, hasMouse } = this.props;\n    return viewWidth >= ViewWidth.SMALL_TABLET && (hasMouse || viewHeight >= ViewHeight.MEDIUM);\n  }\n\n  waitTransitionFinish(eventHandler: AnimationEndCallback) {\n    if (this.isDesktop) {\n      return eventHandler();\n    }\n\n    if (transitionEvent.supported) {\n      this.elRef.current.removeEventListener(transitionEvent.name, eventHandler);\n      this.elRef.current.addEventListener(transitionEvent.name, eventHandler);\n    } else {\n      clearTimeout(this.transitionFinishTimeout);\n      this.transitionFinishTimeout = setTimeout(eventHandler, this.props.platform === ANDROID || this.props.platform === VKCOM ? 200 : 300);\n    }\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      header,\n      text,\n      style,\n      platform,\n      viewWidth,\n      viewHeight,\n      hasMouse,\n      iosCloseItem,\n      ...restProps\n    } = this.props;\n\n    const isDesktop = this.isDesktop;\n\n    const DropdownComponent = isDesktop\n      ? ActionSheetDropdownDesktop\n      : ActionSheetDropdown;\n\n    return (\n      <PopoutWrapper\n        closing={this.state.closing}\n        alignY=\"bottom\"\n        className={className}\n        style={style}\n        onClick={!isDesktop ? this.onClose : null}\n        hasMask={!isDesktop}\n        fixed={!isDesktop}\n      >\n        <ActionSheetContext.Provider\n          value={{\n            onItemClick: this.onItemClick,\n            isDesktop,\n          }}\n        >\n          <DropdownComponent\n            closing={this.state.closing}\n            onClose={this.onClose}\n            elementRef={this.elRef}\n            {...restProps}\n          >\n            {(hasReactNode(header) || hasReactNode(text)) &&\n              <header vkuiClass=\"ActionSheet__header\">\n                {hasReactNode(header) &&\n                  <Caption level=\"1\" weight={platform === IOS ? 'semibold' : 'medium'} vkuiClass=\"ActionSheet__title\">\n                    {header}\n                  </Caption>\n                }\n                {hasReactNode(text) && <Caption level=\"1\" weight=\"regular\" vkuiClass=\"ActionSheet__text\">{text}</Caption>}\n              </header>\n            }\n            {children}\n            {platform === IOS && !isDesktop && iosCloseItem}\n          </DropdownComponent>\n        </ActionSheetContext.Provider>\n      </PopoutWrapper>\n    );\n  }\n}\n\nexport default withAdaptivity(withPlatform(ActionSheet), {\n  viewWidth: true,\n  viewHeight: true,\n  hasMouse: true,\n});\n"],"file":"ActionSheet.js"}