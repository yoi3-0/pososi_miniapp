{"version":3,"sources":["../../../../src/components/ChipsSelect/ChipsSelect.tsx"],"names":["FOCUS_ACTION_NEXT","FOCUS_ACTION_PREV","ChipsSelect","props","style","onFocus","onKeyDown","className","fetching","renderOption","emptyText","getRef","getRootRef","disabled","placeholder","tabIndex","getOptionValue","getOptionLabel","showSelected","getNewOptionData","renderChip","popupDirection","creatable","filterFn","inputValue","creatableText","sizeY","closeAfterSelect","onChangeStart","after","restProps","document","scrollBoxRef","rootRef","fieldValue","selectedOptions","opened","setOpened","addOptionFromInput","filteredOptions","addOption","handleInputChange","clearInput","focusedOption","setFocusedOption","focusedOptionIndex","setFocusedOptionIndex","showCreatable","Boolean","length","handleFocus","e","handleClickOutside","rootNode","current","target","contains","chipsSelectOptions","scrollToElement","index","center","dropdown","item","dropdownHeight","offsetHeight","scrollTop","itemTop","offsetTop","itemHeight","focusOptionByIndex","oldIndex","focusOption","nextIndex","type","handleKeyDown","key","defaultPrevented","preventDefault","option","includes","findIndex","value","renderChipWrapper","renderChipProps","onRemove","onRemoveWrapper","map","label","hovered","selected","find","selectedOption","children","onMouseDown","onMouseEnter","chipsSelectDefaultProps","chipsInputDefaultProps","noop","options","toLowerCase","startsWith","defaultProps"],"mappings":"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","sourcesContent":["import React, {\n  useRef,\n  FocusEvent,\n  ReactNode,\n  useEffect,\n  Fragment,\n} from 'react';\nimport { Icon20Dropdown } from '@vkontakte/icons';\nimport { classNames } from '../../lib/classNames';\nimport Spinner from '../Spinner/Spinner';\nimport CustomScrollView from '../CustomScrollView/CustomScrollView';\nimport ChipsInput, { ChipsInputOption, ChipsInputProps, ChipsInputValue, RenderChip, chipsInputDefaultProps } from '../ChipsInput/ChipsInput';\nimport CustomSelectOption, { CustomSelectOptionProps } from '../CustomSelectOption/CustomSelectOption';\nimport { useChipsSelect } from './useChipsSelect';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport { noop } from '../../lib/utils';\nimport { useDOM } from '../../lib/dom';\nimport Caption from '../Typography/Caption/Caption';\nimport { prefixClass } from '../../lib/prefixClass';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\n\nexport interface ChipsSelectProps<Option extends ChipsInputOption> extends ChipsInputProps<Option>, AdaptivityProps {\n  popupDirection?: 'top' | 'bottom';\n  options?: Option[];\n  filterFn?: (value?: string, option?: Option, getOptionLabel?: Pick<ChipsInputProps<ChipsInputOption>, 'getOptionLabel'>['getOptionLabel']) => boolean;\n  /**\n   * Возможность создавать чипы которых нет в списке (по enter или с помощью пункта в меню, см creatableText)\n   */\n  creatable?: boolean;\n  /**\n   * Отрисовка лоадера вместо списка опций в выпадающем списке\n   */\n  fetching?: boolean;\n  renderOption?: (props: CustomSelectOptionProps) => ReactNode;\n  /**\n   * Показывать или скрывать уже выбранные опции\n   */\n  showSelected?: boolean;\n  /**\n   * Текст для пункта создающего чипы при клике, так же отвечает за то будет ли показан этот пункт (показывается после того как в списке не отсанется опций)\n   */\n  creatableText?: string;\n  /**\n   * Текст который показывается если список опций пуст\n   */\n  emptyText?: string;\n  /**\n   * Событие срабатывающее перед onChange\n   */\n  onChangeStart?: (e: React.MouseEvent | React.KeyboardEvent, option: Option) => void;\n  /**\n   * Закрытие выпадающиего списка после выбора элемента\n   */\n  closeAfterSelect?: boolean;\n}\n\ntype focusActionType = 'next' | 'prev';\n\nconst FOCUS_ACTION_NEXT: focusActionType = 'next';\nconst FOCUS_ACTION_PREV: focusActionType = 'prev';\n\nconst ChipsSelect = <Option extends ChipsInputOption>(props: ChipsSelectProps<Option>) => {\n  const {\n    style, onFocus, onKeyDown, className, fetching, renderOption, emptyText,\n    getRef, getRootRef, disabled, placeholder, tabIndex, getOptionValue, getOptionLabel, showSelected,\n    getNewOptionData, renderChip, popupDirection, creatable, filterFn, inputValue, creatableText, sizeY,\n    closeAfterSelect, onChangeStart, after, ...restProps\n  } = props;\n\n  const { document } = useDOM();\n\n  const scrollBoxRef = useRef<HTMLDivElement>(null);\n  const rootRef = useExternRef(getRef);\n  const {\n    fieldValue, selectedOptions, opened, setOpened, addOptionFromInput,\n    filteredOptions, addOption, handleInputChange, clearInput,\n    focusedOption, setFocusedOption, focusedOptionIndex, setFocusedOptionIndex,\n  } = useChipsSelect(props);\n\n  const showCreatable = Boolean(creatable && creatableText && !filteredOptions.length && fieldValue);\n\n  const handleFocus = (e: FocusEvent<HTMLInputElement>) => {\n    setOpened(true);\n    setFocusedOptionIndex(0);\n    onFocus(e);\n  };\n\n  const handleClickOutside = (e: MouseEvent) => {\n    const { current: rootNode } = rootRef;\n    if (rootNode && e.target !== rootNode && !rootNode.contains(e.target as Node)) {\n      setOpened(false);\n    }\n  };\n\n  const chipsSelectOptions = useRef<HTMLElement[]>([]).current;\n\n  const scrollToElement = (index: number, center = false) => {\n    const dropdown = scrollBoxRef.current;\n    const item = chipsSelectOptions[index];\n\n    if (!item) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  };\n\n  const focusOptionByIndex = (index: number, oldIndex: number) => {\n    const { length } = filteredOptions;\n\n    if (index < 0) {\n      index = length - 1;\n    } else if (index >= length) {\n      index = 0;\n    }\n\n    if (index === oldIndex) {\n      return;\n    }\n\n    scrollToElement(index);\n    setFocusedOptionIndex(index);\n  };\n\n  const focusOption = (nextIndex: number|null, type: focusActionType) => {\n    let index = typeof nextIndex !== 'number' ? -1 : nextIndex;\n\n    if (type === FOCUS_ACTION_NEXT) {\n      index = index + 1;\n    } else if (type === FOCUS_ACTION_PREV) {\n      index = index - 1;\n    }\n\n    focusOptionByIndex(index, focusedOptionIndex);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    onKeyDown(e);\n\n    if (e.key === 'ArrowUp' && !e.defaultPrevented) {\n      e.preventDefault();\n\n      if (!opened) {\n        setOpened(true);\n        setFocusedOptionIndex(0);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_PREV);\n      }\n    }\n\n    if (e.key === 'ArrowDown' && !e.defaultPrevented) {\n      e.preventDefault();\n\n      if (!opened) {\n        setOpened(true);\n        setFocusedOptionIndex(0);\n      } else {\n        focusOption(focusedOptionIndex, FOCUS_ACTION_NEXT);\n      }\n    }\n\n    if (e.key === 'Enter' && !e.defaultPrevented && opened) {\n      const option = filteredOptions[focusedOptionIndex];\n\n      if (option) {\n        onChangeStart(e, option);\n\n        if (!e.defaultPrevented) {\n          addOption(option);\n          setFocusedOptionIndex(null);\n          clearInput();\n          closeAfterSelect && setOpened(false);\n          e.preventDefault();\n        }\n      } else if (!creatable) {\n        e.preventDefault();\n      }\n    }\n\n    if (['Escape', 'Tab'].includes(e.key) && !e.defaultPrevented && opened) {\n      setOpened(false);\n    }\n  };\n\n  useEffect(() => {\n    if (filteredOptions[focusedOptionIndex]) {\n      setFocusedOption(filteredOptions[focusedOptionIndex]);\n    } else if (focusedOptionIndex === null || focusedOptionIndex === 0) {\n      setFocusedOption(null);\n    }\n  }, [focusedOptionIndex, filteredOptions]);\n\n  useEffect(() => {\n    const index = focusedOption ? filteredOptions.findIndex(({ value }) => value === focusedOption.value) : -1;\n\n    if (index === -1 && !!filteredOptions.length && !showCreatable && closeAfterSelect) {\n      setFocusedOption(filteredOptions[0]);\n    }\n  }, [filteredOptions, focusedOption, showCreatable, closeAfterSelect]);\n\n  useGlobalEventListener(document, 'click', handleClickOutside);\n\n  const renderChipWrapper = (renderChipProps: RenderChip<Option>) => {\n    const { onRemove } = renderChipProps;\n    const onRemoveWrapper = (e: React.MouseEvent, value: ChipsInputValue) => {\n      e.preventDefault();\n      onRemove(e, value);\n    };\n\n    return renderChip({ ...renderChipProps, onRemove: onRemoveWrapper });\n  };\n\n  return (\n    <div\n      vkuiClass={classNames('ChipsSelect', `ChipsSelect--sizeY-${sizeY}`)}\n      ref={rootRef}\n      style={style}\n      className={className}\n    >\n      <ChipsInput\n        {...restProps}\n        tabIndex={tabIndex}\n        value={selectedOptions}\n        inputValue={fieldValue}\n        getNewOptionData={getNewOptionData}\n        getOptionLabel={getOptionLabel}\n        getOptionValue={getOptionValue}\n        renderChip={renderChipWrapper}\n        onFocus={handleFocus}\n        onKeyDown={handleKeyDown}\n        placeholder={placeholder}\n        vkuiClass={classNames({\n          ['ChipsSelect__open']: opened,\n          ['ChipsSelect__open--popupDirectionTop']: popupDirection === 'top',\n        })}\n        getRef={getRef}\n        disabled={disabled}\n        onInputChange={handleInputChange}\n        after={<Icon20Dropdown />}\n      />\n      {opened &&\n        <div\n          vkuiClass={classNames('ChipsSelect__options', {\n            ['ChipsSelect__options--popupDirectionTop']: popupDirection === 'top',\n          })}\n          onMouseLeave={() => setFocusedOptionIndex(null)}\n        >\n          <CustomScrollView boxRef={scrollBoxRef}>\n            {fetching ? (\n              <div vkuiClass=\"ChipsSelect__fetching\">\n                <Spinner size=\"small\" />\n              </div>\n            ) : (\n              <Fragment>\n                {showCreatable && (\n                  <CustomSelectOption\n                    hovered={focusedOptionIndex === 0}\n                    onMouseDown={addOptionFromInput}\n                    onMouseEnter={() => setFocusedOptionIndex(0)}\n                  >\n                    {creatableText}\n                  </CustomSelectOption>\n                )}\n                {!filteredOptions?.length && !showCreatable && emptyText ? (\n                  <Caption level=\"1\" weight=\"regular\" vkuiClass=\"ChipsSelect__empty\">{emptyText}</Caption>\n                ) :\n                  filteredOptions.map((option: Option, index: number) => {\n                    const label = getOptionLabel(option);\n                    const hovered = focusedOption && getOptionValue(option) === getOptionValue(focusedOption);\n                    const selected = selectedOptions.find((selectedOption: Option) => {\n                      return getOptionValue(selectedOption) === getOptionValue(option);\n                    });\n\n                    return (\n                      <React.Fragment key={getOptionValue(option)}>\n                        {renderOption({\n                          className: prefixClass('ChipsSelect__option'),\n                          option,\n                          hovered,\n                          children: label,\n                          selected: !!selected,\n                          getRootRef: (e) => chipsSelectOptions[index] = e,\n                          onMouseDown: (e: React.MouseEvent<HTMLDivElement>) => {\n                            onChangeStart(e, option);\n\n                            if (!e.defaultPrevented) {\n                              closeAfterSelect && setOpened(false);\n                              addOption(option);\n                              clearInput();\n                            }\n                          },\n                          onMouseEnter: () => setFocusedOptionIndex(index),\n                        })}\n                      </React.Fragment>\n                    );\n                  })\n                }\n              </Fragment>\n            )}\n          </CustomScrollView>\n        </div>\n      }\n    </div>\n  );\n};\n\nconst chipsSelectDefaultProps: ChipsSelectProps<any> = {\n  ...chipsInputDefaultProps,\n  emptyText: 'Ничего не найдено',\n  creatableText: 'Создать значение',\n  onChangeStart: noop,\n  creatable: false,\n  fetching: false,\n  showSelected: true,\n  closeAfterSelect: true,\n  options: [],\n  filterFn: (value?: string, option?: ChipsInputOption, getOptionLabel?: Pick<ChipsInputProps<ChipsInputOption>, 'getOptionLabel'>['getOptionLabel']) => {\n    return (\n      !value || value && getOptionLabel(option)?.toLowerCase()?.startsWith(value?.toLowerCase())\n    );\n  },\n  renderOption(props: CustomSelectOptionProps): ReactNode {\n    return (\n      <CustomSelectOption {...props} />\n    );\n  },\n};\n\nChipsSelect.defaultProps = chipsSelectDefaultProps;\n\nexport default withAdaptivity(ChipsSelect, { sizeY: true });\n"],"file":"ChipsSelect.js"}