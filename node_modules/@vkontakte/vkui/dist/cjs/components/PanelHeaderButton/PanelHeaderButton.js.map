{"version":3,"sources":["../../../../src/components/PanelHeaderButton/PanelHeaderButton.tsx"],"names":["ButtonTypography","primary","children","platform","IOS","VKCOM","PanelHeaderButton","label","restProps","isPrimitive","isPrimitiveLabel","hoverMode","activeMode","ANDROID","href","defaultProps"],"mappings":";;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAWA,IAAMA,gBAA0D,GAAG,SAA7DA,gBAA6D,OAAkD;AAAA,MAA/CC,OAA+C,QAA/CA,OAA+C;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AACnH,MAAMC,QAAQ,GAAG,+BAAjB;;AAEA,MAAIA,QAAQ,KAAKC,aAAjB,EAAsB;AACpB,WACE,qCAAC,cAAD;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAwB,MAAA,KAAK,EAAC,GAA9B;AAAkC,MAAA,MAAM,EAAEH,OAAO,GAAG,UAAH,GAAgB;AAAjE,OACGC,QADH,CADF;AAKD;;AAED,SACE,qCAAC,aAAD;AAAM,IAAA,MAAM,EAAEC,QAAQ,KAAKE,eAAb,GAAqB,SAArB,GAAiC;AAA/C,KACGH,QADH,CADF;AAKD,CAhBD;;AAkBO,IAAMI,iBAA4D,GAAG,SAA/DA,iBAA+D,QAK9C;AAAA,MAJ5BJ,QAI4B,SAJ5BA,QAI4B;AAAA,MAH5BD,OAG4B,SAH5BA,OAG4B;AAAA,MAF5BM,KAE4B,SAF5BA,KAE4B;AAAA,MADzBC,SACyB;AAC5B,MAAMC,WAAW,GAAG,iCAAqBP,QAArB,CAApB;AACA,MAAMQ,gBAAgB,GAAG,iCAAqBH,KAArB,CAAzB;AACA,MAAMJ,QAAQ,GAAG,+BAAjB;AAEA,MAAIQ,SAAJ;AACA,MAAIC,UAAJ;;AAEA,UAAQT,QAAR;AACE,SAAKU,iBAAL;AACEF,MAAAA,SAAS,GAAG,YAAZ;AACAC,MAAAA,UAAU,GAAG,YAAb;AACA;;AACF,SAAKR,aAAL;AACEO,MAAAA,SAAS,GAAG,YAAZ;AACAC,MAAAA,UAAU,GAAG,SAAb;AACA;;AACF,SAAKP,eAAL;AACEM,MAAAA,SAAS,GAAG,0BAAZ;AACAC,MAAAA,UAAU,GAAG,2BAAb;AAXJ;;AAcA,SACE,qCAAC,iBAAD,6BACMJ,SADN;AAEE,IAAA,SAAS,EAAEG,SAFb;AAGE,IAAA,SAAS,EAAEH,SAAS,CAACM,IAAV,GAAiB,GAAjB,GAAuB,QAHpC;AAIE,IAAA,iBAAiB,EAAE,GAJrB;AAKE,IAAA,UAAU,EAAEF,UALd;AAME,IAAA,SAAS,EAAE,4BACT,gCAAa,mBAAb,EAAkCT,QAAlC,CADS,EAET;AACE,oCAA8BF,OADhC;AAEE,sCAAgCQ,WAFlC;AAGE,yCAAmC,CAACA,WAAD,IAAgB,CAACC;AAHtD,KAFS;AANb,MAeGD,WAAW,GACR,qCAAC,gBAAD;AAAkB,IAAA,OAAO,EAAER;AAA3B,KAAqCC,QAArC,CADQ,GAERA,QAjBN,EAmBGQ,gBAAgB,GACb,qCAAC,gBAAD;AAAkB,IAAA,OAAO,EAAET;AAA3B,KAAqCM,KAArC,CADa,GAEbA,KArBN,CADF;AA0BD,CArDM;;;AAuDPD,iBAAiB,CAACS,YAAlB,GAAiC;AAC/B,aAAW,KADoB;AAE/B,gBAAc;AAFiB,CAAjC","sourcesContent":["import { AllHTMLAttributes, FunctionComponent, ReactNode } from 'react';\nimport Tappable, { TappableProps } from '../Tappable/Tappable';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { isPrimitiveReactNode } from '../../lib/utils';\nimport { IOS, VKCOM, ANDROID } from '../../lib/platform';\nimport Text from '../Typography/Text/Text';\nimport Title from '../Typography/Title/Title';\n\nexport interface PanelHeaderButtonProps extends Omit<TappableProps, 'label'> {\n  primary?: boolean;\n  label?: ReactNode;\n}\n\ninterface ButtonTypographyProps extends AllHTMLAttributes<HTMLElement> {\n  primary?: PanelHeaderButtonProps['primary'];\n}\n\nconst ButtonTypography: FunctionComponent<ButtonTypographyProps> = ({ primary, children }: ButtonTypographyProps) => {\n  const platform = usePlatform();\n\n  if (platform === IOS) {\n    return (\n      <Title Component=\"span\" level=\"3\" weight={primary ? 'semibold' : 'regular'}>\n        {children}\n      </Title>\n    );\n  }\n\n  return (\n    <Text weight={platform === VKCOM ? 'regular' : 'medium'}>\n      {children}\n    </Text>\n  );\n};\n\nexport const PanelHeaderButton: FunctionComponent<PanelHeaderButtonProps> = ({\n  children,\n  primary,\n  label,\n  ...restProps\n}: PanelHeaderButtonProps) => {\n  const isPrimitive = isPrimitiveReactNode(children);\n  const isPrimitiveLabel = isPrimitiveReactNode(label);\n  const platform = usePlatform();\n\n  let hoverMode;\n  let activeMode;\n\n  switch (platform) {\n    case ANDROID:\n      hoverMode = 'background';\n      activeMode = 'background';\n      break;\n    case IOS:\n      hoverMode = 'background';\n      activeMode = 'opacity';\n      break;\n    case VKCOM:\n      hoverMode = 'PanelHeaderButton--hover';\n      activeMode = 'PanelHeaderButton--active';\n  }\n\n  return (\n    <Tappable\n      {...restProps}\n      hoverMode={hoverMode}\n      Component={restProps.href ? 'a' : 'button'}\n      activeEffectDelay={200}\n      activeMode={activeMode}\n      vkuiClass={classNames(\n        getClassName('PanelHeaderButton', platform),\n        {\n          'PanelHeaderButton--primary': primary,\n          'PanelHeaderButton--primitive': isPrimitive,\n          'PanelHeaderButton--notPrimitive': !isPrimitive && !isPrimitiveLabel,\n        },\n      )}\n    >\n      {isPrimitive\n        ? <ButtonTypography primary={primary}>{children}</ButtonTypography>\n        : children\n      }\n      {isPrimitiveLabel\n        ? <ButtonTypography primary={primary}>{label}</ButtonTypography>\n        : label\n      }\n    </Tappable>\n  );\n};\n\nPanelHeaderButton.defaultProps = {\n  'primary': false,\n  'aria-label': 'Закрыть',\n};\n"],"file":"PanelHeaderButton.js"}