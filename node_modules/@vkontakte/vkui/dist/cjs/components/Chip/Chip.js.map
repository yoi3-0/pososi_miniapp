{"version":3,"sources":["../../../../src/components/Chip/Chip.tsx"],"names":["Chip","props","value","option","onRemove","removable","before","after","children","restProps","onRemoveWrapper","event","title","defaultProps","noop"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAaA,IAAMA,IAAmB,GAAG,SAAtBA,IAAsB,CAACC,KAAD,EAAsB;AAAA,MACxCC,KADwC,GACsCD,KADtC,CACxCC,KADwC;AAAA,MACjCC,MADiC,GACsCF,KADtC,CACjCE,MADiC;AAAA,MACzBC,QADyB,GACsCH,KADtC,CACzBG,QADyB;AAAA,MACfC,SADe,GACsCJ,KADtC,CACfI,SADe;AAAA,MACJC,MADI,GACsCL,KADtC,CACJK,MADI;AAAA,MACIC,KADJ,GACsCN,KADtC,CACIM,KADJ;AAAA,MACWC,QADX,GACsCP,KADtC,CACWO,QADX;AAAA,MACwBC,SADxB,0CACsCR,KADtC;AAEhD,MAAMS,eAAe,GAAG,wBAAY,UAACC,KAAD,EAAuB;AACzDP,IAAAA,QAAQ,CAACO,KAAD,EAAQT,KAAR,CAAR;AACD,GAFuB,EAErB,CAACE,QAAD,EAAWF,KAAX,CAFqB,CAAxB;AAGA,MAAMU,KAAK,GAAG,iCAAqBJ,QAArB,CAAd;AAEA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAA0BC,SAA1B,GACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACG,yBAAaH,MAAb,KAAwB;AAAK,IAAA,SAAS,EAAC;AAAf,KAA+BA,MAA/B,CAD3B,EAEE,qCAAC,gBAAD;AAAS,IAAA,KAAK,EAAC,GAAf;AAAmB,IAAA,MAAM,EAAC,SAA1B;AAAoC,IAAA,SAAS,EAAC,eAA9C;AAA8D,IAAA,KAAK,EAAEM;AAArE,KAA6EJ,QAA7E,CAFF,EAGG,yBAAaD,KAAb,KAAuB;AAAK,IAAA,SAAS,EAAC;AAAf,KAA8BA,KAA9B,CAH1B,EAIGF,SAAS,IACR;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAE,CAFZ;AAGE,IAAA,SAAS,EAAC,cAHZ;AAIE,IAAA,OAAO,EAAEK;AAJX,KAME,qCAAC,mBAAD;AAAc,IAAA,IAAI,EAAC;AAAnB,IANF,CALJ,CADF,CADF;AAmBD,CA1BD;;AA4BAV,IAAI,CAACa,YAAL,GAAoB;AAClBR,EAAAA,SAAS,EAAE,IADO;AAElBC,EAAAA,MAAM,EAAE,IAFU;AAGlBJ,EAAAA,KAAK,EAAE,EAHW;AAIlBE,EAAAA,QAAQ,EAAEU;AAJQ,CAApB;eAOed,I","sourcesContent":["import { FC, HTMLAttributes, ReactNode, useCallback, MouseEvent } from 'react';\nimport { Icon16Cancel } from '@vkontakte/icons';\nimport { getTitleFromChildren, hasReactNode, noop } from '../../lib/utils';\nimport Caption from '../Typography/Caption/Caption';\n\ntype ChipValue = string | number;\n\nexport interface ChipProps extends HTMLAttributes<HTMLDivElement> {\n  value: ChipValue;\n  option?: { value?: ChipValue };\n  onRemove?: (event?: MouseEvent, value?: ChipValue) => void;\n  removable?: boolean;\n  before?: ReactNode;\n  after?: ReactNode;\n}\n\nconst Chip: FC<ChipProps> = (props: ChipProps) => {\n  const { value, option, onRemove, removable, before, after, children, ...restProps } = props;\n  const onRemoveWrapper = useCallback((event: MouseEvent) => {\n    onRemove(event, value);\n  }, [onRemove, value]);\n  const title = getTitleFromChildren(children);\n\n  return (\n    <div vkuiClass=\"Chip\" {...restProps}>\n      <div vkuiClass=\"Chip__in\">\n        {hasReactNode(before) && <div vkuiClass=\"Chip__before\">{before}</div>}\n        <Caption level=\"1\" weight=\"regular\" vkuiClass=\"Chip__content\" title={title}>{children}</Caption>\n        {hasReactNode(after) && <div vkuiClass=\"Chip__after\">{after}</div>}\n        {removable &&\n          <div\n            role=\"button\"\n            tabIndex={0}\n            vkuiClass=\"Chip__remove\"\n            onClick={onRemoveWrapper}\n          >\n            <Icon16Cancel fill=\"var(--icon_secondary)\" />\n          </div>\n        }\n      </div>\n    </div>\n  );\n};\n\nChip.defaultProps = {\n  removable: true,\n  before: null,\n  value: '',\n  onRemove: noop,\n};\n\nexport default Chip;\n"],"file":"Chip.js"}