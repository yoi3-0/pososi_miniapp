{"version":3,"sources":["../../../../src/components/WriteBarIcon/WriteBarIcon.tsx"],"names":["WriteBarIcon","props","platform","mode","children","count","restProps","icon","IOS","disabled"],"mappings":";;;;;;;;;;;;;;;;;AACA;;AAQA;;AACA;;AACA;;AACA;;AACA;;AAmBO,IAAMA,YAAmC,GAAG,SAAtCA,YAAsC,CAACC,KAAD,EAA8B;AAAA;;AAC/E,MAAMC,QAAQ,GAAG,+BAAjB;AAD+E,MAG7EC,IAH6E,GAO3EF,KAP2E,CAG7EE,IAH6E;AAAA,MAI7EC,QAJ6E,GAO3EH,KAP2E,CAI7EG,QAJ6E;AAAA,MAK7EC,KAL6E,GAO3EJ,KAP2E,CAK7EI,KAL6E;AAAA,MAM1EC,SAN0E,0CAO3EL,KAP2E;AAS/E,MAAIM,IAAJ;;AAEA,UAAQJ,IAAR;AACE,SAAK,QAAL;AACEI,MAAAA,IAAI,GAAGL,QAAQ,KAAKM,aAAb,GAAmB,qCAAC,6BAAD,OAAnB,GAAgD,qCAAC,0BAAD,OAAvD;AACA;;AAEF,SAAK,MAAL;AACED,MAAAA,IAAI,GAAGL,QAAQ,KAAKM,aAAb,GAAmB,qCAAC,yBAAD,OAAnB,GAA4C,qCAAC,iBAAD,OAAnD;AACA;;AAEF,SAAK,MAAL;AACED,MAAAA,IAAI,GAAGL,QAAQ,KAAKM,aAAb,GAAmB,qCAAC,yBAAD,OAAnB,GAA4C,qCAAC,+BAAD,OAAnD;AACA;;AAEF;AACE;AAdJ;;AAiBA,SACE;AACE,IAAA,IAAI,EAAC;AADP,KAEMF,SAFN;AAGE,IAAA,SAAS,EAAE,6BAAW,gCAAa,cAAb,EAA6BJ,QAA7B,CAAX,wFACSC,IADT,GACkB,CAAC,CAACA,IADpB,8CAET,wBAFS,EAEiBG,SAAS,CAACG,QAF3B;AAHb,MAQGF,IAAI,IAAIH,QARX,EASGC,KAAK,IAAI,qCAAC,gBAAD;AAAS,IAAA,SAAS,EAAC,qBAAnB;AAAyC,IAAA,MAAM,EAAC,SAAhD;AAA0D,IAAA,KAAK,EAAC;AAAhE,KAAqEA,KAArE,CATZ,CADF;AAaD,CAzCM","sourcesContent":["import { ButtonHTMLAttributes, FC, ReactNode } from 'react';\nimport {\n  Icon24Send,\n  Icon28AddCircleOutline,\n  Icon28AttachOutline,\n  Icon28CheckCircleOutline,\n  Icon48WritebarDone,\n  Icon48WritebarSend,\n} from '@vkontakte/icons';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { IOS } from '../../lib/platform';\nimport Caption from '../Typography/Caption/Caption';\n\nexport interface WriteBarIconProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * Предустановленные типы кнопок в WriteBar для отрисовки иконки в зависимости от платформы.\n   * Если передать валидное значение для этого свойства, `children` игнорируется.\n   *\n   * - `attach` – иконка прикрепления.\n   * - `send` – иконка отправки.\n   * - `done` – иконка отправки в режиме редактирования.\n   */\n  mode?: 'attach' | 'send' | 'done';\n  /**\n   * Значение счётчика для кнопки. Например, для количества прикреплённых файлов.\n   */\n  count?: number;\n  'aria-label'?: string;\n}\n\nexport const WriteBarIcon: FC<WriteBarIconProps> = (props: WriteBarIconProps) => {\n  const platform = usePlatform();\n  const {\n    mode,\n    children,\n    count,\n    ...restProps\n  } = props;\n\n  let icon: ReactNode;\n\n  switch (mode) {\n    case 'attach':\n      icon = platform === IOS ? <Icon28AddCircleOutline /> : <Icon28AttachOutline />;\n      break;\n\n    case 'send':\n      icon = platform === IOS ? <Icon48WritebarSend /> : <Icon24Send />;\n      break;\n\n    case 'done':\n      icon = platform === IOS ? <Icon48WritebarDone /> : <Icon28CheckCircleOutline />;\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      {...restProps}\n      vkuiClass={classNames(getClassName('WriteBarIcon', platform), {\n        [`WriteBarIcon--${mode}`]: !!mode,\n        'WriteBarIcon--disabled': restProps.disabled,\n      })}\n    >\n      {icon || children}\n      {count && <Caption vkuiClass=\"WriteBarIcon__count\" weight=\"regular\" level=\"2\">{count}</Caption>}\n    </button>\n  );\n};\n"],"file":"WriteBarIcon.js"}