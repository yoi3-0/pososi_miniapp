"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.PanelHeaderContext = void 0;

var _jsxRuntime = require("../../lib/jsxRuntime");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _FixedLayout = _interopRequireDefault(require("../FixedLayout/FixedLayout"));

var _classNames = require("../../lib/classNames");

var _getClassName = require("../../helpers/getClassName");

var _supportEvents = require("../../lib/supportEvents");

var _withAdaptivity = require("../../hoc/withAdaptivity");

var _dom = require("../../lib/dom");

var _withPlatform = require("../../hoc/withPlatform");

var PanelHeaderContext = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(PanelHeaderContext, _Component);

  var _super = (0, _createSuper2.default)(PanelHeaderContext);

  function PanelHeaderContext() {
    var _this;

    (0, _classCallCheck2.default)(this, PanelHeaderContext);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
      closing: false
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "elementRef", /*#__PURE__*/_react.default.createRef());
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "animationFinishTimeout", void 0);
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "startClosing", function (event) {
      if (_this.elementRef && _this.elementRef.current && !_this.elementRef.current.contains(event.target)) {
        _this.props.onClose();

        _this.props.document.removeEventListener('click', _this.startClosing);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onAnimationFinish", function () {
      _this.setState({
        closing: false
      });
    });
    return _this;
  }

  (0, _createClass2.default)(PanelHeaderContext, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.opened && this.isDesktop) {
        this.props.document.addEventListener('click', this.startClosing);
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (this.props.opened !== prevProps.opened || this.props.viewWidth !== prevProps.viewWidth) {
        if (this.props.opened === false && !this.state.closing) {
          this.setState({
            closing: true
          });
          this.waitAnimationFinish(this.onAnimationFinish);
        }

        if (this.isDesktop && this.props.opened) {
          this.props.document.addEventListener('click', this.startClosing);
        } else {
          this.props.document.removeEventListener('click', this.startClosing);
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.isDesktop) {
        this.props.document.removeEventListener('click', this.startClosing);
      }
    }
  }, {
    key: "waitAnimationFinish",
    value: function waitAnimationFinish(eventHandler) {
      if (this.elementRef.current) {
        if (_supportEvents.animationEvent.supported) {
          this.elementRef.current.removeEventListener(_supportEvents.animationEvent.name, eventHandler);
          this.elementRef.current.addEventListener(_supportEvents.animationEvent.name, eventHandler);
        } else {
          clearTimeout(this.animationFinishTimeout);
          this.animationFinishTimeout = setTimeout(eventHandler, 200);
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          opened = _this$props.opened,
          onClose = _this$props.onClose,
          platform = _this$props.platform,
          viewWidth = _this$props.viewWidth,
          hasMouse = _this$props.hasMouse,
          window = _this$props.window,
          document = _this$props.document,
          restProps = (0, _objectWithoutProperties2.default)(_this$props, ["children", "opened", "onClose", "platform", "viewWidth", "hasMouse", "window", "document"]);
      var closing = this.state.closing;
      var baseClassNames = (0, _getClassName.getClassName)('PanelHeaderContext', platform);
      return (0, _jsxRuntime.createScopedElement)(_FixedLayout.default, (0, _extends2.default)({}, restProps, {
        vkuiClass: (0, _classNames.classNames)(baseClassNames, {
          'PanelHeaderContext--opened': opened,
          'PanelHeaderContext--closing': closing,
          'PanelHeaderContext--desktop': this.isDesktop
        }),
        vertical: "top"
      }), (0, _jsxRuntime.createScopedElement)("div", {
        vkuiClass: "PanelHeaderContext__in",
        ref: this.elementRef
      }, (0, _jsxRuntime.createScopedElement)("div", {
        vkuiClass: "PanelHeaderContext__content"
      }, (opened || closing) && children)), !this.isDesktop && (opened || closing) && (0, _jsxRuntime.createScopedElement)("div", {
        onClick: onClose,
        vkuiClass: "PanelHeaderContext__fade"
      }));
    }
  }, {
    key: "isDesktop",
    get: function get() {
      return this.props.viewWidth >= _withAdaptivity.ViewWidth.SMALL_TABLET;
    }
  }]);
  return PanelHeaderContext;
}(_react.Component);

exports.PanelHeaderContext = PanelHeaderContext;
(0, _defineProperty2.default)(PanelHeaderContext, "defaultProps", {
  opened: false
});

var _default = (0, _withAdaptivity.withAdaptivity)((0, _withPlatform.withPlatform)((0, _dom.withDOM)(PanelHeaderContext)), {
  viewWidth: true,
  hasMouse: true
});

exports.default = _default;
//# sourceMappingURL=PanelHeaderContext.js.map