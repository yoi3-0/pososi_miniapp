{"version":3,"sources":["../../../../src/components/PanelHeaderContext/PanelHeaderContext.tsx"],"names":["PanelHeaderContext","closing","React","createRef","event","elementRef","current","contains","target","props","onClose","document","removeEventListener","startClosing","setState","opened","isDesktop","addEventListener","prevProps","viewWidth","state","waitAnimationFinish","onAnimationFinish","eventHandler","animationEvent","supported","name","clearTimeout","animationFinishTimeout","setTimeout","children","platform","hasMouse","window","restProps","baseClassNames","ViewWidth","SMALL_TABLET","Component"],"mappings":"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","sourcesContent":["import React, { Component, HTMLAttributes, RefObject } from 'react';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { animationEvent } from '../../lib/supportEvents';\nimport { withAdaptivity, AdaptivityProps, ViewWidth } from '../../hoc/withAdaptivity';\nimport { DOMProps, withDOM } from '../../lib/dom';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { HasPlatform } from '../../types';\n\nexport interface PanelHeaderContextProps extends HTMLAttributes<HTMLDivElement>, HasPlatform, AdaptivityProps {\n  opened: boolean;\n  onClose: VoidFunction;\n}\n\nexport interface PanelHeaderContextState {\n  closing: boolean;\n}\n\nexport class PanelHeaderContext extends Component<PanelHeaderContextProps & DOMProps, PanelHeaderContextState> {\n  static defaultProps: Partial<PanelHeaderContextProps> = {\n    opened: false,\n  };\n\n  state: PanelHeaderContextState = {\n    closing: false,\n  };\n\n  elementRef: RefObject<HTMLDivElement> = React.createRef();\n\n  private animationFinishTimeout: ReturnType<typeof setTimeout>;\n\n  get isDesktop(): boolean {\n    return this.props.viewWidth >= ViewWidth.SMALL_TABLET;\n  }\n\n  startClosing = (event: Event) => {\n    if (this.elementRef && this.elementRef.current && !this.elementRef.current.contains(event.target as Node)) {\n      this.props.onClose();\n      this.props.document.removeEventListener('click', this.startClosing);\n    }\n  };\n\n  componentDidMount() {\n    if (this.props.opened && this.isDesktop) {\n      this.props.document.addEventListener('click', this.startClosing);\n    }\n  }\n\n  componentDidUpdate(prevProps: PanelHeaderContextProps) {\n    if (this.props.opened !== prevProps.opened || this.props.viewWidth !== prevProps.viewWidth) {\n      if (this.props.opened === false && !this.state.closing) {\n        this.setState({ closing: true });\n        this.waitAnimationFinish(this.onAnimationFinish);\n      }\n\n      if (this.isDesktop && this.props.opened) {\n        this.props.document.addEventListener('click', this.startClosing);\n      } else {\n        this.props.document.removeEventListener('click', this.startClosing);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.isDesktop) {\n      this.props.document.removeEventListener('click', this.startClosing);\n    }\n  }\n\n  waitAnimationFinish(eventHandler: VoidFunction) {\n    if (this.elementRef.current) {\n      if (animationEvent.supported) {\n        this.elementRef.current.removeEventListener(animationEvent.name, eventHandler);\n        this.elementRef.current.addEventListener(animationEvent.name, eventHandler);\n      } else {\n        clearTimeout(this.animationFinishTimeout);\n        this.animationFinishTimeout = setTimeout(eventHandler, 200);\n      }\n    }\n  }\n\n  onAnimationFinish: VoidFunction = () => {\n    this.setState({ closing: false });\n  };\n\n  render() {\n    const { children, opened, onClose, platform, viewWidth, hasMouse, window, document, ...restProps } = this.props;\n    const { closing } = this.state;\n    const baseClassNames = getClassName('PanelHeaderContext', platform);\n\n    return (\n      <FixedLayout {...restProps} vkuiClass={classNames(baseClassNames, {\n        'PanelHeaderContext--opened': opened,\n        'PanelHeaderContext--closing': closing,\n        'PanelHeaderContext--desktop': this.isDesktop,\n      })} vertical=\"top\">\n        <div vkuiClass=\"PanelHeaderContext__in\" ref={this.elementRef}>\n          <div vkuiClass=\"PanelHeaderContext__content\">\n            {(opened || closing) && children}\n          </div>\n        </div>\n        {!this.isDesktop && (opened || closing) && <div onClick={onClose} vkuiClass=\"PanelHeaderContext__fade\" />}\n      </FixedLayout>\n    );\n  }\n}\n\nexport default withAdaptivity(withPlatform(withDOM(PanelHeaderContext)), {\n  viewWidth: true,\n  hasMouse: true,\n});\n"],"file":"PanelHeaderContext.js"}