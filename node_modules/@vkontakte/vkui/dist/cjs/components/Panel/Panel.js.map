{"version":3,"sources":["../../../../src/components/Panel/Panel.tsx"],"names":["warn","PanelComponent","props","centered","children","getRootRef","sizeX","nav","restProps","platform","containerRef","navId","childContext","panel","getPanelNode","current","TooltipContainer","IOS","displayName","defaultProps","Panel"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAOA,IAAMA,IAAI,GAAG,wBAAS,OAAT,CAAb;;AACA,IAAMC,cAA8B,GAAG,SAAjCA,cAAiC,CAACC,KAAD,EAAuB;AAAA,MACpDC,QADoD,GACSD,KADT,CACpDC,QADoD;AAAA,MAC1CC,QAD0C,GACSF,KADT,CAC1CE,QAD0C;AAAA,MAChCC,UADgC,GACSH,KADT,CAChCG,UADgC;AAAA,MACpBC,KADoB,GACSJ,KADT,CACpBI,KADoB;AAAA,MACbC,GADa,GACSL,KADT,CACbK,GADa;AAAA,MACLC,SADK,0CACSN,KADT;AAG5D,MAAMO,QAAQ,GAAG,+BAAjB;AACA,MAAMC,YAAY,GAAG,gCAAaL,UAAb,CAArB;AAEA,MAAMM,KAAK,GAAG,wBAAST,KAAT,EAAgBF,IAAhB,CAAd;AAEA,MAAMY,YAAY,GAAG,oBAA2B,YAAM;AACpD,WAAO;AACLC,MAAAA,KAAK,EAAEF,KADF;AAELG,MAAAA,YAAY,EAAE;AAAA,eAAMJ,YAAY,CAACK,OAAnB;AAAA;AAFT,KAAP;AAID,GALoB,EAKlB,CAACJ,KAAD,CALkB,CAArB;AAOA,SACE,qCAAC,0BAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEC;AAA9B,KACE,uEACMJ,SADN;AAEE,IAAA,GAAG,EAAEE,YAFP;AAGE,IAAA,SAAS,EAAE,6BAAW,gCAAa,OAAb,EAAsBD,QAAtB,CAAX,mBAAsDH,KAAtD;AACT,yBAAmBH;AADV,8BAEQG,KAFR,GAEkB,IAFlB;AAHb,MAQE,qCAAC,cAAD;AAAO,IAAA,SAAS,EAAEU,kCAAlB;AAAoC,IAAA,SAAS,EAAC;AAA9C,KACGP,QAAQ,KAAKQ,aAAb,IAAoB;AAAK,IAAA,SAAS,EAAC;AAAf,IADvB,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,IAFF,EAGGd,QAAQ,GAAG;AAAK,IAAA,SAAS,EAAC;AAAf,KAAkCC,QAAlC,CAAH,GAAuDA,QAHlE,EAIE;AAAK,IAAA,SAAS,EAAC;AAAf,IAJF,CARF,CADF,CADF;AAmBD,CAlCD;;AAoCAH,cAAc,CAACiB,WAAf,GAA6B,OAA7B;AAEAjB,cAAc,CAACkB,YAAf,GAA8B;AAC5Bf,EAAAA,QAAQ,EAAE,EADkB;AAE5BD,EAAAA,QAAQ,EAAE;AAFkB,CAA9B;AAKO,IAAMiB,KAAK,GAAG,oCAAenB,cAAf,EAA+B;AAClDK,EAAAA,KAAK,EAAE;AAD2C,CAA/B,CAAd","sourcesContent":["import { FC, HTMLAttributes, useMemo } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport Touch from '../Touch/Touch';\nimport { TooltipContainer } from '../Tooltip/TooltipContainer';\nimport { HasRootRef } from '../../types';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport { PanelContext, PanelContextProps } from './PanelContext';\nimport { IOS } from '../../lib/platform';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { warnOnce } from '../../lib/warnOnce';\n\nexport interface PanelProps extends HTMLAttributes<HTMLDivElement>,\n  HasRootRef<HTMLDivElement>, AdaptivityProps, NavIdProps {\n  centered?: boolean;\n}\n\nconst warn = warnOnce('Panel');\nconst PanelComponent: FC<PanelProps> = (props: PanelProps) => {\n  const { centered, children, getRootRef, sizeX, nav, ...restProps } = props;\n\n  const platform = usePlatform();\n  const containerRef = useExternRef(getRootRef);\n\n  const navId = getNavId(props, warn);\n\n  const childContext = useMemo<PanelContextProps>(() => {\n    return {\n      panel: navId,\n      getPanelNode: () => containerRef.current,\n    };\n  }, [navId]);\n\n  return (\n    <PanelContext.Provider value={childContext}>\n      <div\n        {...restProps}\n        ref={containerRef}\n        vkuiClass={classNames(getClassName('Panel', platform), `Panel--${sizeX}`, {\n          'Panel--centered': centered,\n          [`Panel--sizeX-${sizeX}`]: true,\n        })}\n      >\n        <Touch Component={TooltipContainer} vkuiClass=\"Panel__in\">\n          {platform === IOS && <div vkuiClass=\"Panel__fade\" />}\n          <div vkuiClass=\"Panel__in-before\" />\n          {centered ? <div vkuiClass=\"Panel__centered\">{children}</div> : children}\n          <div vkuiClass=\"Panel__in-after\" />\n        </Touch>\n      </div>\n    </PanelContext.Provider>\n  );\n};\n\nPanelComponent.displayName = 'Panel';\n\nPanelComponent.defaultProps = {\n  children: '',\n  centered: false,\n};\n\nexport const Panel = withAdaptivity(PanelComponent, {\n  sizeX: true,\n});\n"],"file":"Panel.js"}