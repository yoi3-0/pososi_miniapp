{"version":3,"sources":["../../../../src/components/TabbarItem/TabbarItem.tsx"],"names":["TabbarItem","props","children","selected","label","indicator","text","restProps","platform","Component","href"],"mappings":";;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AAkBA,IAAMA,UAA8C,GAAG,SAAjDA,UAAiD,CAACC,KAAD,EAA4B;AAAA,MACzEC,QADyE,GACZD,KADY,CACzEC,QADyE;AAAA,MAC/DC,QAD+D,GACZF,KADY,CAC/DE,QAD+D;AAAA,MACrDC,KADqD,GACZH,KADY,CACrDG,KADqD;AAAA,MAC9CC,SAD8C,GACZJ,KADY,CAC9CI,SAD8C;AAAA,MACnCC,IADmC,GACZL,KADY,CACnCK,IADmC;AAAA,MAC1BC,SAD0B,0CACZN,KADY;AAEjF,MAAMO,QAAQ,GAAG,+BAAjB;AACA,MAAMC,SAAsB,GAAGF,SAAS,CAACG,IAAV,GAAiB,GAAjB,GAAuB,KAAtD;AAEA,SACE,qCAAC,SAAD,6BACMH,SADN;AAEE,IAAA,SAAS,EAAE,4BAAW,gCAAa,YAAb,EAA2BC,QAA3B,CAAX,EAAiD;AAC1D,8BAAwBL,QADkC;AAE1D,0BAAoB,CAAC,CAACG;AAFoC,KAAjD;AAFb,MAOE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGJ,QADH,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACG,yBAAaG,SAAb,KAA2BA,SAD9B,EAEG,CAACA,SAAD,IAAcD,KAAd,IAAuB,qCAAC,gBAAD;AAAS,IAAA,IAAI,EAAC,GAAd;AAAkB,IAAA,IAAI,EAAC;AAAvB,KAAoCA,KAApC,CAF1B,CAFF,CADF,EAQGE,IAAI,IAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAmCA,IAAnC,CARX,CAPF,CADF;AAoBD,CAzBD;;eA2BeN,U","sourcesContent":["import { FunctionComponent, ReactNode, HTMLAttributes, ElementType, AnchorHTMLAttributes } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport Counter from '../Counter/Counter';\nimport { classNames } from '../../lib/classNames';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { hasReactNode } from '../../lib/utils';\n\nexport interface TabbarItemProps extends HTMLAttributes<HTMLElement>, AnchorHTMLAttributes<HTMLElement> {\n  selected?: boolean;\n  /**\n   * Тест рядом с иконкой\n   */\n  text?: ReactNode;\n  /**\n   * Индикатор над иконкой. Принимает `<Badge mode=\"prominent\" />` или `<Counter size=\"s\" mode=\"prominent\" />`\n   */\n  indicator?: ReactNode;\n  /**\n   * @deprecated будет удалено в 5.0.0. Используйте `indicator`\n   */\n  label?: ReactNode;\n}\n\nconst TabbarItem: FunctionComponent<TabbarItemProps> = (props: TabbarItemProps) => {\n  const { children, selected, label, indicator, text, ...restProps } = props;\n  const platform = usePlatform();\n  const Component: ElementType = restProps.href ? 'a' : 'div';\n\n  return (\n    <Component\n      {...restProps}\n      vkuiClass={classNames(getClassName('TabbarItem', platform), {\n        'TabbarItem--selected': selected,\n        'TabbarItem--text': !!text,\n      })}\n    >\n      <div vkuiClass=\"TabbarItem__in\">\n        <div vkuiClass=\"TabbarItem__icon\">\n          {children}\n          <div vkuiClass=\"TabbarItem__label\">\n            {hasReactNode(indicator) && indicator}\n            {!indicator && label && <Counter size=\"s\" mode=\"prominent\">{label}</Counter>}\n          </div>\n        </div>\n        {text && <div vkuiClass=\"TabbarItem__text\">{text}</div>}\n      </div>\n    </Component>\n  );\n};\n\nexport default TabbarItem;\n"],"file":"TabbarItem.js"}