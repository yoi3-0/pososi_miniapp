{"version":3,"sources":["../../../../src/components/Group/Group.tsx"],"names":["Group","props","header","description","children","separator","getRootRef","mode","sizeX","restProps","ModalRootContext","isInsideModal","platform","computedMode","SizeType","COMPACT","defaultProps"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAoBA,IAAMA,KAAqB,GAAG,SAAxBA,KAAwB,CAACC,KAAD,EAAuB;AAAA,MAC3CC,MAD2C,GACyCD,KADzC,CAC3CC,MAD2C;AAAA,MACnCC,WADmC,GACyCF,KADzC,CACnCE,WADmC;AAAA,MACtBC,QADsB,GACyCH,KADzC,CACtBG,QADsB;AAAA,MACZC,SADY,GACyCJ,KADzC,CACZI,SADY;AAAA,MACDC,UADC,GACyCL,KADzC,CACDK,UADC;AAAA,MACWC,IADX,GACyCN,KADzC,CACWM,IADX;AAAA,MACiBC,KADjB,GACyCP,KADzC,CACiBO,KADjB;AAAA,MAC2BC,SAD3B,0CACyCR,KADzC;;AAAA,oBAEzB,uBAAWS,yBAAX,CAFyB;AAAA,MAE3CC,aAF2C,eAE3CA,aAF2C;;AAGnD,MAAMC,QAAQ,GAAG,+BAAjB;AAEA,MAAIC,YAAgC,GAAGN,IAAvC;;AAEA,MAAI,CAACA,IAAL,EAAW;AACTM,IAAAA,YAAY,GAAGL,KAAK,KAAKM,yBAASC,OAAnB,IAA8BJ,aAA9B,GAA8C,OAA9C,GAAwD,MAAvE;AACD;;AAED,SACE,2EACMF,SADN;AAEE,IAAA,GAAG,EAAEH,UAFP;AAGE,IAAA,SAAS,EAAE,4BACT,gCAAa,OAAb,EAAsBM,QAAtB,CADS,yBAEOJ,KAFP,oBAGCK,YAHD;AAHb,MASE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGX,MADH,EAEGE,QAFH,EAGG,yBAAaD,WAAb,KAA6B,qCAAC,gBAAD;AAAS,IAAA,SAAS,EAAC,oBAAnB;AAAwC,IAAA,MAAM,EAAC,SAA/C;AAAyD,IAAA,KAAK,EAAC;AAA/D,KAAoEA,WAApE,CAHhC,CATF,EAeGE,SAAS,KAAK,MAAd,IACC,qCAAC,kBAAD;AACE,IAAA,SAAS,EAAE,4BAAW,kBAAX,EAA+B;AACxC,iCAA2BA,SAAS,KAAK;AADD,KAA/B,CADb;AAIE,IAAA,QAAQ,EAAEQ,YAAY,KAAK;AAJ7B,IAhBJ,CADF;AA0BD,CArCD;;AAuCAb,KAAK,CAACgB,YAAN,GAAqB;AACnBX,EAAAA,SAAS,EAAE;AADQ,CAArB;;eAIe,oCAAeL,KAAf,EAAsB;AAAEQ,EAAAA,KAAK,EAAE;AAAT,CAAtB,C","sourcesContent":["import { FC, HTMLAttributes, ReactNode, useContext } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { HasRootRef } from '../../types';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport Separator from '../Separator/Separator';\nimport { hasReactNode } from '../../lib/utils';\nimport Caption from '../Typography/Caption/Caption';\nimport { withAdaptivity, AdaptivityProps, SizeType } from '../../hoc/withAdaptivity';\nimport ModalRootContext from '../ModalRoot/ModalRootContext';\n\nexport interface GroupProps extends HasRootRef<HTMLElement>, HTMLAttributes<HTMLElement>, AdaptivityProps {\n  header?: ReactNode;\n  description?: ReactNode;\n  /**\n    show - разделитель всегда показывается,\n    hide – разделитель всегда спрятан,\n    auto – разделитель рисуется автоматически между соседними группами.\n   */\n  separator?: 'show' | 'hide' | 'auto';\n  /**\n   * Режим отображения. Если установлен 'card', выглядит как карточка c\n   * обводкой и внешними отступами. Если 'plain' — без отступов и обводки.\n   * По умолчанию режим отображения зависит от `sizeX`. В модальных окнах\n   * по умолчанию 'plain'.\n   */\n  mode?: 'plain' | 'card';\n}\n\nconst Group: FC<GroupProps> = (props: GroupProps) => {\n  const { header, description, children, separator, getRootRef, mode, sizeX, ...restProps } = props;\n  const { isInsideModal } = useContext(ModalRootContext);\n  const platform = usePlatform();\n\n  let computedMode: GroupProps['mode'] = mode;\n\n  if (!mode) {\n    computedMode = sizeX === SizeType.COMPACT || isInsideModal ? 'plain' : 'card';\n  }\n\n  return (\n    <section\n      {...restProps}\n      ref={getRootRef}\n      vkuiClass={classNames(\n        getClassName('Group', platform),\n        `Group--sizeX-${sizeX}`,\n        `Group--${computedMode}`,\n      )}\n    >\n      <div vkuiClass=\"Group__inner\">\n        {header}\n        {children}\n        {hasReactNode(description) && <Caption vkuiClass=\"Group__description\" weight=\"regular\" level=\"1\">{description}</Caption>}\n      </div>\n\n      {separator !== 'hide' && (\n        <Separator\n          vkuiClass={classNames('Group__separator', {\n            'Group__separator--force': separator === 'show',\n          })}\n          expanded={computedMode === 'card'}\n        />\n      )}\n    </section>\n  );\n};\n\nGroup.defaultProps = {\n  separator: 'auto',\n};\n\nexport default withAdaptivity(Group, { sizeX: true });\n"],"file":"Group.js"}