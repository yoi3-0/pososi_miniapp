{"version":3,"sources":["../../../../src/components/Tappable/Tappable.tsx"],"names":["ts","Date","now","ACTIVE_DELAY","ACTIVE_EFFECT_DELAY","storage","deactivateOtherInstances","exclude","Object","keys","filter","id","forEach","clearTimeout","activeTimeout","timeout","stop","TappableContext","React","createContext","insideTappable","Tappable","props","e","onKeyDown","preventDefault","container","click","originalEvent","insideTouchRoot","stopPropagation","state","hasActive","touches","length","platform","ANDROID","onDown","window","setTimeout","start","shiftXAbs","shiftYAbs","isSlide","active","activeEffectDelay","store","getStorage","top","left","x","y","key","toString","setState","clicks","wavesTimeout","hovered","getRootRef","Math","round","random","hasHover","prevProps","disabled","defaultComponent","href","children","Component","onClick","sizeX","hasMouse","propsHasHover","hoverMode","propsHasActive","activeMode","hasFocusVisible","restProps","isCustomElement","contentEditable","isPresetHoverMode","includes","isPresetActiveMode","classes","RootComponent","Touch","onStart","onMove","onEnd","getRef","ref","role","onEnter","onLeave","touchProps","undefined","map","k"],"mappings":"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","sourcesContent":["import React, {\n  AllHTMLAttributes,\n  Component,\n  ElementType,\n  KeyboardEventHandler,\n  KeyboardEvent,\n  RefCallback,\n} from 'react';\nimport Touch, { TouchEvent, TouchEventHandler, TouchProps } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { ANDROID } from '../../lib/platform';\nimport { getOffsetRect } from '../../lib/offset';\nimport { coordX, coordY, VKUITouchEvent, VKUITouchEventHander } from '../../lib/touch';\nimport { HasPlatform, HasRootRef, Ref } from '../../types';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { hasHover } from '@vkontakte/vkjs';\nimport { setRef } from '../../lib/utils';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport { shouldTriggerClickOnEnterOrSpace } from '../../lib/accessibility';\n\nexport interface TappableProps extends AllHTMLAttributes<HTMLElement>, HasRootRef<HTMLElement>, HasPlatform, AdaptivityProps {\n  Component?: ElementType;\n  /**\n   * Длительность показа active-состояния\n   */\n  activeEffectDelay?: number;\n  stopPropagation?: boolean;\n  /**\n   * Указывает, должен ли компонент реагировать на hover-состояние\n   */\n  hasHover?: boolean;\n  /**\n   * Указывает, должен ли компонент реагировать на active-состояние\n   */\n  hasActive?: boolean;\n  /**\n   * Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active\n   */\n  activeMode?: 'opacity' | 'background' | string;\n  /**\n   * Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover\n   */\n  hoverMode?: 'opacity' | 'background' | string;\n  /**\n   * @ignore Временное свойство для работы над доступностью. Указывает, должен ли компонент показывать focus ring при навигации с клавиатуры.\n   * Исчезнет после того, как мы адаптируем отображение всех компонентов на базе Tappable.\n   */\n  hasFocusVisible?: boolean;\n}\n\nexport interface TappableState {\n  clicks?: {\n    [index: string]: {\n      x: number;\n      y: number;\n    };\n  };\n  hovered?: boolean;\n  active?: boolean;\n  ts?: number;\n  hasHover?: boolean;\n  hasActive?: boolean;\n}\n\nexport interface RootComponentProps extends TouchProps {\n  ref?: Ref<HTMLElement>;\n}\n\nexport interface StorageItem {\n  activeTimeout: number;\n  timeout?: number;\n  stop(): void;\n}\n\nexport interface Storage {\n  [index: string]: StorageItem;\n}\n\nexport type GetStorage = () => StorageItem;\n\nconst ts = () => +Date.now();\n\nexport const ACTIVE_DELAY = 70;\nexport const ACTIVE_EFFECT_DELAY = 600;\n\nlet storage: Storage = {};\n\n/*\n * Очищает таймауты и хранилище для всех экземпляров компонента, кроме переданного\n */\nfunction deactivateOtherInstances(exclude?: string) {\n  Object.keys(storage).filter((id: string) => id !== exclude).forEach((id: string) => {\n    clearTimeout(storage[id].activeTimeout);\n    clearTimeout(storage[id].timeout);\n    storage[id].stop();\n\n    delete storage[id];\n  });\n}\n\nconst TappableContext = React.createContext<{ insideTappable?: boolean; onEnter?: VoidFunction; onLeave?: VoidFunction }>({ insideTappable: false });\n\nclass Tappable extends Component<TappableProps, TappableState> {\n  constructor(props: TappableProps) {\n    super(props);\n    this.id = Math.round(Math.random() * 1e8).toString(16);\n    this.state = {\n      clicks: {},\n      active: false,\n      ts: null,\n      hasHover: props.hasHover,\n      hasActive: props.hasActive,\n    };\n    this.isSlide = false;\n  }\n\n  id: string;\n\n  isSlide: boolean;\n\n  insideTouchRoot: boolean;\n\n  container: HTMLElement;\n\n  timeout: number;\n\n  wavesTimeout: number;\n\n  static defaultProps = {\n    stopPropagation: false,\n    disabled: false,\n    hasFocusVisible: false,\n    hasHover,\n    hoverMode: 'background',\n    hasActive: true,\n    activeMode: 'background',\n    activeEffectDelay: ACTIVE_EFFECT_DELAY,\n  };\n\n  /*\n   * [a11y]\n   * Обрабатывает событие onkeydown\n   * для кастомных доступных элементов:\n   * - role=\"link\" (активация по Enter)\n   * - role=\"button\" (активация по Space и Enter)\n   */\n  onKeyDown: KeyboardEventHandler = (e: KeyboardEvent<HTMLElement>) => {\n    const { onKeyDown } = this.props;\n\n    if (shouldTriggerClickOnEnterOrSpace(e)) {\n      e.preventDefault();\n      this.container.click();\n    }\n\n    {\n      if (typeof onKeyDown === 'function') {\n        return onKeyDown(e);\n      }\n    }\n  };\n\n  /*\n   * Обрабатывает событие touchstart\n   */\n  onStart: TouchEventHandler = ({ originalEvent }: TouchEvent) => {\n    !this.insideTouchRoot && this.props.stopPropagation && originalEvent.stopPropagation();\n\n    if (this.state.hasActive) {\n      if (originalEvent.touches && originalEvent.touches.length > 1) {\n        deactivateOtherInstances();\n        return;\n      }\n\n      if (this.props.platform === ANDROID) {\n        this.onDown(originalEvent);\n      }\n\n      storage[this.id] = {\n        stop: this.stop,\n        activeTimeout: window.setTimeout(this.start, ACTIVE_DELAY),\n      };\n    }\n  };\n\n  /*\n   * Обрабатывает событие touchmove\n   */\n  onMove: TouchEventHandler = ({ originalEvent, shiftXAbs, shiftYAbs }: TouchEvent) => {\n    !this.insideTouchRoot && this.props.stopPropagation && originalEvent.stopPropagation();\n    if (shiftXAbs > 20 || shiftYAbs > 20) {\n      this.isSlide = true;\n      this.stop();\n    }\n  };\n\n  /*\n   * Обрабатывает событие touchend\n   */\n  onEnd: TouchEventHandler = ({ originalEvent }: TouchEvent) => {\n    !this.insideTouchRoot && this.props.stopPropagation && originalEvent.stopPropagation();\n    const now = ts();\n\n    if (originalEvent.touches && originalEvent.touches.length > 0) {\n      this.isSlide = false;\n      this.stop();\n      return;\n    }\n\n    if (this.state.active) {\n      if (now - this.state.ts >= 100) {\n        // Долгий тап, выключаем подсветку\n        this.stop();\n      } else {\n        // Короткий тап, оставляем подсветку\n        const timeout = window.setTimeout(this.stop, this.props.activeEffectDelay - now + this.state.ts);\n        const store = this.getStorage();\n\n        if (store) {\n          store.timeout = timeout;\n        }\n      }\n    } else if (!this.isSlide) {\n      // Очень короткий тап, включаем подсветку\n      this.start();\n\n      const timeout = window.setTimeout(this.stop, this.props.activeEffectDelay);\n\n      if (this.getStorage()) {\n        clearTimeout(this.getStorage().activeTimeout);\n        this.getStorage().timeout = timeout;\n      } else {\n        this.timeout = timeout;\n      }\n    }\n\n    this.isSlide = false;\n  };\n\n  /*\n   * Реализует эффект при тапе для Андроида\n   */\n  onDown: VKUITouchEventHander = (e: VKUITouchEvent) => {\n    if (this.props.platform === ANDROID) {\n      const { top, left } = getOffsetRect(this.container);\n      const x = coordX(e) - left;\n      const y = coordY(e) - top;\n      const key = 'wave' + Date.now().toString();\n\n      this.setState((state: TappableState): TappableState => {\n        return {\n          clicks: {\n            ...state.clicks,\n            [key]: {\n              x,\n              y,\n            },\n          },\n        };\n      });\n\n      this.wavesTimeout = window.setTimeout(() => {\n        this.setState((state: TappableState): TappableState => {\n          let clicks = { ...state.clicks };\n          delete clicks[key];\n          return { clicks };\n        });\n      }, 225);\n    }\n  };\n\n  onEnter = () => {\n    this.setState({ hovered: true });\n  };\n\n  onLeave = () => {\n    this.setState({ hovered: false });\n  };\n\n  /*\n   * Устанавливает активное выделение\n   */\n  start: VoidFunction = () => {\n    if (!this.state.active && this.state.hasActive) {\n      this.setState({\n        active: true,\n        ts: ts(),\n      });\n    }\n    deactivateOtherInstances(this.id);\n  };\n\n  /*\n   * Снимает активное выделение\n   */\n  stop: VoidFunction = () => {\n    if (this.state.active) {\n      this.setState({\n        active: false,\n        ts: null,\n      });\n    }\n    if (this.getStorage()) {\n      clearTimeout(this.getStorage().activeTimeout);\n      delete storage[this.id];\n    }\n  };\n\n  /*\n   * Возвращает хранилище для экземпляра компонента\n   */\n  getStorage: GetStorage = () => {\n    return storage[this.id];\n  };\n\n  /*\n   * Берет ref на DOM-ноду из экземпляра Touch\n   */\n  getRef: RefCallback<HTMLElement> = (container) => {\n    this.container = container;\n    setRef(container, this.props.getRootRef);\n  };\n\n  componentWillUnmount() {\n    if (storage[this.id]) {\n      clearTimeout(storage[this.id].timeout);\n      clearTimeout(storage[this.id].activeTimeout);\n\n      delete storage[this.id];\n    }\n\n    clearTimeout(this.wavesTimeout);\n  }\n\n  componentDidUpdate(prevProps: TappableProps) {\n    if (prevProps.hasHover !== this.props.hasHover || prevProps.hasActive !== this.props.hasActive) {\n      this.setState({ hasHover: this.props.hasHover, hasActive: this.props.hasActive });\n    }\n    if (!prevProps.disabled && this.props.disabled) {\n      this.setState({ hovered: false });\n    }\n  }\n\n  render() {\n    const { clicks, active, hovered, hasHover, hasActive } = this.state;\n\n    const defaultComponent: ElementType = this.props.href ? 'a' : 'div';\n\n    const {\n      children,\n      Component = defaultComponent,\n      onClick,\n      onKeyDown,\n      activeEffectDelay,\n      stopPropagation,\n      getRootRef,\n      platform,\n      sizeX,\n      hasMouse,\n      hasHover: propsHasHover,\n      hoverMode,\n      hasActive: propsHasActive,\n      activeMode,\n      hasFocusVisible,\n      ...restProps\n    } = this.props;\n\n    const isCustomElement: boolean = Component !== 'a' && Component !== 'button' && !restProps.contentEditable;\n\n    const isPresetHoverMode = ['opacity', 'background'].includes(hoverMode);\n    const isPresetActiveMode = ['opacity', 'background'].includes(activeMode);\n\n    const classes = classNames(\n      getClassName('Tappable', platform),\n      `Tappable--sizeX-${sizeX}`,\n      {\n        'Tappable--active': hasActive && active,\n        'Tappable--inactive': !active,\n        'Tappable--mouse': hasMouse,\n        [`Tappable--hover-${hoverMode}`]: hasHover && hovered && isPresetHoverMode,\n        [`Tappable--active-${activeMode}`]: hasActive && active && isPresetActiveMode,\n        'Tappable--focus-visible': hasFocusVisible,\n        [hoverMode]: hasHover && hovered && !isPresetHoverMode,\n        [activeMode]: hasActive && active && !isPresetActiveMode,\n      });\n\n    const RootComponent = restProps.disabled\n      ? Component\n      : Touch;\n\n    let props: RootComponentProps = {};\n    if (!restProps.disabled) {\n      props.Component = Component;\n      /* eslint-disable */\n      props.onStart = this.onStart;\n      props.onMove = this.onMove;\n      props.onEnd = this.onEnd;\n      props.onClick = onClick;\n      props.onKeyDown = isCustomElement ? this.onKeyDown : onKeyDown;\n      /* eslint-enable */\n      props.getRootRef = this.getRef;\n    } else {\n      props.ref = this.getRef;\n    }\n\n    if (isCustomElement) {\n      props['aria-disabled'] = restProps.disabled;\n    }\n\n    const role: string = restProps.href ? 'link' : 'button';\n\n    return (\n      <TappableContext.Consumer>\n        {({ insideTappable, onEnter, onLeave }) => {\n          return (\n            <TouchRootContext.Consumer>\n              {(insideTouchRoot: boolean) => {\n                this.insideTouchRoot = insideTouchRoot;\n                const touchProps = restProps.disabled ? {} : {\n                  onEnter: () => {\n                    insideTappable && onEnter();\n                    !restProps.disabled && this.onEnter();\n                  },\n                  onLeave: () => {\n                    insideTappable && onLeave();\n                    !restProps.disabled && this.onLeave();\n                  },\n                };\n                return (\n                  <RootComponent\n                    {...touchProps}\n                    type={Component === 'button' ? 'button' : undefined}\n                    tabIndex={isCustomElement && !restProps.disabled ? 0 : undefined}\n                    role={isCustomElement ? role : undefined}\n                    {...restProps}\n                    vkuiClass={classes}\n                    {...props}>\n                    <TappableContext.Provider\n                      value={{\n                        insideTappable: true,\n                        onEnter: () => this.setState({ hasHover: false, hasActive: false }),\n                        onLeave: () => this.setState({ hasHover: propsHasHover, hasActive: propsHasActive }),\n                      }}\n                    >\n                      {children}\n                    </TappableContext.Provider>\n                    {platform === ANDROID && !hasMouse && hasActive && activeMode === 'background' && (\n                      <span aria-hidden=\"true\" vkuiClass=\"Tappable__waves\">\n                        {Object.keys(clicks).map((k: string) => (\n                          <span vkuiClass=\"Tappable__wave\" style={{ top: clicks[k].y, left: clicks[k].x }} key={k} />\n                        ))}\n                      </span>\n                    )}\n                    {hasHover && <span aria-hidden=\"true\" vkuiClass=\"Tappable__hoverShadow\" />}\n                  </RootComponent>\n                );\n              }}\n            </TouchRootContext.Consumer>\n          );\n        }}\n      </TappableContext.Consumer>\n    );\n  }\n}\n\nexport default withAdaptivity(withPlatform(Tappable), { sizeX: true, hasMouse: true });\n"],"file":"Tappable.js"}