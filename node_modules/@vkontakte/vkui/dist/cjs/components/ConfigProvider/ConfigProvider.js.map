{"version":3,"sources":["../../../../src/components/ConfigProvider/ConfigProvider.tsx"],"names":["useSchemeDetector","node","_scheme","inherit","getScheme","canUseDOM","undefined","getAttribute","resolvedScheme","setScheme","noop","observer","MutationObserver","observe","attributes","attributeFilter","disconnect","deriveAppearance","scheme","Scheme","SPACE_GRAY","ExternalScheme","VKCOM_DARK","normalizeScheme","platform","VKCOM","DEPRECATED_CLIENT_LIGHT","BRIGHT_LIGHT","DEPRECATED_CLIENT_DARK","warn","ConfigProvider","children","schemeTarget","config","document","target","body","process","env","NODE_ENV","hasAttribute","setAttribute","removeAttribute","realScheme","configContext","appearance","defaultProps","defaultConfigProviderProps"],"mappings":"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","sourcesContent":["import { FC, useState, useEffect, ReactNode } from 'react';\nimport { AppearanceType } from '@vkontakte/vk-bridge';\nimport { canUseDOM, useDOM } from '../../lib/dom';\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n  Scheme,\n  AppearanceScheme,\n  defaultConfigProviderProps,\n  ExternalScheme,\n} from './ConfigProviderContext';\nimport { PlatformType, VKCOM } from '../../lib/platform';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { useObjectMemo } from '../../hooks/useObjectMemo';\nimport { noop } from '../../lib/utils';\nimport { warnOnce } from '../../lib/warnOnce';\n\nexport interface ConfigProviderProps extends ConfigProviderContextInterface {\n  /**\n   * Цветовая схема приложения\n   */\n  scheme?: AppearanceScheme;\n}\n\nfunction useSchemeDetector(node: HTMLElement, _scheme: Scheme | 'inherit') {\n  const inherit = _scheme === 'inherit';\n  const getScheme = () => {\n    if (!inherit || !canUseDOM) {\n      return undefined;\n    }\n    return node.getAttribute('scheme') as Scheme | ExternalScheme;\n  };\n  const [resolvedScheme, setScheme] = useState(getScheme());\n\n  useEffect(() => {\n    if (!inherit) {\n      return noop;\n    }\n    setScheme(getScheme());\n    const observer = new MutationObserver(() => setScheme(getScheme()));\n    observer.observe(node, { attributes: true, attributeFilter: ['scheme'] });\n    return () => observer.disconnect();\n  }, [inherit]);\n\n  return _scheme === 'inherit' ? resolvedScheme : _scheme;\n}\n\nconst deriveAppearance = (scheme: Scheme | ExternalScheme): AppearanceType =>\n  scheme === Scheme.SPACE_GRAY || scheme === ExternalScheme.VKCOM_DARK ? 'dark' : 'light';\n\nfunction normalizeScheme(scheme: AppearanceScheme, platform: PlatformType): Scheme | 'inherit' {\n  if (scheme === 'inherit') {\n    return scheme;\n  }\n  if (platform === VKCOM) {\n    return Scheme.VKCOM;\n  }\n  switch (scheme) {\n    case Scheme.DEPRECATED_CLIENT_LIGHT:\n      return Scheme.BRIGHT_LIGHT;\n    case Scheme.DEPRECATED_CLIENT_DARK:\n      return Scheme.SPACE_GRAY;\n    default:\n      return scheme as Scheme;\n  }\n}\n\nconst warn = warnOnce('ConfigProvider');\n\nconst ConfigProvider: FC<ConfigProviderProps> = ({\n  children,\n  schemeTarget,\n  ...config\n}: ConfigProviderProps & { children?: ReactNode; schemeTarget?: HTMLElement }) => {\n  const scheme = normalizeScheme(config.scheme, config.platform);\n  const { document } = useDOM();\n  const target = schemeTarget || document?.body;\n\n  useIsomorphicLayoutEffect(() => {\n    if (scheme === 'inherit') {\n      return noop;\n    }\n    if (process.env.NODE_ENV === 'development' && target.hasAttribute('scheme')) {\n      warn('<body scheme> was set before VKUI mount - did you forget scheme=\"inherit\"?');\n    }\n    target.setAttribute('scheme', scheme);\n    return () => target.removeAttribute('scheme');\n  }, [scheme]);\n\n  const realScheme = useSchemeDetector(target, scheme);\n  const configContext = useObjectMemo({ appearance: deriveAppearance(realScheme), ...config });\n\n  return (\n    <ConfigProviderContext.Provider value={configContext}>\n      {children}\n    </ConfigProviderContext.Provider>\n  );\n};\n\n// Деструктуризация нужна из бага в react-docgen-typescript\n// https://github.com/styleguidist/react-docgen-typescript/issues/195\nConfigProvider.defaultProps = { ...defaultConfigProviderProps };\n\nexport default ConfigProvider;\n"],"file":"ConfigProvider.js"}