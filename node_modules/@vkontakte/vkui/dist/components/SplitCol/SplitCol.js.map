{"version":3,"sources":["../../../src/components/SplitCol/SplitCol.tsx"],"names":["React","useMemo","useRef","classNames","SplitColContext","createContext","colRef","animate","SplitCol","props","children","width","maxWidth","minWidth","spaced","fixed","style","restProps","baseRef","contextValue","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAoCC,OAApC,EAA6CC,MAA7C,QAA2D,OAA3D;AACA,SAASC,UAAT;AAOA,OAAO,IAAMC,eAAe,gBAAGJ,KAAK,CAACK,aAAN,CAA0C;AACvEC,EAAAA,MAAM,EAAE,IAD+D;AAEvEC,EAAAA,OAAO,EAAE;AAF8D,CAA1C,CAAxB;AAoBP,OAAO,IAAMC,QAA2B,GAAG,SAA9BA,QAA8B,CAACC,KAAD,EAA0B;AAAA,MAC3DC,QAD2D,GAC0BD,KAD1B,CAC3DC,QAD2D;AAAA,MACjDC,KADiD,GAC0BF,KAD1B,CACjDE,KADiD;AAAA,MAC1CC,QAD0C,GAC0BH,KAD1B,CAC1CG,QAD0C;AAAA,MAChCC,QADgC,GAC0BJ,KAD1B,CAChCI,QADgC;AAAA,MACtBC,MADsB,GAC0BL,KAD1B,CACtBK,MADsB;AAAA,MACdP,OADc,GAC0BE,KAD1B,CACdF,OADc;AAAA,MACLQ,KADK,GAC0BN,KAD1B,CACLM,KADK;AAAA,MACEC,KADF,GAC0BP,KAD1B,CACEO,KADF;AAAA,MACYC,SADZ,4BAC0BR,KAD1B;;AAEnE,MAAMS,OAAO,GAAGhB,MAAM,EAAtB;AAEA,MAAMiB,YAAY,GAAGlB,OAAO,CAAC,YAAM;AACjC,WAAO;AACLK,MAAAA,MAAM,EAAEY,OADH;AAELX,MAAAA,OAAO,EAAPA;AAFK,KAAP;AAID,GAL2B,EAKzB,CAACW,OAAD,EAAUX,OAAV,CALyB,CAA5B;AAOA,SACE,wCACMU,SADN;AAEE,IAAA,KAAK,kCACAD,KADA;AAEHL,MAAAA,KAAK,EAAEA,KAFJ;AAGHC,MAAAA,QAAQ,EAAEA,QAHP;AAIHC,MAAAA,QAAQ,EAAEA;AAJP,MAFP;AAQE,IAAA,GAAG,EAAEK,OARP;AASE,IAAA,SAAS,EAAEf,UAAU,CAAC,UAAD,EAAa;AAChC,0BAAoBW,MADY;AAEhC,yBAAmBC;AAFa,KAAb;AATvB,MAcE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEI;AAAjC,KACGJ,KAAK,GAAG;AAAK,IAAA,SAAS,EAAC;AAAf,KAAuCL,QAAvC,CAAH,GAA4DA,QADpE,CAdF,CADF;AAoBD,CA/BM;AAiCPF,QAAQ,CAACY,YAAT,GAAwB;AACtBb,EAAAA,OAAO,EAAE;AADa,CAAxB","sourcesContent":["import React, { FC, HTMLAttributes, useMemo, useRef } from 'react';\nimport { classNames } from '../../lib/classNames';\n\nexport interface SplitColContextProps {\n  colRef: React.RefObject<HTMLDivElement>;\n  animate: boolean;\n}\n\nexport const SplitColContext = React.createContext<SplitColContextProps>({\n  colRef: null,\n  animate: true,\n});\n\nexport interface SplitColProps extends HTMLAttributes<HTMLDivElement> {\n  width?: string;\n  maxWidth?: string;\n  minWidth?: string;\n  /**\n   * Если false, то переходы между Panel происходят без анимации\n   */\n  animate?: boolean;\n  /**\n   * Если true, то добавляются боковые отступы фиксированной величины\n   */\n  spaced?: boolean;\n  fixed?: boolean;\n}\n\nexport const SplitCol: FC<SplitColProps> = (props: SplitColProps) => {\n  const { children, width, maxWidth, minWidth, spaced, animate, fixed, style, ...restProps } = props;\n  const baseRef = useRef<HTMLDivElement>();\n\n  const contextValue = useMemo(() => {\n    return {\n      colRef: baseRef,\n      animate,\n    };\n  }, [baseRef, animate]);\n\n  return (\n    <div\n      {...restProps}\n      style={{\n        ...style,\n        width: width,\n        maxWidth: maxWidth,\n        minWidth: minWidth,\n      }}\n      ref={baseRef}\n      vkuiClass={classNames('SplitCol', {\n        'SplitCol--spaced': spaced,\n        'SplitCol--fixed': fixed,\n      })}\n    >\n      <SplitColContext.Provider value={contextValue}>\n        {fixed ? <div vkuiClass=\"SplitCol__fixedInner\">{children}</div> : children}\n      </SplitColContext.Provider>\n    </div>\n  );\n};\n\nSplitCol.defaultProps = {\n  animate: false,\n};\n"],"file":"SplitCol.js"}