{"version":3,"sources":["../../../src/components/ContentCard/ContentCard.tsx"],"names":["Card","Caption","Title","Text","Tappable","getClassName","usePlatform","hasReactNode","ContentCard","props","getRef","onClick","subtitle","header","text","caption","className","image","maxHeight","disabled","mode","style","getRootRef","restProps","platform","defaultProps"],"mappings":"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","sourcesContent":["import { FC, ImgHTMLAttributes, ReactNode } from 'react';\nimport Card, { CardProps } from '../Card/Card';\nimport Caption from '../Typography/Caption/Caption';\nimport Title from '../Typography/Title/Title';\nimport Text from '../Typography/Text/Text';\nimport Tappable from '../Tappable/Tappable';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { hasReactNode } from '../../lib/utils';\nimport { HasRef, HasRootRef } from '../../types';\n\nexport interface ContentCardProps extends HasRootRef<HTMLDivElement>, ImgHTMLAttributes<HTMLImageElement>, HasRef<HTMLImageElement> {\n  /**\n   Текст над заголовком\n   */\n  subtitle?: ReactNode;\n  /**\n   Заголовок\n   */\n  header?: ReactNode;\n  /**\n   Текст\n   */\n  text?: ReactNode;\n  /**\n   Нижний текст\n   */\n  caption?: ReactNode;\n  /**\n    URL или путь к изображению\n   */\n  image?: string;\n  /**\n    Максимальная высота изображения\n   */\n  maxHeight?: number;\n  /**\n    Аналогично alt для img\n   */\n  alt?: string;\n  /**\n    Отключает Tappable у карточки\n   */\n  disabled?: boolean;\n  /**\n   В точности как у `<Card/>`\n   */\n  mode?: CardProps['mode'];\n}\n\nconst ContentCard: FC<ContentCardProps> = (props: ContentCardProps) => {\n  const { getRef, onClick, subtitle, header, text, caption, className, image, maxHeight, disabled, mode, style, getRootRef, ...restProps } = props;\n  const platform = usePlatform();\n\n  return (\n    <Card mode={mode} getRootRef={getRootRef} vkuiClass={getClassName('ContentCard', platform)} style={style} className={className}>\n      <Tappable\n        Component=\"div\"\n        disabled={disabled || typeof onClick !== 'function'}\n        role=\"button\"\n        onClick={onClick}\n        vkuiClass=\"ContentCard__tappable\"\n      >\n        {image && <img {...restProps} ref={getRef} src={image} vkuiClass=\"ContentCard__img\" style={{ maxHeight }} width=\"100%\" />}\n        <div vkuiClass=\"ContentCard__body\">\n          {hasReactNode(subtitle) && <Caption caps vkuiClass=\"ContentCard__text\" weight=\"semibold\" level=\"3\">{subtitle}</Caption>}\n          {hasReactNode(header) && <Title vkuiClass=\"ContentCard__text\" weight=\"semibold\" level=\"3\">{header}</Title>}\n          {hasReactNode(text) && <Text vkuiClass=\"ContentCard__text\" weight=\"regular\">{text}</Text>}\n          {hasReactNode(caption) && <Caption vkuiClass=\"ContentCard__text\" weight=\"regular\" level=\"1\">{caption}</Caption>}\n        </div>\n      </Tappable>\n    </Card>\n  );\n};\n\nContentCard.defaultProps = {\n  mode: 'shadow',\n};\n\nexport default ContentCard;\n"],"file":"ContentCard.js"}