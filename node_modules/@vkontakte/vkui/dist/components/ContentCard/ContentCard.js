import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import { createScopedElement } from "../../lib/jsxRuntime";
import Card from "../Card/Card";
import Caption from "../Typography/Caption/Caption";
import Title from "../Typography/Title/Title";
import Text from "../Typography/Text/Text";
import Tappable from "../Tappable/Tappable";
import { getClassName } from "../../helpers/getClassName";
import { usePlatform } from "../../hooks/usePlatform";
import { hasReactNode } from "../../lib/utils";

var ContentCard = function ContentCard(props) {
  var getRef = props.getRef,
      onClick = props.onClick,
      subtitle = props.subtitle,
      header = props.header,
      text = props.text,
      caption = props.caption,
      className = props.className,
      image = props.image,
      maxHeight = props.maxHeight,
      disabled = props.disabled,
      mode = props.mode,
      style = props.style,
      getRootRef = props.getRootRef,
      restProps = _objectWithoutProperties(props, ["getRef", "onClick", "subtitle", "header", "text", "caption", "className", "image", "maxHeight", "disabled", "mode", "style", "getRootRef"]);

  var platform = usePlatform();
  return createScopedElement(Card, {
    mode: mode,
    getRootRef: getRootRef,
    vkuiClass: getClassName('ContentCard', platform),
    style: style,
    className: className
  }, createScopedElement(Tappable, {
    Component: "div",
    disabled: disabled || typeof onClick !== 'function',
    role: "button",
    onClick: onClick,
    vkuiClass: "ContentCard__tappable"
  }, image && createScopedElement("img", _extends({}, restProps, {
    ref: getRef,
    src: image,
    vkuiClass: "ContentCard__img",
    style: {
      maxHeight: maxHeight
    },
    width: "100%"
  })), createScopedElement("div", {
    vkuiClass: "ContentCard__body"
  }, hasReactNode(subtitle) && createScopedElement(Caption, {
    caps: true,
    vkuiClass: "ContentCard__text",
    weight: "semibold",
    level: "3"
  }, subtitle), hasReactNode(header) && createScopedElement(Title, {
    vkuiClass: "ContentCard__text",
    weight: "semibold",
    level: "3"
  }, header), hasReactNode(text) && createScopedElement(Text, {
    vkuiClass: "ContentCard__text",
    weight: "regular"
  }, text), hasReactNode(caption) && createScopedElement(Caption, {
    vkuiClass: "ContentCard__text",
    weight: "regular",
    level: "1"
  }, caption))));
};

ContentCard.defaultProps = {
  mode: 'shadow'
};
export default ContentCard;
//# sourceMappingURL=ContentCard.js.map