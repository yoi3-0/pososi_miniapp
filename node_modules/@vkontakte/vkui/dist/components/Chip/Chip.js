import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import { createScopedElement } from "../../lib/jsxRuntime";
import { useCallback } from 'react';
import { Icon16Cancel } from '@vkontakte/icons';
import { getTitleFromChildren, hasReactNode, noop } from "../../lib/utils";
import Caption from "../Typography/Caption/Caption";

var Chip = function Chip(props) {
  var value = props.value,
      option = props.option,
      onRemove = props.onRemove,
      removable = props.removable,
      before = props.before,
      after = props.after,
      children = props.children,
      restProps = _objectWithoutProperties(props, ["value", "option", "onRemove", "removable", "before", "after", "children"]);

  var onRemoveWrapper = useCallback(function (event) {
    onRemove(event, value);
  }, [onRemove, value]);
  var title = getTitleFromChildren(children);
  return createScopedElement("div", _extends({
    vkuiClass: "Chip"
  }, restProps), createScopedElement("div", {
    vkuiClass: "Chip__in"
  }, hasReactNode(before) && createScopedElement("div", {
    vkuiClass: "Chip__before"
  }, before), createScopedElement(Caption, {
    level: "1",
    weight: "regular",
    vkuiClass: "Chip__content",
    title: title
  }, children), hasReactNode(after) && createScopedElement("div", {
    vkuiClass: "Chip__after"
  }, after), removable && createScopedElement("div", {
    role: "button",
    tabIndex: 0,
    vkuiClass: "Chip__remove",
    onClick: onRemoveWrapper
  }, createScopedElement(Icon16Cancel, {
    fill: "var(--icon_secondary)"
  }))));
};

Chip.defaultProps = {
  removable: true,
  before: null,
  value: '',
  onRemove: noop
};
export default Chip;
//# sourceMappingURL=Chip.js.map