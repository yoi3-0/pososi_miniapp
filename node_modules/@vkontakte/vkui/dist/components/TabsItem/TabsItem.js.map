{"version":3,"sources":["../../../src/components/TabsItem/TabsItem.tsx"],"names":["useContext","getClassName","Tappable","classNames","VKCOM","usePlatform","hasReactNode","TabsModeContext","Headline","Subhead","Text","TabsItem","children","selected","after","restProps","platform","mode","TypographyComponent","defaultProps"],"mappings":";;;AAAA,SAAuDA,UAAvD,QAAyE,OAAzE;AACA,SAASC,YAAT;AACA,OAAOC,QAAP;AACA,SAASC,UAAT;AACA,SAASC,KAAT;AACA,SAASC,WAAT;AACA,SAASC,YAAT;AACA,SAASC,eAAT;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AACA,OAAOC,IAAP;;AAOA,IAAMC,QAA0C,GAAG,SAA7CA,QAA6C,OAK9B;AAAA,MAJnBC,QAImB,QAJnBA,QAImB;AAAA,MAHnBC,QAGmB,QAHnBA,QAGmB;AAAA,MAFnBC,KAEmB,QAFnBA,KAEmB;AAAA,MADhBC,SACgB;;AACnB,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAMY,IAAI,GAAGjB,UAAU,CAACO,eAAD,CAAvB;AAEA,MAAMW,mBAAmB,GAAGF,QAAQ,KAAKZ,KAAb,GACxBM,IADwB,GAExBO,IAAI,KAAK,SAAT,IAAsBA,IAAI,KAAK,WAA/B,GACER,OADF,GAEED,QAJN;AAMA,SACE,oBAAC,QAAD,eACMO,SADN;AAEE,IAAA,SAAS,EAAEZ,UAAU,CAACF,YAAY,CAAC,UAAD,EAAae,QAAb,CAAb,EAAqC;AAAE,4BAAsBH;AAAxB,KAArC,CAFvB;AAGE,IAAA,SAAS,EAAEI,IAAI,KAAK,WAHtB;AAIE,IAAA,UAAU,EAAC;AAJb,MAME,oBAAC,mBAAD;AAAqB,IAAA,SAAS,EAAC,cAA/B;AAA8C,IAAA,MAAM,EAAC;AAArD,KAA+DL,QAA/D,CANF,EAOGN,YAAY,CAACQ,KAAD,CAAZ,IAAuB;AAAK,IAAA,SAAS,EAAC;AAAf,KAAkCA,KAAlC,CAP1B,CADF;AAWD,CA1BD;;AA4BAH,QAAQ,CAACQ,YAAT,GAAwB;AACtBN,EAAAA,QAAQ,EAAE;AADY,CAAxB;AAIA,eAAeF,QAAf","sourcesContent":["import { FunctionComponent, HTMLAttributes, ReactNode, useContext } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport Tappable from '../Tappable/Tappable';\nimport { classNames } from '../../lib/classNames';\nimport { VKCOM } from '../../lib/platform';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { hasReactNode } from '../../lib/utils';\nimport { TabsModeContext } from '../Tabs/Tabs';\nimport Headline from '../Typography/Headline/Headline';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport Text from '../Typography/Text/Text';\n\nexport interface TabsItemProps extends HTMLAttributes<HTMLElement> {\n  after?: ReactNode;\n  selected?: boolean;\n}\n\nconst TabsItem: FunctionComponent<TabsItemProps> = ({\n  children,\n  selected,\n  after,\n  ...restProps\n}: TabsItemProps) => {\n  const platform = usePlatform();\n  const mode = useContext(TabsModeContext);\n\n  const TypographyComponent = platform === VKCOM\n    ? Text\n    : mode === 'buttons' || mode === 'segmented'\n      ? Subhead\n      : Headline;\n\n  return (\n    <Tappable\n      {...restProps}\n      vkuiClass={classNames(getClassName('TabsItem', platform), { 'TabsItem--selected': selected })}\n      hasActive={mode === 'segmented'}\n      activeMode=\"TabsItem--active\"\n    >\n      <TypographyComponent vkuiClass=\"TabsItem__in\" weight=\"medium\">{children}</TypographyComponent>\n      {hasReactNode(after) && <div vkuiClass=\"TabsItem__after\">{after}</div>}\n    </Tappable>\n  );\n};\n\nTabsItem.defaultProps = {\n  selected: false,\n};\n\nexport default TabsItem;\n"],"file":"TabsItem.js"}