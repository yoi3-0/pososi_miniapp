{"version":3,"sources":["../../../src/components/PanelHeaderButton/PanelHeaderButton.tsx"],"names":["Tappable","getClassName","classNames","usePlatform","isPrimitiveReactNode","IOS","VKCOM","ANDROID","Text","Title","ButtonTypography","primary","children","platform","PanelHeaderButton","label","restProps","isPrimitive","isPrimitiveLabel","hoverMode","activeMode","href","defaultProps"],"mappings":";;;AACA,OAAOA,QAAP;AACA,SAASC,YAAT;AACA,SAASC,UAAT;AACA,SAASC,WAAT;AACA,SAASC,oBAAT;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,OAArB;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;;AAWA,IAAMC,gBAA0D,GAAG,SAA7DA,gBAA6D,OAAkD;AAAA,MAA/CC,OAA+C,QAA/CA,OAA+C;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AACnH,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,MAAIU,QAAQ,KAAKR,GAAjB,EAAsB;AACpB,WACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAwB,MAAA,KAAK,EAAC,GAA9B;AAAkC,MAAA,MAAM,EAAEM,OAAO,GAAG,UAAH,GAAgB;AAAjE,OACGC,QADH,CADF;AAKD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEC,QAAQ,KAAKP,KAAb,GAAqB,SAArB,GAAiC;AAA/C,KACGM,QADH,CADF;AAKD,CAhBD;;AAkBA,OAAO,IAAME,iBAA4D,GAAG,SAA/DA,iBAA+D,QAK9C;AAAA,MAJ5BF,QAI4B,SAJ5BA,QAI4B;AAAA,MAH5BD,OAG4B,SAH5BA,OAG4B;AAAA,MAF5BI,KAE4B,SAF5BA,KAE4B;AAAA,MADzBC,SACyB;;AAC5B,MAAMC,WAAW,GAAGb,oBAAoB,CAACQ,QAAD,CAAxC;AACA,MAAMM,gBAAgB,GAAGd,oBAAoB,CAACW,KAAD,CAA7C;AACA,MAAMF,QAAQ,GAAGV,WAAW,EAA5B;AAEA,MAAIgB,SAAJ;AACA,MAAIC,UAAJ;;AAEA,UAAQP,QAAR;AACE,SAAKN,OAAL;AACEY,MAAAA,SAAS,GAAG,YAAZ;AACAC,MAAAA,UAAU,GAAG,YAAb;AACA;;AACF,SAAKf,GAAL;AACEc,MAAAA,SAAS,GAAG,YAAZ;AACAC,MAAAA,UAAU,GAAG,SAAb;AACA;;AACF,SAAKd,KAAL;AACEa,MAAAA,SAAS,GAAG,0BAAZ;AACAC,MAAAA,UAAU,GAAG,2BAAb;AAXJ;;AAcA,SACE,oBAAC,QAAD,eACMJ,SADN;AAEE,IAAA,SAAS,EAAEG,SAFb;AAGE,IAAA,SAAS,EAAEH,SAAS,CAACK,IAAV,GAAiB,GAAjB,GAAuB,QAHpC;AAIE,IAAA,iBAAiB,EAAE,GAJrB;AAKE,IAAA,UAAU,EAAED,UALd;AAME,IAAA,SAAS,EAAElB,UAAU,CACnBD,YAAY,CAAC,mBAAD,EAAsBY,QAAtB,CADO,EAEnB;AACE,oCAA8BF,OADhC;AAEE,sCAAgCM,WAFlC;AAGE,yCAAmC,CAACA,WAAD,IAAgB,CAACC;AAHtD,KAFmB;AANvB,MAeGD,WAAW,GACR,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEN;AAA3B,KAAqCC,QAArC,CADQ,GAERA,QAjBN,EAmBGM,gBAAgB,GACb,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEP;AAA3B,KAAqCI,KAArC,CADa,GAEbA,KArBN,CADF;AA0BD,CArDM;AAuDPD,iBAAiB,CAACQ,YAAlB,GAAiC;AAC/B,aAAW,KADoB;AAE/B,gBAAc;AAFiB,CAAjC","sourcesContent":["import { AllHTMLAttributes, FunctionComponent, ReactNode } from 'react';\nimport Tappable, { TappableProps } from '../Tappable/Tappable';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { isPrimitiveReactNode } from '../../lib/utils';\nimport { IOS, VKCOM, ANDROID } from '../../lib/platform';\nimport Text from '../Typography/Text/Text';\nimport Title from '../Typography/Title/Title';\n\nexport interface PanelHeaderButtonProps extends Omit<TappableProps, 'label'> {\n  primary?: boolean;\n  label?: ReactNode;\n}\n\ninterface ButtonTypographyProps extends AllHTMLAttributes<HTMLElement> {\n  primary?: PanelHeaderButtonProps['primary'];\n}\n\nconst ButtonTypography: FunctionComponent<ButtonTypographyProps> = ({ primary, children }: ButtonTypographyProps) => {\n  const platform = usePlatform();\n\n  if (platform === IOS) {\n    return (\n      <Title Component=\"span\" level=\"3\" weight={primary ? 'semibold' : 'regular'}>\n        {children}\n      </Title>\n    );\n  }\n\n  return (\n    <Text weight={platform === VKCOM ? 'regular' : 'medium'}>\n      {children}\n    </Text>\n  );\n};\n\nexport const PanelHeaderButton: FunctionComponent<PanelHeaderButtonProps> = ({\n  children,\n  primary,\n  label,\n  ...restProps\n}: PanelHeaderButtonProps) => {\n  const isPrimitive = isPrimitiveReactNode(children);\n  const isPrimitiveLabel = isPrimitiveReactNode(label);\n  const platform = usePlatform();\n\n  let hoverMode;\n  let activeMode;\n\n  switch (platform) {\n    case ANDROID:\n      hoverMode = 'background';\n      activeMode = 'background';\n      break;\n    case IOS:\n      hoverMode = 'background';\n      activeMode = 'opacity';\n      break;\n    case VKCOM:\n      hoverMode = 'PanelHeaderButton--hover';\n      activeMode = 'PanelHeaderButton--active';\n  }\n\n  return (\n    <Tappable\n      {...restProps}\n      hoverMode={hoverMode}\n      Component={restProps.href ? 'a' : 'button'}\n      activeEffectDelay={200}\n      activeMode={activeMode}\n      vkuiClass={classNames(\n        getClassName('PanelHeaderButton', platform),\n        {\n          'PanelHeaderButton--primary': primary,\n          'PanelHeaderButton--primitive': isPrimitive,\n          'PanelHeaderButton--notPrimitive': !isPrimitive && !isPrimitiveLabel,\n        },\n      )}\n    >\n      {isPrimitive\n        ? <ButtonTypography primary={primary}>{children}</ButtonTypography>\n        : children\n      }\n      {isPrimitiveLabel\n        ? <ButtonTypography primary={primary}>{label}</ButtonTypography>\n        : label\n      }\n    </Tappable>\n  );\n};\n\nPanelHeaderButton.defaultProps = {\n  'primary': false,\n  'aria-label': 'Закрыть',\n};\n"],"file":"PanelHeaderButton.js"}