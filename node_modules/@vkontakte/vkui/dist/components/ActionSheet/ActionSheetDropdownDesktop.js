import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/assertThisInitialized";
import _inherits from "@babel/runtime/helpers/inherits";
import _createSuper from "@babel/runtime/helpers/createSuper";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { createScopedElement } from "../../lib/jsxRuntime";
import { Component } from 'react';
import { getClassName } from "../../helpers/getClassName";
import { classNames } from "../../lib/classNames";
import { withPlatform } from "../../hoc/withPlatform";
import { withAdaptivity } from "../../hoc/withAdaptivity";
import { withDOM } from "../../lib/dom";

var ActionSheetDropdownDesktop = /*#__PURE__*/function (_Component) {
  _inherits(ActionSheetDropdownDesktop, _Component);

  var _super = _createSuper(ActionSheetDropdownDesktop);

  function ActionSheetDropdownDesktop() {
    var _this;

    _classCallCheck(this, ActionSheetDropdownDesktop);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "state", {
      dropdownStyles: {
        left: '0',
        top: '0',
        opacity: '0',
        pointerEvents: 'none'
      }
    });

    _defineProperty(_assertThisInitialized(_this), "componentDidMount", function () {
      var _this$props = _this.props,
          toggleRef = _this$props.toggleRef,
          elementRef = _this$props.elementRef,
          popupDirection = _this$props.popupDirection;
      var toggleRect = toggleRef.getBoundingClientRect();
      var elementRect = elementRef.current.getBoundingClientRect();
      var left = toggleRect.left + toggleRect.width - elementRect.width + _this.window.pageXOffset;
      var top;

      if (popupDirection === 'top' || typeof popupDirection === 'function' && popupDirection(elementRef) === 'top') {
        top = toggleRect.top - elementRect.height + _this.window.pageYOffset;
      } else {
        top = toggleRect.top + toggleRect.height + _this.window.pageYOffset;
      }

      _this.setState({
        dropdownStyles: {
          left: left,
          top: top,
          opacity: 1,
          pointerEvents: 'auto'
        }
      });

      setTimeout(function () {
        _this.window.addEventListener('click', _this.handleClickOutside);
      });
    });

    _defineProperty(_assertThisInitialized(_this), "componentWillUnmount", function () {
      _this.window.removeEventListener('click', _this.handleClickOutside);
    });

    _defineProperty(_assertThisInitialized(_this), "handleClickOutside", function (e) {
      var dropdownElement = _this.props.elementRef.current;

      if (dropdownElement !== e.target && dropdownElement && !dropdownElement.contains(e.target)) {
        _this.onClose();
      }
    });

    _defineProperty(_assertThisInitialized(_this), "onClose", function () {
      _this.props.onClose();
    });

    _defineProperty(_assertThisInitialized(_this), "stopPropagation", function (e) {
      return e.stopPropagation();
    });

    return _this;
  }

  _createClass(ActionSheetDropdownDesktop, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          children = _this$props2.children,
          platform = _this$props2.platform,
          elementRef = _this$props2.elementRef,
          toggleRef = _this$props2.toggleRef,
          closing = _this$props2.closing,
          sizeY = _this$props2.sizeY,
          window = _this$props2.window,
          document = _this$props2.document,
          popupDirection = _this$props2.popupDirection,
          restProps = _objectWithoutProperties(_this$props2, ["children", "platform", "elementRef", "toggleRef", "closing", "sizeY", "window", "document", "popupDirection"]);

      var baseClaseName = getClassName('ActionSheet', platform);
      return createScopedElement("div", _extends({}, restProps, {
        ref: elementRef,
        onClick: this.stopPropagation,
        style: this.state.dropdownStyles,
        vkuiClass: classNames(baseClaseName, 'ActionSheet--desktop', {
          'ActionSheet--closing': this.props.closing
        }, "ActionSheet--sizeY-".concat(sizeY))
      }), children);
    }
  }, {
    key: "window",
    get: function get() {
      return this.props.window;
    }
  }]);

  return ActionSheetDropdownDesktop;
}(Component);

export default withAdaptivity(withPlatform(withDOM(ActionSheetDropdownDesktop)), {
  sizeY: true
});
//# sourceMappingURL=ActionSheetDropdownDesktop.js.map