import _extends from "@babel/runtime/helpers/extends";
import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import { createScopedElement } from "../../lib/jsxRuntime";
import { useState } from 'react';
import { getClassName } from "../../helpers/getClassName";
import { classNames } from "../../lib/classNames";
import { usePlatform } from "../../hooks/usePlatform";
import { hasReactNode } from "../../lib/utils";
import { withAdaptivity } from "../../hoc/withAdaptivity";
var FormField = withAdaptivity(function (_ref) {
  var Component = _ref.Component,
      children = _ref.children,
      getRootRef = _ref.getRootRef,
      after = _ref.after,
      disabled = _ref.disabled,
      sizeY = _ref.sizeY,
      restProps = _objectWithoutProperties(_ref, ["Component", "children", "getRootRef", "after", "disabled", "sizeY"]);

  var platform = usePlatform();

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      hover = _useState2[0],
      setHover = _useState2[1];

  var handleMouseEnter = function handleMouseEnter(e) {
    e.stopPropagation();
    setHover(true);
  };

  var handleMouseLeave = function handleMouseLeave(e) {
    e.stopPropagation();
    setHover(false);
  };

  return createScopedElement(Component, _extends({}, restProps, {
    ref: getRootRef,
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave,
    vkuiClass: classNames(getClassName('FormField', platform), "FormField--sizeY-".concat(sizeY), {
      'FormField--disabled': disabled
    })
  }), children, hasReactNode(after) && createScopedElement("div", {
    vkuiClass: "FormField__after"
  }, after), createScopedElement("div", {
    vkuiClass: classNames('FormField__border', {
      'FormField__border--hover': !disabled && hover
    })
  }));
}, {
  sizeY: true
});
FormField.defaultProps = {
  Component: 'div'
};
export default FormField;
//# sourceMappingURL=FormField.js.map