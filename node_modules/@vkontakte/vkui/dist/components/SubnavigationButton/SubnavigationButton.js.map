{"version":3,"sources":["../../../src/components/SubnavigationButton/SubnavigationButton.tsx"],"names":["classNames","getClassName","getTitleFromChildren","hasReactNode","Tappable","Icon16Dropdown","usePlatform","Caption","Subhead","SubnavigationButtonTypography","textLevel","restProps","SubnavigationButton","props","platform","size","selected","before","after","expandable","children","defaultProps"],"mappings":";;;AACA,SAASA,UAAT;AACA,SAASC,YAAT;AACA,SAASC,oBAAT,EAA+BC,YAA/B;AACA,OAAOC,QAAP;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;;AAwBA,IAAMC,6BAA8D,GAAG,SAAjEA,6BAAiE,OAA8D;AAAA,MAA3DC,SAA2D,QAA3DA,SAA2D;AAAA,MAA7CC,SAA6C;;AACnI,MAAID,SAAS,KAAK,CAAlB,EAAqB;AACnB,WAAO,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAC;AAAhB,OAA8BC,SAA9B,EAAP;AACD;;AAED,SACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAED,SAAS,KAAK,CAAd,GAAkB,GAAlB,GAAwB,GADjC;AAEE,IAAA,MAAM,EAAC;AAFT,KAGMC,SAHN,EADF;AAOD,CAZD;;AAcA,OAAO,IAAMC,mBAAiD,GAAG,SAApDA,mBAAoD,CAACC,KAAD,EAAqC;AACpG,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AADoG,MAGlGS,IAHkG,GAWhGF,KAXgG,CAGlGE,IAHkG;AAAA,MAIlGC,QAJkG,GAWhGH,KAXgG,CAIlGG,QAJkG;AAAA,MAKlGN,SALkG,GAWhGG,KAXgG,CAKlGH,SALkG;AAAA,MAMlGO,MANkG,GAWhGJ,KAXgG,CAMlGI,MANkG;AAAA,MAOlGC,KAPkG,GAWhGL,KAXgG,CAOlGK,KAPkG;AAAA,MAQlGC,UARkG,GAWhGN,KAXgG,CAQlGM,UARkG;AAAA,MASlGC,QATkG,GAWhGP,KAXgG,CASlGO,QATkG;AAAA,MAU/FT,SAV+F,4BAWhGE,KAXgG;;AAapG,SACE,oBAAC,QAAD,eACMF,SADN;AAEE,IAAA,SAAS,EAAE,KAFb;AAGE,IAAA,SAAS,EAAEX,UAAU,CACnBC,YAAY,CAAC,qBAAD,EAAwBa,QAAxB,CADO,iCAEKC,IAFL,GAGnB;AACE,uCAAiCC;AADnC,KAHmB,CAHvB;AAUE,kBAAYd,oBAAoB,CAACkB,QAAD;AAVlC,MAYE;AAAM,IAAA,SAAS,EAAC;AAAhB,KACGjB,YAAY,CAACc,MAAD,CAAZ,IAAwB;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA+CA,MAA/C,CAD3B,EAEE,oBAAC,6BAAD;AACE,IAAA,SAAS,EAAEP,SADb;AAEE,IAAA,SAAS,EAAC,4BAFZ;AAGE,IAAA,SAAS,EAAC;AAHZ,KAKGU,QALH,CAFF,EASGjB,YAAY,CAACe,KAAD,CAAZ,IAAuB;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA8CA,KAA9C,CAT1B,EAUGC,UAAU,IAAI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAC;AAA1B,IAVjB,CAZF,CADF;AA2BD,CAxCM;AA0CPP,mBAAmB,CAACS,YAApB,GAAmC;AACjCN,EAAAA,IAAI,EAAE,GAD2B;AAEjCL,EAAAA,SAAS,EAAE;AAFsB,CAAnC","sourcesContent":["import { FC, ReactNode, ElementType } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { getTitleFromChildren, hasReactNode } from '../../lib/utils';\nimport Tappable, { TappableProps } from '../Tappable/Tappable';\nimport { Icon16Dropdown } from '@vkontakte/icons';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport Caption from '../Typography/Caption/Caption';\nimport Subhead from '../Typography/Subhead/Subhead';\n\nexport interface SubnavigationButtonProps extends Omit<TappableProps, 'size'> {\n  size?: 'm' | 'l';\n  selected?: boolean;\n  /**\n   * Размер шрифта. Этим свойством рекомендуется пользоваться, чтобы отрегулировать размер шрифта у кнопок в `<SubnavigationBar mode=\"fixed\" />`\n   */\n  textLevel?: 1 | 2 | 3;\n  /**\n   * Рекомендуется использовать только иконки с размером 24\n   */\n  before?: ReactNode;\n  /**\n   * Рекомендуется использовать только `<Counter size=\"s\" />` или `<Badge />`\n   */\n  after?: ReactNode;\n  expandable?: boolean;\n}\n\ninterface SubnavButtonTypographyProps extends Pick<SubnavigationButtonProps, 'textLevel'> {\n  Component?: ElementType;\n}\n\nconst SubnavigationButtonTypography: FC<SubnavButtonTypographyProps> = ({ textLevel, ...restProps }: SubnavButtonTypographyProps) => {\n  if (textLevel === 1) {\n    return <Subhead weight=\"regular\" {...restProps} />;\n  }\n\n  return (\n    <Caption\n      level={textLevel === 2 ? '1' : '2'}\n      weight=\"regular\"\n      {...restProps}\n    />\n  );\n};\n\nexport const SubnavigationButton: FC<SubnavigationButtonProps> = (props: SubnavigationButtonProps) => {\n  const platform = usePlatform();\n  const {\n    size,\n    selected,\n    textLevel,\n    before,\n    after,\n    expandable,\n    children,\n    ...restProps\n  } = props;\n\n  return (\n    <Tappable\n      {...restProps}\n      hasActive={false}\n      vkuiClass={classNames(\n        getClassName('SubnavigationButton', platform),\n        `SubnavigationButton--${size}`,\n        {\n          'SubnavigationButton--selected': selected,\n        },\n      )}\n      aria-label={getTitleFromChildren(children)}\n    >\n      <span vkuiClass=\"SubnavigationButton__in\">\n        {hasReactNode(before) && <span vkuiClass=\"SubnavigationButton__before\">{before}</span>}\n        <SubnavigationButtonTypography\n          textLevel={textLevel}\n          vkuiClass=\"SubnavigationButton__label\"\n          Component=\"span\"\n        >\n          {children}\n        </SubnavigationButtonTypography>\n        {hasReactNode(after) && <span vkuiClass=\"SubnavigationButton__after\">{after}</span>}\n        {expandable && <Icon16Dropdown vkuiClass=\"SubnavigationButton__expandableIcon\" />}\n      </span>\n    </Tappable>\n  );\n};\n\nSubnavigationButton.defaultProps = {\n  size: 'm',\n  textLevel: 1,\n};\n"],"file":"SubnavigationButton.js"}