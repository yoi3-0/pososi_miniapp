/// <reference path="../../../types/global.d.ts" />
import { ChangeEvent } from 'react';
import { ChipsInputOption } from '../ChipsInput/ChipsInput';
import { ChipsSelectProps } from './ChipsSelect';
export declare const useChipsSelect: <Option extends ChipsInputOption>(props: Partial<ChipsSelectProps<Option>>) => {
    fieldValue: string;
    handleInputChange: (e: ChangeEvent<HTMLInputElement>) => void;
    opened: boolean;
    setOpened: import("react").Dispatch<import("react").SetStateAction<boolean>>;
    filteredOptions: Option[];
    focusedOptionIndex: number;
    setFocusedOptionIndex: import("react").Dispatch<import("react").SetStateAction<number>>;
    focusedOption: Option;
    setFocusedOption: import("react").Dispatch<import("react").SetStateAction<Option>>;
    selectedOptions: Option[];
    setFieldValue: import("react").Dispatch<import("react").SetStateAction<string>>;
    setSelectedOptions: import("react").Dispatch<import("react").SetStateAction<Option[]>>;
    clearInput: () => void;
    toggleOption: (newOption: Option, value?: boolean) => void;
    addOption: (newOption: Option) => void;
    addOptionFromInput: () => void;
    removeOption: (value: string | number) => void;
};
