{"version":3,"sources":["../../../src/components/Textarea/Textarea.tsx"],"names":["memo","classNames","FormField","withAdaptivity","getClassName","useEnsuredControl","useExternRef","usePlatform","useIsomorphicLayoutEffect","Textarea","defaultValue","grow","style","onResize","className","getRootRef","getRef","sizeY","restProps","value","onChange","elementRef","platform","el","current","height","scrollHeight","disabled","defaultProps"],"mappings":";;;;AAAA,SAAqCA,IAArC,QAAiD,OAAjD;AACA,SAASC,UAAT;AACA,OAAOC,SAAP;AAEA,SAASC,cAAT;AACA,SAASC,YAAT;AACA,SAASC,iBAAT;AACA,SAASC,YAAT;AACA,SAASC,WAAT;AACA,SAASC,yBAAT;AAYA,IAAMC,QAA2B,gBAAGT,IAAI,CAAC,gBAUnC;AAAA,MATJU,YASI,QATJA,YASI;AAAA,MARJC,IAQI,QARJA,IAQI;AAAA,MAPJC,KAOI,QAPJA,KAOI;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,SAKI,QALJA,SAKI;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJC,MAGI,QAHJA,MAGI;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADDC,SACC;;AAAA,2BACsBb,iBAAiB,CAACa,SAAD,EAAY;AAAER,IAAAA,YAAY,EAAZA;AAAF,GAAZ,CADvC;AAAA;AAAA,MACGS,KADH;AAAA,MACUC,QADV;;AAEJ,MAAMC,UAAU,GAAGf,YAAY,CAACU,MAAD,CAA/B;AACA,MAAMM,QAAQ,GAAGf,WAAW,EAA5B,CAHI,CAKJ;;AACAC,EAAAA,yBAAyB,CAAC,YAAM;AAC9B,QAAMe,EAAE,GAAGF,UAAU,CAACG,OAAtB;;AACA,QAAIb,IAAJ,EAAU;AACRY,MAAAA,EAAE,CAACX,KAAH,CAASa,MAAT,GAAkB,IAAlB;AACAF,MAAAA,EAAE,CAACX,KAAH,CAASa,MAAT,aAAqBF,EAAE,CAACG,YAAxB,QAFQ,CAGR;;AACAb,MAAAA,QAAQ,IAAIA,QAAQ,CAACU,EAAD,CAApB;AACD;AACF,GARwB,EAQtB,CAACZ,IAAD,EAAOQ,KAAP,CARsB,CAAzB;AAUA,SACE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAElB,UAAU,CAACG,YAAY,CAAC,UAAD,EAAakB,QAAb,CAAb,4BAAwDL,KAAxD,EADvB;AAEE,IAAA,SAAS,EAAEH,SAFb;AAGE,IAAA,KAAK,EAAEF,KAHT;AAIE,IAAA,UAAU,EAAEG,UAJd;AAKE,IAAA,QAAQ,EAAEG,SAAS,CAACS;AALtB,KAOE,6CACMT,SADN;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAKE,IAAA,GAAG,EAAEC;AALP,KAPF,CADF;AAiBD,CA3CuC,CAAxC;AA6CAZ,QAAQ,CAACmB,YAAT,GAAwB;AACtBlB,EAAAA,YAAY,EAAE,EADQ;AAEtBC,EAAAA,IAAI,EAAE;AAFgB,CAAxB;AAKA,eAAeR,cAAc,CAACM,QAAD,EAAW;AAAEQ,EAAAA,KAAK,EAAE;AAAT,CAAX,CAA7B","sourcesContent":["import { TextareaHTMLAttributes, FC, memo } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport FormField from '../FormField/FormField';\nimport { HasRef, HasRootRef } from '../../types';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport { getClassName } from '../../helpers/getClassName';\nimport { useEnsuredControl } from '../../hooks/useEnsuredControl';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\n\nexport interface TextareaProps extends\n  TextareaHTMLAttributes<HTMLTextAreaElement>,\n  HasRef<HTMLTextAreaElement>,\n  HasRootRef<HTMLElement>,\n  AdaptivityProps {\n  grow?: boolean;\n  onResize?(el: HTMLTextAreaElement): void;\n  defaultValue?: string;\n}\n\nconst Textarea: FC<TextareaProps> = memo(({\n  defaultValue,\n  grow,\n  style,\n  onResize,\n  className,\n  getRootRef,\n  getRef,\n  sizeY,\n  ...restProps\n}) => {\n  const [value, onChange] = useEnsuredControl(restProps, { defaultValue });\n  const elementRef = useExternRef(getRef);\n  const platform = usePlatform();\n\n  // autosize input\n  useIsomorphicLayoutEffect(() => {\n    const el = elementRef.current;\n    if (grow) {\n      el.style.height = null;\n      el.style.height = `${el.scrollHeight}px`;\n      // TODO: call only when height changed?\n      onResize && onResize(el);\n    }\n  }, [grow, value]);\n\n  return (\n    <FormField\n      vkuiClass={classNames(getClassName('Textarea', platform), `Textarea--sizeY-${sizeY}`)}\n      className={className}\n      style={style}\n      getRootRef={getRootRef}\n      disabled={restProps.disabled}\n    >\n      <textarea\n        {...restProps}\n        vkuiClass=\"Textarea__el\"\n        value={value}\n        onChange={onChange}\n        ref={elementRef}\n      />\n    </FormField>\n  );\n});\n\nTextarea.defaultProps = {\n  defaultValue: '',\n  grow: true,\n};\n\nexport default withAdaptivity(Textarea, { sizeY: true });\n"],"file":"Textarea.js"}