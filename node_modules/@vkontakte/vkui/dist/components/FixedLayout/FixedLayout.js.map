{"version":3,"sources":["../../../src/components/FixedLayout/FixedLayout.tsx"],"names":["React","getClassName","classNames","transitionEndEventName","transitionStartEventName","withContext","withPlatform","withPanelContext","setRef","SplitColContext","TooltipContainer","withDOM","IOS","warnOnce","warn","FixedLayout","position","top","bottom","width","e","panelScroll","detail","scrolls","props","panel","Array","isArray","length","fromPanelHasScroll","from","toPanelHasScroll","to","panelAnimated","platform","isBack","canTargetPanelScroll","setState","vertical","el","offsetTop","doResize","colRef","splitCol","current","node","offsetWidth","element","getRootRef","onMountResizeTimeout","setTimeout","window","addEventListener","document","onViewTransitionStart","onViewTransitionEnd","clearInterval","removeEventListener","children","style","getRef","filled","getPanelNode","restProps","state","elem","process","env","NODE_ENV","panelEl","currentPanel","scrollHeight","clientHeight","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAmD,OAAnD;AACA,SAASC,YAAT;AACA,SAASC,UAAT;AACA,SAASC,sBAAT,EAA6DC,wBAA7D;AACA,SAASC,WAAT;AAEA,SAASC,YAAT;AACA,SAASC,gBAAT;AACA,SAASC,MAAT;AACA,SAASC,eAAT;AACA,SAASC,gBAAT;AAEA,SAAmBC,OAAnB;AACA,SAASC,GAAT;AACA,SAASC,QAAT;AA0BA,IAAMC,IAAI,GAAGD,QAAQ,CAAC,aAAD,CAArB;;IAEME,W;;;;;;;;;;;;;;;;4DACsB;AACxBC,MAAAA,QAAQ,EAAE,UADc;AAExBC,MAAAA,GAAG,EAAE,IAFmB;AAGxBC,MAAAA,MAAM,EAAE,IAHgB;AAIxBC,MAAAA,KAAK,EAAE;AAJiB,K;;;;;;4EAqDa,UAACC,CAAD,EAAgD;AACrF,UAAIC,WAAW,GAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiB,MAAKC,KAAL,CAAWC,KAA5B,KAAsC,CAAxD,CADqF,CAGrF;;AACA,UAAIC,KAAK,CAACC,OAAN,CAAcN,WAAd,CAAJ,EAAgC;AAC9B,YAAME,OAAO,GAAGF,WAAhB;AACAA,QAAAA,WAAW,GAAGE,OAAO,CAACA,OAAO,CAACK,MAAR,GAAiB,CAAlB,CAArB;AACD;;AAED,UAAMC,kBAAkB,GAAG,MAAKL,KAAL,CAAWC,KAAX,KAAqBL,CAAC,CAACE,MAAF,CAASQ,IAA9B,IAAsCT,WAAW,GAAG,CAA/E;AACA,UAAMU,gBAAgB,GAAG,MAAKP,KAAL,CAAWC,KAAX,KAAqBL,CAAC,CAACE,MAAF,CAASU,EAA9B,IAAoCX,WAAW,GAAG,CAA3E,CAVqF,CAYrF;AACA;;AACA,UAAMY,aAAa,GAAG,MAAKT,KAAL,CAAWU,QAAX,KAAwBtB,GAAxB,IAA+B,EAAE,MAAKY,KAAL,CAAWC,KAAX,KAAqBL,CAAC,CAACE,MAAF,CAASU,EAA9B,IAAoCZ,CAAC,CAACE,MAAF,CAASa,MAA/C,CAArD,CAdqF,CAgBrF;AACA;;AACA,UAAIN,kBAAkB,IAAIE,gBAAgB,IAAI,MAAKK,oBAAzB,IAAiDH,aAA3E,EAA0F;AACxF,cAAKI,QAAL,CAAc;AACZrB,UAAAA,QAAQ,EAAE,UADE;AAEZC,UAAAA,GAAG,EAAE,MAAKO,KAAL,CAAWc,QAAX,KAAwB,KAAxB,IAAiCT,kBAAjC,GAAsD,MAAKU,EAAL,CAAQC,SAAR,GAAoBnB,WAA1E,GAAwF,IAFjF;AAGZH,UAAAA,MAAM,EAAE,MAAKM,KAAL,CAAWc,QAAX,KAAwB,QAAxB,IAAoC,CAACT,kBAArC,GAA0D,CAACR,WAA3D,GAAyE,IAHrE;AAIZF,UAAAA,KAAK,EAAE;AAJK,SAAd;AAMD;AACF,K;;0EAEmC,YAAM;AACxC,YAAKkB,QAAL,CAAc;AACZrB,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,GAAG,EAAE,IAFO;AAGZC,QAAAA,MAAM,EAAE;AAHI,OAAd;;AAMA,YAAKuB,QAAL;AACD,K;;+DAEU,YAAM;AAAA,UACPC,MADO,GACI,MAAKlB,KAAL,CAAWmB,QADf,CACPD,MADO;;AAGf,UAAIA,MAAM,IAAIA,MAAM,CAACE,OAArB,EAA8B;AAC5B,YAAMC,IAAiB,GAAGH,MAAM,CAACE,OAAjC;AACA,YAAMzB,KAAK,GAAG0B,IAAI,CAACC,WAAnB;;AAEA,cAAKT,QAAL,CAAc;AAAElB,UAAAA,KAAK,YAAKA,KAAL,OAAP;AAAuBH,UAAAA,QAAQ,EAAE;AAAjC,SAAd;AACD,OALD,MAKO;AACL,cAAKqB,QAAL,CAAc;AAAElB,UAAAA,KAAK,EAAE,EAAT;AAAaH,UAAAA,QAAQ,EAAE;AAAvB,SAAd;AACD;AACF,K;;6DAEqC,UAAC+B,OAAD,EAAa;AACjD,YAAKR,EAAL,GAAUQ,OAAV;AACAvC,MAAAA,MAAM,CAACuC,OAAD,EAAU,MAAKvB,KAAL,CAAWwB,UAArB,CAAN;AACD,K;;;;;;;wCAtEmB;AAAA;;AAClB,WAAKC,oBAAL,GAA4BC,UAAU,CAAC;AAAA,eAAM,MAAI,CAACT,QAAL,EAAN;AAAA,OAAD,CAAtC;AACA,WAAKU,MAAL,CAAYC,gBAAZ,CAA6B,QAA7B,EAAuC,KAAKX,QAA5C;AAEA,WAAKY,QAAL,CAAcD,gBAAd,CAA+BhD,wBAA/B,EAAyD,KAAKkD,qBAA9D;AACA,WAAKD,QAAL,CAAcD,gBAAd,CAA+BjD,sBAA/B,EAAuD,KAAKoD,mBAA5D;AACD;;;2CAEsB;AACrBC,MAAAA,aAAa,CAAC,KAAKP,oBAAN,CAAb;AACA,WAAKE,MAAL,CAAYM,mBAAZ,CAAgC,QAAhC,EAA0C,KAAKhB,QAA/C;AAEA,WAAKY,QAAL,CAAcI,mBAAd,CAAkCrD,wBAAlC,EAA4D,KAAKkD,qBAAjE;AACA,WAAKD,QAAL,CAAcI,mBAAd,CAAkCtD,sBAAlC,EAA0D,KAAKoD,mBAA/D;AACD;;;6BA0DQ;AAAA,wBAeH,KAAK/B,KAfF;AAAA,UAELkC,QAFK,eAELA,QAFK;AAAA,UAGLC,KAHK,eAGLA,KAHK;AAAA,UAILrB,QAJK,eAILA,QAJK;AAAA,UAKLU,UALK,eAKLA,UALK;AAAA,UAMLY,MANK,eAMLA,MANK;AAAA,UAOL1B,QAPK,eAOLA,QAPK;AAAA,UAQL2B,MARK,eAQLA,MARK;AAAA,UASLlB,QATK,eASLA,QATK;AAAA,UAULlB,KAVK,eAULA,KAVK;AAAA,UAWLqC,YAXK,eAWLA,YAXK;AAAA,UAYLX,MAZK,eAYLA,MAZK;AAAA,UAaLE,QAbK,eAaLA,QAbK;AAAA,UAcFU,SAdE;;AAiBP,aACE,oBAAC,gBAAD,eACMA,SADN;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,GAAG,EAAE,KAAKH,MAHZ;AAIE,QAAA,SAAS,EAAE1D,UAAU,CAACD,YAAY,CAAC,aAAD,EAAgBiC,QAAhB,CAAb,EAAwC;AAC3D,iCAAuB2B;AADoC,SAAxC,yBAEFvB,QAFE,EAJvB;AAOE,QAAA,KAAK,kCAAOqB,KAAP,GAAiB,KAAKK,KAAtB;AAPP,UASE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,GAAG,EAAEJ;AAAtC,SAA+CF,QAA/C,CATF,CADF;AAaD;;;wBAhIc;AACb,aAAO,KAAKlC,KAAL,CAAW6B,QAAlB;AACD;;;wBAEY;AACX,aAAO,KAAK7B,KAAL,CAAW2B,MAAlB;AACD;;;wBAE+B;AAC9B,UAAMc,IAAI,GAAG,KAAKzC,KAAL,CAAWsC,YAAX,EAAb;;AAEA,UAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0C,CAACH,IAA/C,EAAqD;AACnDnD,QAAAA,IAAI,CAAC,yBAAD,CAAJ;AACD;;AAED,aAAOmD,IAAP;AACD;;;wBAE0B;AACzB,UAAMI,OAAO,GAAG,KAAKC,YAArB;;AACA,UAAI,CAACD,OAAL,EAAc;AACZ,eAAO,IAAP,CADY,CACC;AACd;;AACD,aAAOA,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,YAAtC;AACD;;;;EApCuBxE,KAAK,CAACyE,S;;AA+IhC,eAAepE,WAAW,CACxBC,YAAY,CAACC,gBAAgB,CAACI,OAAO,CAAmBI,WAAnB,CAAR,CAAjB,CADY,EAExBN,eAFwB,EAGxB,UAHwB,CAA1B","sourcesContent":["import React, { HTMLAttributes, RefCallback } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { transitionEndEventName, TransitionStartEventDetail, transitionStartEventName } from '../View/View';\nimport { withContext } from '../../hoc/withContext';\nimport { HasPlatform, HasRef, HasRootRef } from '../../types';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { withPanelContext } from '../Panel/withPanelContext';\nimport { setRef } from '../../lib/utils';\nimport { SplitColContext, SplitColContextProps } from '../SplitCol/SplitCol';\nimport { TooltipContainer } from '../Tooltip/TooltipContainer';\nimport { PanelContextProps } from '../Panel/PanelContext';\nimport { DOMProps, withDOM } from '../../lib/dom';\nimport { IOS } from '../../lib/platform';\nimport { warnOnce } from '../../lib/warnOnce';\n\nexport interface FixedLayoutProps extends\n  HTMLAttributes<HTMLDivElement>,\n  HasRootRef<HTMLDivElement>,\n  HasRef<HTMLDivElement>,\n  HasPlatform {\n  vertical?: 'top' | 'bottom';\n  /**\n   * Это свойство определяет, будет ли фон компонента окрашен в цвет фона контента.\n   * Это часто необходимо для фиксированных кнопок в нижней части экрана.\n   */\n  filled?: boolean;\n  /**\n   * @ignore\n   */\n  splitCol?: SplitColContextProps;\n}\n\nexport interface FixedLayoutState {\n  position: 'absolute' | null;\n  top: number;\n  bottom: number;\n  width: string;\n}\n\nconst warn = warnOnce('FixedLayout');\n\nclass FixedLayout extends React.Component<FixedLayoutProps & DOMProps & PanelContextProps, FixedLayoutState> {\n  state: FixedLayoutState = {\n    position: 'absolute',\n    top: null,\n    bottom: null,\n    width: '',\n  };\n\n  el: HTMLDivElement;\n\n  private onMountResizeTimeout: number;\n\n  get document() {\n    return this.props.document;\n  }\n\n  get window() {\n    return this.props.window;\n  }\n\n  get currentPanel(): HTMLElement {\n    const elem = this.props.getPanelNode();\n\n    if (process.env.NODE_ENV === 'development' && !elem) {\n      warn('Panel element not found');\n    }\n\n    return elem;\n  }\n\n  get canTargetPanelScroll() {\n    const panelEl = this.currentPanel;\n    if (!panelEl) {\n      return true; // Всегда предпологаем, что может быть скролл в случае, если нет document\n    }\n    return panelEl.scrollHeight > panelEl.clientHeight;\n  }\n\n  componentDidMount() {\n    this.onMountResizeTimeout = setTimeout(() => this.doResize());\n    this.window.addEventListener('resize', this.doResize);\n\n    this.document.addEventListener(transitionStartEventName, this.onViewTransitionStart);\n    this.document.addEventListener(transitionEndEventName, this.onViewTransitionEnd);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.onMountResizeTimeout);\n    this.window.removeEventListener('resize', this.doResize);\n\n    this.document.removeEventListener(transitionStartEventName, this.onViewTransitionStart);\n    this.document.removeEventListener(transitionEndEventName, this.onViewTransitionEnd);\n  }\n\n  onViewTransitionStart: EventListener = (e: CustomEvent<TransitionStartEventDetail>) => {\n    let panelScroll = e.detail.scrolls[this.props.panel] || 0;\n\n    // support for unstable ViewInfinite\n    if (Array.isArray(panelScroll)) {\n      const scrolls = panelScroll as number[];\n      panelScroll = scrolls[scrolls.length - 1];\n    }\n\n    const fromPanelHasScroll = this.props.panel === e.detail.from && panelScroll > 0;\n    const toPanelHasScroll = this.props.panel === e.detail.to && panelScroll > 0;\n\n    // если переход назад на Android - анимация только у панели с которой уходим (detail.from), и подстраиваться под скролл надо только на ней\n    // на iOS переход между панелями горизонтальный, поэтому там нужно подстраивать хедеры на обеих панелях\n    const panelAnimated = this.props.platform === IOS || !(this.props.panel === e.detail.to && e.detail.isBack);\n\n    // Для панелей, с которых уходим всегда выставляется скролл\n    // Для панелей на которые приходим надо смотреть, есть ли браузерный скролл и применяется ли к ней анимация перехода:\n    if (fromPanelHasScroll || toPanelHasScroll && this.canTargetPanelScroll && panelAnimated) {\n      this.setState({\n        position: 'absolute',\n        top: this.props.vertical === 'top' || fromPanelHasScroll ? this.el.offsetTop + panelScroll : null,\n        bottom: this.props.vertical === 'bottom' && !fromPanelHasScroll ? -panelScroll : null,\n        width: '',\n      });\n    }\n  };\n\n  onViewTransitionEnd: VoidFunction = () => {\n    this.setState({\n      position: null,\n      top: null,\n      bottom: null,\n    });\n\n    this.doResize();\n  };\n\n  doResize = () => {\n    const { colRef } = this.props.splitCol;\n\n    if (colRef && colRef.current) {\n      const node: HTMLElement = colRef.current;\n      const width = node.offsetWidth;\n\n      this.setState({ width: `${width}px`, position: null });\n    } else {\n      this.setState({ width: '', position: null });\n    }\n  };\n\n  getRef: RefCallback<HTMLDivElement> = (element) => {\n    this.el = element;\n    setRef(element, this.props.getRootRef);\n  };\n\n  render() {\n    const {\n      children,\n      style,\n      vertical,\n      getRootRef,\n      getRef,\n      platform,\n      filled,\n      splitCol,\n      panel,\n      getPanelNode,\n      window,\n      document,\n      ...restProps\n    } = this.props;\n\n    return (\n      <TooltipContainer\n        {...restProps}\n        fixed\n        ref={this.getRef}\n        vkuiClass={classNames(getClassName('FixedLayout', platform), {\n          'FixedLayout--filled': filled,\n        }, `FixedLayout--${vertical}`)}\n        style={{ ...style, ...this.state }}\n      >\n        <div vkuiClass=\"FixedLayout__in\" ref={getRef}>{children}</div>\n      </TooltipContainer>\n    );\n  }\n}\n\nexport default withContext(\n  withPlatform(withPanelContext(withDOM<FixedLayoutProps>(FixedLayout))),\n  SplitColContext,\n  'splitCol',\n);\n"],"file":"FixedLayout.js"}