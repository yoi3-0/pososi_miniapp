{"version":3,"sources":["../../../src/components/PullToRefresh/PullToRefresh.tsx"],"names":["React","PureComponent","Touch","TouchRootContext","FixedLayout","classNames","IOS","ANDROID","VKCOM","getClassName","PullToRefreshSpinner","withPlatform","canUseDOM","withDOM","runTapticImpactOccurred","withContext","ScrollContext","cancelEvent","event","originalEvent","preventDefault","cancelable","stopPropagation","PullToRefresh","props","e","state","refreshing","setState","touchDown","isY","shiftY","params","start","max","pageYOffset","scroll","getScroll","y","watching","positionMultiplier","shift","Math","touchY","currentY","min","maxY","progress","abs","spinnerY","spinnerProgress","canRefresh","contentShift","platform","runRefreshing","refreshingFinished","resetRefreshingState","contentRef","createRef","document","addEventListener","onWindowTouchMove","passive","removeEventListener","prevProps","isFetching","onRefreshingFinish","onRefresh","children","window","restProps","spinnerTransform","contentTransform","onTouchStart","onTouchMove","onTouchEnd","transform","WebkitTransform","opacity"],"mappings":"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","sourcesContent":["import React, { PureComponent, RefObject } from 'react';\nimport Touch, { TouchProps, TouchEvent } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport { classNames } from '../../lib/classNames';\nimport { IOS, ANDROID, VKCOM } from '../../lib/platform';\nimport { getClassName } from '../../helpers/getClassName';\nimport PullToRefreshSpinner from './PullToRefreshSpinner';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { AnyFunction, HasPlatform } from '../../types';\nimport { canUseDOM, DOMProps, withDOM } from '../../lib/dom';\nimport { runTapticImpactOccurred } from '../../lib/taptic';\nimport { withContext } from '../../hoc/withContext';\nimport { ScrollContext, ScrollContextInterface } from '../AppRoot/ScrollContext';\n\nexport interface PullToRefreshProps extends TouchProps, HasPlatform {\n  /**\n   * Будет вызвана для обновления контента\n   */\n  onRefresh: AnyFunction;\n  /**\n   * Определяет, выполняется ли обновление. Для скрытия спиннера после получения контента необходимо передать `false`\n   */\n  isFetching?: boolean;\n  /** @ignore */\n  scroll?: ScrollContextInterface;\n}\n\nexport interface PullToRefreshState {\n  watching: boolean;\n  refreshing: boolean;\n  canRefresh: boolean;\n\n  touchDown: boolean;\n  refreshingFinished: boolean;\n\n  touchY: number;\n  spinnerY: PullToRefreshParams['start'];\n  spinnerProgress: number;\n  contentShift: number;\n}\n\nexport interface PullToRefreshParams {\n  start: number;\n  max: number;\n  maxY: number;\n  refreshing: number;\n  positionMultiplier: number;\n}\n\nexport type TouchEventHandler = (event: TouchEvent) => void;\n\nfunction cancelEvent(event: any) {\n  if (!event) {\n    return false;\n  }\n  while (event.originalEvent) {\n    event = event.originalEvent;\n  }\n  if (event.preventDefault && event.cancelable) {\n    event.preventDefault();\n  }\n  if (event.stopPropagation) {\n    event.stopPropagation();\n  }\n  return false;\n}\n\nclass PullToRefresh extends PureComponent<PullToRefreshProps & DOMProps, PullToRefreshState> {\n  constructor(props: PullToRefreshProps) {\n    super(props);\n\n    this.params = {\n      start: props.platform === ANDROID || props.platform === VKCOM ? -45 : -10,\n      max: props.platform === ANDROID || props.platform === VKCOM ? 80 : 50,\n      maxY: props.platform === ANDROID || props.platform === VKCOM ? 80 : 400,\n      refreshing: props.platform === ANDROID || props.platform === VKCOM ? 50 : 36,\n\n      positionMultiplier: props.platform === ANDROID || props.platform === VKCOM ? 1 : 0.21,\n    };\n\n    this.state = {\n      watching: false,\n      refreshing: false,\n      canRefresh: false,\n\n      touchDown: false,\n      refreshingFinished: false,\n\n      touchY: 0,\n      spinnerY: this.params.start,\n      spinnerProgress: 0,\n      contentShift: 0,\n    };\n\n    this.contentRef = React.createRef();\n  }\n\n  params: PullToRefreshParams;\n\n  contentRef: RefObject<HTMLDivElement>;\n\n  get document() {\n    return this.props.document;\n  }\n\n  componentDidMount() {\n    if (canUseDOM) {\n      this.document.addEventListener('touchmove', this.onWindowTouchMove, {\n        // @ts-ignore\n        cancelable: true,\n        passive: false,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    // Здесь нужен последний аргумент с такими же параметрами, потому что\n    // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n    // https://github.com/VKCOM/VKUI/issues/444\n    if (canUseDOM) {\n      this.document.removeEventListener('touchmove', this.onWindowTouchMove, {\n        // @ts-ignore\n        cancelable: true,\n        passive: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: PullToRefreshProps) {\n    if (prevProps.isFetching && !this.props.isFetching) {\n      this.onRefreshingFinish();\n    }\n  }\n\n  onTouchStart: TouchEventHandler = (e: TouchEvent) => {\n    if (this.state.refreshing) {\n      cancelEvent(e);\n    }\n    this.setState({ touchDown: true });\n  };\n\n  onWindowTouchMove: EventListener = (event: Event) => {\n    if (this.state.refreshing) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  onTouchMove: TouchEventHandler = (e: TouchEvent) => {\n    const { isY, shiftY } = e;\n    const { start, max } = this.params;\n    const pageYOffset = this.props.scroll.getScroll().y;\n\n    const { refreshing, watching, touchDown } = this.state;\n\n    if (watching && touchDown) {\n      cancelEvent(e);\n\n      const { positionMultiplier } = this.params;\n\n      const shift = Math.max(0, shiftY - this.state.touchY);\n\n      const currentY = Math.max(start, Math.min(this.params.maxY, start + shift * positionMultiplier));\n      const progress = currentY > -10 ? Math.abs((currentY + 10) / max) * 80 : 0;\n\n      this.setState({\n        spinnerY: currentY,\n        spinnerProgress: Math.min(80, Math.max(0, progress)),\n        canRefresh: progress > 80,\n        contentShift: (currentY + 10) * 2.3,\n      });\n\n      if (progress > 85 && !refreshing && this.props.platform === IOS) {\n        this.runRefreshing();\n      }\n    } else if (isY && pageYOffset === 0 && shiftY > 0 && !refreshing && touchDown) {\n      cancelEvent(e);\n\n      this.setState({\n        watching: true,\n        touchY: shiftY,\n        spinnerY: start,\n        spinnerProgress: 0,\n      });\n    }\n  };\n\n  onTouchEnd: VoidFunction = () => {\n    const { refreshing, canRefresh, refreshingFinished } = this.state;\n\n    this.setState({\n      watching: false,\n      touchDown: false,\n    }, () => {\n      if (canRefresh && !refreshing) {\n        this.runRefreshing();\n      } else if (refreshing && refreshingFinished) {\n        this.resetRefreshingState();\n      } else {\n        this.setState({\n          spinnerY: refreshing ? this.params.refreshing : this.params.start,\n          spinnerProgress: 0,\n          contentShift: 0,\n        });\n      }\n    });\n  };\n\n  runRefreshing() {\n    if (!this.state.refreshing && this.props.onRefresh) {\n      this.setState({\n        refreshing: true,\n        spinnerY: this.props.platform === ANDROID || this.props.platform === VKCOM ? this.params.refreshing : this.state.spinnerY,\n      });\n\n      this.props.onRefresh();\n      runTapticImpactOccurred('light');\n    }\n  }\n\n  onRefreshingFinish: VoidFunction = () => {\n    this.setState({\n      refreshingFinished: true,\n    }, () => {\n      !this.state.touchDown && this.resetRefreshingState();\n    });\n  };\n\n  resetRefreshingState() {\n    this.setState({\n      watching: false,\n      canRefresh: false,\n      refreshing: false,\n      refreshingFinished: false,\n      spinnerY: this.params.start,\n      spinnerProgress: 0,\n      contentShift: 0,\n    });\n  }\n\n  render() {\n    const { children, onRefresh, isFetching, platform, window, document, scroll, ...restProps } = this.props;\n    const { watching, refreshing, spinnerY, spinnerProgress, canRefresh, touchDown, contentShift } = this.state;\n\n    const spinnerTransform = `translate3d(0, ${spinnerY}px, 0)`;\n    let contentTransform = '';\n\n    if (platform === IOS && refreshing && !touchDown) {\n      contentTransform = 'translate3d(0, 100px, 0)';\n    } else if (platform === IOS && (contentShift || refreshing)) {\n      contentTransform = `translate3d(0, ${contentShift}px, 0)`;\n    }\n\n    return (\n      <TouchRootContext.Provider value={true}>\n        <Touch\n          {...restProps}\n          onStart={this.onTouchStart}\n          onMove={this.onTouchMove}\n          onEnd={this.onTouchEnd}\n          vkuiClass={classNames(getClassName('PullToRefresh', platform), {\n            'PullToRefresh--watching': watching,\n            'PullToRefresh--refreshing': refreshing,\n          })}\n        >\n          <FixedLayout vkuiClass=\"PullToRefresh__controls\">\n            <PullToRefreshSpinner\n              style={{\n                transform: spinnerTransform,\n                WebkitTransform: spinnerTransform,\n                opacity: watching || refreshing || canRefresh ? 1 : 0,\n              }}\n              on={refreshing}\n              progress={refreshing ? null : spinnerProgress}\n            />\n          </FixedLayout>\n\n          <div\n            vkuiClass=\"PullToRefresh__content\"\n            ref={this.contentRef}\n            style={{\n              transform: contentTransform,\n              WebkitTransform: contentTransform,\n            }}\n          >\n            {children}\n          </div>\n        </Touch>\n      </TouchRootContext.Provider>\n    );\n  }\n}\n\nexport default withContext(\n  withPlatform(withDOM<PullToRefreshProps>(PullToRefresh)),\n  ScrollContext, 'scroll');\n"],"file":"PullToRefresh.js"}