import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import { createScopedElement } from "../../lib/jsxRuntime";
import { getClassName } from "../../helpers/getClassName";
import { classNames } from "../../lib/classNames";
import { usePlatform } from "../../hooks/usePlatform";
import { hasReactNode, isPrimitiveReactNode } from "../../lib/utils";
import { Platform } from "../../lib/platform";
import Headline from "../Typography/Headline/Headline";
import Caption from "../Typography/Caption/Caption";
import Title from "../Typography/Title/Title";
import Text from "../Typography/Text/Text";
import Subhead from "../Typography/Subhead/Subhead";

var HeaderContent = function HeaderContent(_ref) {
  var platform = _ref.platform,
      mode = _ref.mode,
      restProps = _objectWithoutProperties(_ref, ["platform", "mode"]);

  if (platform === Platform.IOS) {
    switch (mode) {
      case 'primary':
      case 'tertiary':
        return createScopedElement(Title, _extends({
          weight: "semibold",
          level: "3"
        }, restProps));

      case 'secondary':
        return createScopedElement(Caption, _extends({
          level: "1",
          weight: "semibold",
          caps: true
        }, restProps));
    }
  }

  if (platform === Platform.VKCOM) {
    switch (mode) {
      case 'primary':
        return createScopedElement(Headline, _extends({
          weight: "regular"
        }, restProps));

      case 'secondary':
      case 'tertiary':
        return createScopedElement(Caption, _extends({
          level: "1",
          weight: "regular"
        }, restProps));
    }
  }

  switch (mode) {
    case 'primary':
    case 'tertiary':
      return createScopedElement(Headline, _extends({
        weight: "medium"
      }, restProps));

    case 'secondary':
      return createScopedElement(Caption, _extends({
        level: "1",
        weight: "medium",
        caps: true
      }, restProps));
  }
};

var HeaderAside = function HeaderAside(_ref2) {
  var platform = _ref2.platform,
      restProps = _objectWithoutProperties(_ref2, ["platform"]);

  return platform === Platform.VKCOM ? createScopedElement(Subhead, _extends({
    weight: "regular"
  }, restProps)) : createScopedElement(Text, _extends({
    weight: "regular"
  }, restProps));
};

var Header = function Header(_ref3) {
  var mode = _ref3.mode,
      children = _ref3.children,
      subtitle = _ref3.subtitle,
      indicator = _ref3.indicator,
      aside = _ref3.aside,
      getRootRef = _ref3.getRootRef,
      multiline = _ref3.multiline,
      restProps = _objectWithoutProperties(_ref3, ["mode", "children", "subtitle", "indicator", "aside", "getRootRef", "multiline"]);

  var platform = usePlatform();
  return createScopedElement("header", _extends({}, restProps, {
    ref: getRootRef,
    vkuiClass: classNames(getClassName('Header', platform), "Header--mode-".concat(mode), {
      'Header--pi': isPrimitiveReactNode(indicator)
    })
  }), createScopedElement("div", {
    vkuiClass: "Header__main"
  }, createScopedElement(HeaderContent, {
    vkuiClass: "Header__content",
    Component: "h3",
    mode: mode,
    platform: platform
  }, createScopedElement("span", {
    vkuiClass: classNames('Header__content-in', {
      'Header__content-in--multiline': multiline
    })
  }, children), hasReactNode(indicator) && createScopedElement(Caption, {
    vkuiClass: "Header__indicator",
    weight: "regular",
    level: "1"
  }, indicator)), hasReactNode(subtitle) && createScopedElement(Caption, {
    vkuiClass: "Header__subtitle",
    weight: "regular",
    level: "1"
  }, subtitle)), hasReactNode(aside) && createScopedElement(HeaderAside, {
    vkuiClass: "Header__aside",
    platform: platform
  }, aside));
};

Header.defaultProps = {
  mode: 'primary'
};
export default Header;
//# sourceMappingURL=Header.js.map