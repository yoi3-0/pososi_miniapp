import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import { createScopedElement } from "../../lib/jsxRuntime";
import { Icon16Done } from '@vkontakte/icons';
import { classNames } from "../../lib/classNames";
import { hasReactNode } from "../../lib/utils";
import Text from "../Typography/Text/Text";

var CustomSelectOption = function CustomSelectOption(_ref) {
  var _classNames;

  var children = _ref.children,
      hovered = _ref.hovered,
      selected = _ref.selected,
      before = _ref.before,
      after = _ref.after,
      option = _ref.option,
      restProps = _objectWithoutProperties(_ref, ["children", "hovered", "selected", "before", "after", "option"]);

  var title = typeof children === 'string' ? children : null;
  return createScopedElement(Text, _extends({}, restProps, {
    weight: "regular",
    role: "option",
    title: title,
    "aria-selected": selected,
    vkuiClass: classNames('CustomSelectOption', (_classNames = {}, _defineProperty(_classNames, 'CustomSelectOption--hover', hovered), _defineProperty(_classNames, 'CustomSelectOption--selected', !!selected), _classNames))
  }), hasReactNode(before) && createScopedElement("div", {
    vkuiClass: "CustomSelectOption__before"
  }, before), createScopedElement("div", {
    vkuiClass: "CustomSelectOption__label"
  }, children), hasReactNode(after) && createScopedElement("div", {
    vkuiClass: "CustomSelectOption__after"
  }, after), selected && createScopedElement("div", {
    vkuiClass: "CustomSelectOption__selectedIcon"
  }, createScopedElement(Icon16Done, {
    fill: "var(--accent)"
  })));
};

export default CustomSelectOption;
//# sourceMappingURL=CustomSelectOption.js.map