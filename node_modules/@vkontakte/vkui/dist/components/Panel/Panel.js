import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import { createScopedElement } from "../../lib/jsxRuntime";
import { useMemo } from 'react';
import { getClassName } from "../../helpers/getClassName";
import { classNames } from "../../lib/classNames";
import Touch from "../Touch/Touch";
import { TooltipContainer } from "../Tooltip/TooltipContainer";
import { withAdaptivity } from "../../hoc/withAdaptivity";
import { PanelContext } from "./PanelContext";
import { IOS } from "../../lib/platform";
import { usePlatform } from "../../hooks/usePlatform";
import { getNavId } from "../../lib/getNavId";
import { useExternRef } from "../../hooks/useExternRef";
import { warnOnce } from "../../lib/warnOnce";
var warn = warnOnce('Panel');

var PanelComponent = function PanelComponent(props) {
  var centered = props.centered,
      children = props.children,
      getRootRef = props.getRootRef,
      sizeX = props.sizeX,
      nav = props.nav,
      restProps = _objectWithoutProperties(props, ["centered", "children", "getRootRef", "sizeX", "nav"]);

  var platform = usePlatform();
  var containerRef = useExternRef(getRootRef);
  var navId = getNavId(props, warn);
  var childContext = useMemo(function () {
    return {
      panel: navId,
      getPanelNode: function getPanelNode() {
        return containerRef.current;
      }
    };
  }, [navId]);
  return createScopedElement(PanelContext.Provider, {
    value: childContext
  }, createScopedElement("div", _extends({}, restProps, {
    ref: containerRef,
    vkuiClass: classNames(getClassName('Panel', platform), "Panel--".concat(sizeX), _defineProperty({
      'Panel--centered': centered
    }, "Panel--sizeX-".concat(sizeX), true))
  }), createScopedElement(Touch, {
    Component: TooltipContainer,
    vkuiClass: "Panel__in"
  }, platform === IOS && createScopedElement("div", {
    vkuiClass: "Panel__fade"
  }), createScopedElement("div", {
    vkuiClass: "Panel__in-before"
  }), centered ? createScopedElement("div", {
    vkuiClass: "Panel__centered"
  }, children) : children, createScopedElement("div", {
    vkuiClass: "Panel__in-after"
  }))));
};

PanelComponent.displayName = 'Panel';
PanelComponent.defaultProps = {
  children: '',
  centered: false
};
export var Panel = withAdaptivity(PanelComponent, {
  sizeX: true
});
//# sourceMappingURL=Panel.js.map