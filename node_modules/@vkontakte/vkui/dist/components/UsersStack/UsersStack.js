import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import { createScopedElement } from "../../lib/jsxRuntime";
import React from 'react';
import { getClassName } from "../../helpers/getClassName";
import { classNames } from "../../lib/classNames";
import { createMasks } from "./masks";
import { useBrowserInfo } from "../../hooks/useBrowserInfo";
import { usePlatform } from "../../hooks/usePlatform";
import { System } from "../../lib/browser";
import { useIsomorphicLayoutEffect } from "../../lib/useIsomorphicLayoutEffect";
import Caption from "../Typography/Caption/Caption";

var UsersStack = function UsersStack(props) {
  var _useBrowserInfo = useBrowserInfo(),
      system = _useBrowserInfo.system,
      systemVersion = _useBrowserInfo.systemVersion;

  var platform = usePlatform();

  var photos = props.photos,
      visibleCount = props.visibleCount,
      size = props.size,
      layout = props.layout,
      children = props.children,
      restProps = _objectWithoutProperties(props, ["photos", "visibleCount", "size", "layout", "children"]);

  useIsomorphicLayoutEffect(function () {
    createMasks();
  }, []);
  var othersCount = Math.max(0, photos.length - visibleCount);
  var canShowOthers = othersCount > 0 && size === 'm';
  var photosShown = photos.slice(0, visibleCount);
  var canUseClipPath = true;

  if (system === System.IOS) {
    canUseClipPath = systemVersion && systemVersion.major >= 12;
  }

  return createScopedElement("div", _extends({}, restProps, {
    vkuiClass: classNames(getClassName('UsersStack', platform), "UsersStack--size-".concat(size), "UsersStack--l-".concat(layout), {
      'UsersStack--others': canShowOthers,
      'UsersStack--simple': !canUseClipPath
    })
  }), createScopedElement("div", {
    vkuiClass: "UsersStack__photos",
    role: "presentation"
  }, photosShown.map(function (photo, i) {
    return createScopedElement("div", {
      key: i,
      vkuiClass: "UsersStack__photo",
      style: {
        backgroundImage: "url(".concat(photo, ")")
      }
    });
  }), canShowOthers && createScopedElement(Caption, {
    weight: "medium",
    level: "1",
    vkuiClass: "UsersStack__photo UsersStack__photo--others",
    "aria-hidden": "true"
  }, createScopedElement("span", null, "+", othersCount))), children && createScopedElement(Caption, {
    weight: "regular",
    level: "1",
    vkuiClass: "UsersStack__text"
  }, children));
};

UsersStack.defaultProps = {
  photos: [],
  size: 's',
  visibleCount: 3,
  layout: 'horizontal'
};
export default /*#__PURE__*/React.memo(UsersStack);
//# sourceMappingURL=UsersStack.js.map