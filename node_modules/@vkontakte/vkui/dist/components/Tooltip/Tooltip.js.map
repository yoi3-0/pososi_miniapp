{"version":3,"sources":["../../../src/components/Tooltip/Tooltip.tsx"],"names":["React","Fragment","useState","isValidElement","forwardRef","cloneElement","useMemo","Children","ReactDOM","classNames","getClassName","Subhead","usePopper","tooltipContainerAttr","useExternRef","useDOM","warnOnce","hasReactNode","useGlobalEventListener","isDOMTypeElement","element","type","baseClassName","warn","IS_DEV","process","env","NODE_ENV","SimpleTooltip","ref","mode","header","text","arrowRef","style","attributes","container","arrow","mapAlignX","x","getPlacement","alignX","alignY","filter","p","join","Tooltip","children","isShown","offsetX","offsetY","onClose","cornerOffset","restProps","tooltipRef","setTooltipRef","tooltipArrowRef","setTooltipArrowRef","target","setTarget","multiChildren","count","primitiveChild","JSON","stringify","Boolean","tooltipContainer","closest","strategy","position","Error","placement","modifiers","name","options","offset","padding","styles","document","passive","childRef","props","getRootRef","patchedRef","child","createPortal","el","popper","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, ReactElement, ReactNode, isValidElement, FC, forwardRef, Ref, CSSProperties, HTMLAttributes, cloneElement, useMemo, Children } from 'react';\nimport ReactDOM from 'react-dom';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport { usePopper } from 'react-popper';\nimport { Placement } from '@popperjs/core';\nimport { tooltipContainerAttr } from './TooltipContainer';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useDOM } from '../../lib/dom';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { hasReactNode } from '../../lib/utils';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\n\ninterface SimpleTooltipProps extends Partial<TooltipProps> {\n  target?: HTMLDivElement;\n  arrowRef?: Ref<HTMLDivElement>;\n  style?: {\n    arrow: CSSProperties;\n    container: CSSProperties;\n  };\n  attributes?: {\n    arrow: HTMLAttributes<HTMLDivElement>;\n    container: HTMLAttributes<HTMLDivElement>;\n  };\n}\n\nconst isDOMTypeElement = (element: ReactElement): element is React.DOMElement<any, any> => {\n  return React.isValidElement(element) && typeof element.type === 'string';\n};\n\nconst baseClassName = getClassName('Tooltip');\nconst warn = warnOnce('Tooltip');\nconst IS_DEV = process.env.NODE_ENV === 'development';\n\nconst SimpleTooltip = forwardRef<HTMLDivElement, SimpleTooltipProps>(\n  function SimpleTooltip(\n    { mode = 'accent', header, text, arrowRef, style = {}, attributes },\n    ref,\n  ) {\n    return (\n      <div vkuiClass={\n        classNames(\n          baseClassName,\n          `Tooltip--${mode}`,\n        )}>\n        <div vkuiClass=\"Tooltip__container\" ref={ref} style={style.container} {...attributes.container}>\n          <div vkuiClass=\"Tooltip__corner\" style={style.arrow} {...attributes.arrow} ref={arrowRef} />\n          <div vkuiClass=\"Tooltip__content\">\n            {header && <Subhead weight=\"semibold\" vkuiClass=\"Tooltip__title\">{header}</Subhead>}\n            {text && <Subhead weight=\"regular\" vkuiClass=\"Tooltip__text\">{text}</Subhead>}\n          </div>\n        </div>\n      </div>\n    );\n  });\n\nexport interface TooltipProps {\n  /**\n   * **Важно**: если в `children` передан React-компонент, то необходимо убедиться в том, что он поддерживает\n   * свойство `getRootRef`, которое должно возвращаться ссылку на корневой DOM-элемент компонента,\n   * иначе тултип показан не будет. Если передан React-element, то такой проблемы нет.\n   */\n  children: ReactElement;\n  mode?: 'accent' | 'light';\n  /**\n   * Если передан `false`, то рисуется просто `children`.\n   */\n  isShown?: boolean;\n  /**\n   * Текст тултипа.\n   */\n  text?: ReactNode;\n  /**\n   * Заголовок тултипа.\n   */\n  header?: ReactNode;\n  /**\n   * Положение по горизонтали (прижатие к левому или правому краю `children`).\n   * Если не задано, позиция по горизонтали определятся автоматически\n   */\n  alignX?: 'center' | 'left' | 'right';\n  /**\n   * Положение по вертикали (расположение над или под `children`).\n   * Если не задано, позиция по вертикали определятся автоматически\n   */\n  alignY?: 'top' | 'bottom';\n  /**\n   * Сдвиг по горизонтали (относительно портала, в котором рисуется тултип).\n   */\n  offsetX?: number;\n  /**\n   * Сдвиг по вертикали (относительно портала, в котором рисуется тултип).\n   */\n  offsetY?: number;\n  /**\n   * Сдвиг треугольника (относительно ширины тултипа).\n   */\n  cornerOffset?: number;\n  /**\n   * Callback, который вызывается при клике по любому месту в пределах экрана.\n   */\n  onClose?: () => void;\n}\n\nfunction mapAlignX(x: TooltipProps['alignX']) {\n  switch (x) {\n    case 'left': return 'start';\n    case 'right': return 'end';\n    default: return '';\n  }\n};\nfunction getPlacement(alignX: TooltipProps['alignX'], alignY: TooltipProps['alignY']): Placement {\n  return [alignY || 'bottom', mapAlignX(alignX || 'left')].filter((p) => !!p).join('-') as Placement;\n}\n\nconst Tooltip: FC<TooltipProps> = ({\n  children, isShown, offsetX = 0, offsetY = 15,\n  alignX, alignY, onClose, cornerOffset,\n  ...restProps\n}) => {\n  const [tooltipRef, setTooltipRef] = useState<HTMLElement>();\n  const [tooltipArrowRef, setTooltipArrowRef] = useState<HTMLElement>();\n  const [target, setTarget] = useState<HTMLElement>();\n\n  if (IS_DEV) {\n    const multiChildren = Children.count(children) > 1;\n    // Empty children is a noop\n    const primitiveChild = hasReactNode(children) && typeof children !== 'object';\n    (multiChildren || primitiveChild) && warn([\n      'children must be a single React element, got',\n      multiChildren && 'multiple',\n      primitiveChild && JSON.stringify(children),\n    ].filter(Boolean).join(' '));\n  }\n\n  /* eslint-disable no-restricted-properties */\n  /* eslint-disable @typescript-eslint/no-unnecessary-type-assertion*/\n  const tooltipContainer = useMemo(() => target?.closest(`[${tooltipContainerAttr}]`) as HTMLDivElement, [target]);\n  const strategy = useMemo(() => target?.style.position === 'fixed' ? 'fixed' : 'absolute', [target]);\n  /* eslint-enable @typescript-eslint/no-unnecessary-type-assertion*/\n  /* eslint-enable no-restricted-properties */\n\n  if (IS_DEV && target && !tooltipContainer) {\n    throw new Error('Use TooltipContainer for Tooltip outside Panel (see docs)');\n  }\n\n  const placement = getPlacement(alignX, alignY);\n  const { styles, attributes } = usePopper(target, tooltipRef, {\n    strategy,\n    placement,\n    modifiers: [\n      {\n        name: 'offset', options: {\n          offset: [\n            offsetX,\n            offsetY,\n          ],\n        },\n      },\n      {\n        name: 'arrow', options: {\n          element: tooltipArrowRef,\n          padding: 14,\n        },\n      },\n      {\n        name: 'preventOverflow',\n      },\n      {\n        name: 'flip',\n      },\n    ],\n  });\n\n  const { document } = useDOM();\n  useGlobalEventListener(document, 'click', isShown && onClose, { passive: true });\n  // NOTE: setting isShown to true used to trigger usePopper().forceUpdate()\n\n  const childRef = isValidElement(children) &&\n    (isDOMTypeElement(children) ? children.ref : children.props.getRootRef);\n  const patchedRef = useExternRef(setTarget, childRef);\n  const child = isValidElement(children) ? cloneElement(children, {\n    [isDOMTypeElement(children) ? 'ref' : 'getRootRef']: patchedRef,\n  }) : children;\n\n  if (!alignX || !alignY) {\n    cornerOffset = 0;\n  }\n\n  return (\n    <Fragment>\n      {child}\n      {isShown && target != null && ReactDOM.createPortal(\n        <SimpleTooltip\n          {...restProps}\n          ref={(el) => setTooltipRef(el)}\n          arrowRef={(el) => setTooltipArrowRef(el)}\n          style={{ arrow: styles.arrow, container: styles.popper }}\n          attributes={{ arrow: attributes.arrow, container: attributes.popper }}\n        />,\n        tooltipContainer,\n      )}\n    </Fragment>\n  );\n};\n\nTooltip.defaultProps = {\n  offsetX: 0,\n  offsetY: 15,\n  cornerOffset: 0,\n  isShown: true,\n  mode: 'accent',\n};\nexport default Tooltip;\n"],"file":"Tooltip.js"}