{"version":3,"sources":["../../../src/components/HorizontalScroll/HorizontalScroll.tsx"],"names":["useRef","useEffect","useState","useCallback","usePlatform","getClassName","withAdaptivity","HorizontalScrollArrow","easeInOutSine","useEventListener","useExternRef","now","performance","Date","SCROLL_ONE_FRAME_TIME","doScroll","scrollElement","getScrollPosition","animationQueue","onScrollToRightBorder","onScrollEnd","onScrollStart","initialScrollWidth","scrollAnimationDuration","maxLeft","offsetWidth","startLeft","scrollLeft","endLeft","startTime","scroll","time","elapsed","Math","min","value","currentLeft","ceil","max","requestAnimationFrame","shift","length","HorizontalScroll","props","children","getScrollToLeft","getScrollToRight","showArrows","hasMouse","getRef","restProps","canScrollLeft","setCanScrollLeft","canScrollRight","setCanScrollRight","isCustomScrollingRef","scrollerRef","platform","scrollTo","current","push","firstElementChild","scrollWidth","onscroll","scrollEvent","add","defaultProps"],"mappings":"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","sourcesContent":["import { HTMLAttributes, useRef, useEffect, useState, useCallback, FC } from 'react';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getClassName } from '../../helpers/getClassName';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport HorizontalScrollArrow from './HorizontalScrollArrow';\nimport { easeInOutSine } from '../../lib/fx';\nimport { useEventListener } from '../../hooks/useEventListener';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { HasRef } from '../../types';\n\ninterface ScrollContext {\n  scrollElement: HTMLElement | null;\n  scrollAnimationDuration: number;\n  animationQueue: VoidFunction[];\n  getScrollPosition: (currentPosition: number) => number;\n  onScrollToRightBorder: VoidFunction;\n  onScrollEnd: VoidFunction;\n  onScrollStart: VoidFunction;\n  /**\n   * Начальная ширина прокрутки.\n   * В некоторых случаях может отличаться от текущей ширины прокрутки из-за transforms: translate\n   */\n  initialScrollWidth: number;\n}\n\nexport interface HorizontalScrollProps extends\n  HTMLAttributes<HTMLDivElement>,\n  AdaptivityProps,\n  HasRef<HTMLDivElement> {\n  /**\n   * Функция для расчета величины прокрутки при клике на левую стрелку.\n   */\n  getScrollToLeft?: (currentPosition: number) => number;\n  /**\n   * Функция для расчета величины прокрутки при клике на правую стрелку.\n   */\n  getScrollToRight?: (currentPosition: number) => number;\n  showArrows?: boolean;\n  scrollAnimationDuration?: number;\n}\n\n/**\n * timing method\n */\nfunction now() {\n  return performance && performance.now ? performance.now() : Date.now();\n}\n\n/**\n * Код анимации скрола, на основе полифила: https://github.com/iamdustan/smoothscroll\n * Константа взята из полифила (468), на дизайн-ревью уточнили до 250\n * @var {number} SCROLL_ONE_FRAME_TIME время анимации скролла\n */\nconst SCROLL_ONE_FRAME_TIME = 250;\n\nfunction doScroll({\n  scrollElement,\n  getScrollPosition,\n  animationQueue,\n  onScrollToRightBorder,\n  onScrollEnd,\n  onScrollStart,\n  initialScrollWidth,\n  scrollAnimationDuration = SCROLL_ONE_FRAME_TIME,\n}: ScrollContext) {\n  if (!scrollElement || !getScrollPosition) {\n    return;\n  }\n\n  /**\n   * максимальное значение сдвига влево\n   */\n  const maxLeft = initialScrollWidth - scrollElement.offsetWidth;\n\n  let startLeft = scrollElement.scrollLeft;\n  let endLeft = getScrollPosition(startLeft);\n\n  onScrollStart();\n\n  if (endLeft >= maxLeft) {\n    onScrollToRightBorder();\n    endLeft = maxLeft;\n  }\n\n  const startTime = now();\n\n  (function scroll() {\n    if (!scrollElement) {\n      onScrollEnd();\n      return;\n    }\n\n    const time = now();\n    const elapsed = Math.min((time - startTime) / scrollAnimationDuration, 1);\n\n    const value = easeInOutSine(elapsed);\n\n    const currentLeft = startLeft + (endLeft - startLeft) * value;\n    scrollElement.scrollLeft = Math.ceil(currentLeft);\n\n    if (scrollElement.scrollLeft !== Math.max(0, endLeft)) {\n      requestAnimationFrame(scroll);\n      return;\n    }\n\n    onScrollEnd();\n    animationQueue.shift();\n    if (animationQueue.length > 0) {\n      animationQueue[0]();\n    }\n  })();\n}\n\nconst HorizontalScroll: FC<HorizontalScrollProps> = (props: HorizontalScrollProps) => {\n  const {\n    children,\n    getScrollToLeft,\n    getScrollToRight,\n    showArrows,\n    scrollAnimationDuration,\n    hasMouse,\n    getRef,\n    ...restProps\n  } = props;\n\n  const [canScrollLeft, setCanScrollLeft] = useState(false);\n  const [canScrollRight, setCanScrollRight] = useState(false);\n\n  const isCustomScrollingRef = useRef(false);\n\n  const scrollerRef = useExternRef(getRef);\n\n  const animationQueue = useRef<VoidFunction[]>([]);\n\n  const platform = usePlatform();\n\n  function scrollTo(getScrollPosition: (offset: number) => number) {\n    const scrollElement = scrollerRef.current;\n\n    animationQueue.current.push(() => doScroll({\n      scrollElement,\n      getScrollPosition,\n      animationQueue: animationQueue.current,\n      onScrollToRightBorder: () => setCanScrollRight(false),\n      onScrollEnd: () => isCustomScrollingRef.current = false,\n      onScrollStart: () => isCustomScrollingRef.current = true,\n      initialScrollWidth: scrollElement?.firstElementChild?.scrollWidth || 0,\n      scrollAnimationDuration,\n    }));\n    if (animationQueue.current.length === 1) {\n      animationQueue.current[0]();\n    }\n  }\n\n  const onscroll = useCallback(() => {\n    if (showArrows && hasMouse && scrollerRef.current && !isCustomScrollingRef.current) {\n      const scrollElement = scrollerRef.current;\n\n      setCanScrollLeft(scrollElement.scrollLeft > 0);\n      setCanScrollRight(scrollElement.scrollLeft + scrollElement.offsetWidth < scrollElement.scrollWidth);\n    }\n  }, [hasMouse]);\n\n  const scrollEvent = useEventListener('scroll', onscroll);\n  useEffect(() => scrollEvent.add(scrollerRef.current), []);\n  useEffect(onscroll, [scrollerRef, children]);\n\n  return (\n    <div {...restProps} vkuiClass={getClassName('HorizontalScroll', platform)}>\n      {showArrows && hasMouse && canScrollLeft &&\n      <HorizontalScrollArrow\n        direction=\"left\"\n        onClick={() => scrollTo(getScrollToLeft)}\n      />\n      }\n      {showArrows && hasMouse && canScrollRight &&\n      <HorizontalScrollArrow\n        direction=\"right\"\n        onClick={() => scrollTo(getScrollToRight)}\n      />\n      }\n      <div vkuiClass=\"HorizontalScroll__in\" ref={scrollerRef}>\n        <div vkuiClass=\"HorizontalScroll__in-wrapper\">\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHorizontalScroll.defaultProps = {\n  showArrows: true,\n};\n\nexport default withAdaptivity(HorizontalScroll, {\n  hasMouse: true,\n});\n"],"file":"HorizontalScroll.js"}