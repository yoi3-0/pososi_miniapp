{"version":3,"sources":["../../../src/components/PopoutWrapper/PopoutWrapper.tsx"],"names":["React","Component","getClassName","classNames","ANDROID","VKCOM","animationEvent","withPlatform","canUseDOM","withDOM","PopoutWrapper","props","e","animationName","setState","opened","preventDefault","state","hasMask","elRef","createRef","window","addEventListener","preventTouch","passive","waitAnimationFinish","current","onFadeInEnd","removeEventListener","clearTimeout","animationFinishTimeout","elem","eventHandler","supported","name","setTimeout","platform","alignY","alignX","closing","children","fixed","onClick","document","restProps","baseClassNames"],"mappings":"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","sourcesContent":["import React, { Component, HTMLAttributes, MouseEvent } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { ANDROID, VKCOM } from '../../lib/platform';\nimport { animationEvent } from '../../lib/supportEvents';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { HasPlatform } from '../../types';\nimport { canUseDOM, withDOM, DOMProps } from '../../lib/dom';\n\nexport interface PopoutWrapperProps extends HTMLAttributes<HTMLDivElement>, HasPlatform {\n  hasMask?: boolean;\n  fixed?: boolean;\n  alignY?: 'top' | 'center' | 'bottom';\n  alignX?: 'left' | 'center' | 'right';\n  closing?: boolean;\n}\n\nexport interface PopoutWrapperState {\n  opened: boolean;\n}\n\nexport type WindowTouchListener = (e: Event) => void;\n\nexport type AnimationEndCallback = (e?: AnimationEvent) => void;\n\nexport type ClickHandler = (e: MouseEvent<HTMLDivElement>) => void;\n\nclass PopoutWrapper extends Component<PopoutWrapperProps & DOMProps, PopoutWrapperState> {\n  constructor(props: PopoutWrapperProps) {\n    super(props);\n    this.state = {\n      opened: !props.hasMask,\n    };\n    this.elRef = React.createRef();\n  }\n\n  static defaultProps: PopoutWrapperProps = {\n    hasMask: true,\n    fixed: true,\n    alignY: 'center',\n    alignX: 'center',\n    closing: false,\n  };\n\n  elRef: React.RefObject<HTMLDivElement>;\n\n  private animationFinishTimeout: ReturnType<typeof setTimeout>;\n\n  componentDidMount() {\n    if (canUseDOM) {\n      this.props.window.addEventListener('touchmove', this.preventTouch, { passive: false });\n      this.waitAnimationFinish(this.elRef.current, this.onFadeInEnd);\n    }\n  }\n\n  componentWillUnmount() {\n    // Здесь нужен последний аргумент с такими же параметрами, потому что\n    // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n    // https://github.com/VKCOM/VKUI/issues/444\n    if (canUseDOM) {\n      // @ts-ignore (В интерфейсе EventListenerOptions нет поля passive)\n      this.props.window.removeEventListener('touchmove', this.preventTouch, { passive: false });\n      clearTimeout(this.animationFinishTimeout);\n    }\n  }\n\n  waitAnimationFinish(elem: HTMLDivElement, eventHandler: AnimationEndCallback) {\n    if (animationEvent.supported) {\n      elem.removeEventListener(animationEvent.name, eventHandler);\n      elem.addEventListener(animationEvent.name, eventHandler);\n    } else {\n      clearTimeout(this.animationFinishTimeout);\n      this.animationFinishTimeout = setTimeout(eventHandler, this.props.platform === ANDROID || this.props.platform === VKCOM ? 200 : 300);\n    }\n  }\n\n  onFadeInEnd: AnimationEndCallback = (e: AnimationEvent) => {\n    if (!e || e.animationName === 'vkui-animation-full-fade-in') {\n      this.setState({ opened: true });\n    }\n  };\n\n  preventTouch: WindowTouchListener = (e: Event) => e.preventDefault();\n\n  render() {\n    const { alignY, alignX, closing, children, hasMask, fixed, platform, onClick, window, document, ...restProps } = this.props;\n    const baseClassNames = getClassName('PopoutWrapper', platform);\n\n    return (\n      <div\n        {...restProps}\n        vkuiClass={classNames(baseClassNames, `PopoutWrapper--v-${alignY}`, `PopoutWrapper--h-${alignX}`, {\n          'PopoutWrapper--closing': closing,\n          'PopoutWrapper--opened': this.state.opened,\n          'PopoutWrapper--fixed': fixed,\n          'PopoutWrapper--masked': hasMask,\n        })}\n        ref={this.elRef}\n      >\n        <div vkuiClass=\"PopoutWrapper__container\">\n          <div\n            vkuiClass=\"PopoutWrapper__overlay\"\n            onClick={onClick} />\n          <div vkuiClass=\"PopoutWrapper__content\">\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withPlatform(withDOM<PopoutWrapperProps>(PopoutWrapper));\n"],"file":"PopoutWrapper.js"}