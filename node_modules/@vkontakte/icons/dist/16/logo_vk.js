"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _browserSymbol = _interopRequireDefault(require("svg-baker-runtime/browser-symbol"));

var _es6ObjectAssign = require("es6-object-assign");

var _sprite = require("../sprite");

var _SvgIcon = require("../SvgIcon");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @ts-ignore
// @ts-ignore
var viewBox = '0 0 16 16';
var id = 'logo_vk_16';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="logo_vk_16"><path clip-rule="evenodd" d="M14 6.16C14 2.8 13.2 2 9.84 2H6.16C2.8 2 2 2.8 2 6.16v3.68C2 13.2 2.8 14 6.16 14h3.68C13.2 14 14 13.2 14 9.84zm-8.979-.468h-.875c-.25 0-.3.118-.3.248 0 .232.297 1.381 1.381 2.901.723 1.039 1.742 1.601 2.67 1.601.555 0 .624-.125.624-.34v-.785c0-.25.053-.3.229-.3.13 0 .352.065.871.566.177.176.31.324.418.444.255.284.373.415.607.415h.875c.25 0 .375-.125.303-.371-.079-.246-.362-.603-.738-1.026-.103-.122-.233-.249-.348-.361a2.677 2.677 0 01-.254-.27c-.13-.166-.093-.24 0-.388l.015-.023c.132-.187 1.058-1.516 1.162-1.989.055-.185 0-.322-.265-.322h-.875a.378.378 0 00-.38.248s-.445 1.084-1.076 1.789c-.204.204-.296.269-.408.269-.055 0-.136-.065-.136-.25V6.013c0-.223-.064-.322-.25-.322H6.896c-.139 0-.222.104-.222.201 0 .081.045.138.104.21.095.118.223.276.243.643v1.289c0 .282-.05.334-.162.334-.297 0-1.018-1.09-1.446-2.337-.084-.242-.168-.34-.392-.34z" fill="currentColor" fill-rule="evenodd" /></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    (0, _sprite.addSpriteSymbol)(new _browserSymbol.default({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon16LogoVk = function Icon16LogoVk(props) {
  (0, _sprite.useIsomorphicLayoutEffect)(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/_react.default.createElement(_SvgIcon.SvgIcon, (0, _es6ObjectAssign.assign)({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 16,
    height: !isNaN(props.height) ? +props.height : 16
  }));
};

Icon16LogoVk.mountIcon = mountIcon;
var _default = Icon16LogoVk;
exports.default = _default;
//# sourceMappingURL=logo_vk.js.map