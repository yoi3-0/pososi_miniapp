import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 16 16';
var id = 'cancel_circle_outline_16';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="cancel_circle_outline_16"><path clip-rule="evenodd" d="M8 13.5a5.5 5.5 0 100-11 5.5 5.5 0 000 11zM8 15A7 7 0 108 1a7 7 0 000 14zM5.702 5.702a.75.75 0 011.06 0L8 6.939l1.237-1.237a.75.75 0 011.061 1.06L9.061 8l1.237 1.237a.75.75 0 11-1.06 1.061L8 9.061l-1.237 1.237a.75.75 0 11-1.061-1.06L6.939 8 5.702 6.763a.75.75 0 010-1.061z" fill="currentColor" fill-rule="evenodd" /></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon16CancelCircleOutline = function Icon16CancelCircleOutline(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 16,
    height: !isNaN(props.height) ? +props.height : 16
  }));
};

Icon16CancelCircleOutline.mountIcon = mountIcon;
export default Icon16CancelCircleOutline;
//# sourceMappingURL=cancel_circle_outline.js.map