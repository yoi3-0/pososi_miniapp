import React from 'react'; // @ts-ignore

import BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore

import { assign } from 'es6-object-assign';
import { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';
import { SvgIcon } from '../SvgIcon';
var viewBox = '0 0 16 16';
var id = 'help_outline_16';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" id="help_outline_16"><path fill-rule="evenodd" clip-rule="evenodd" d="M2.5 8a5.5 5.5 0 1011 0 5.5 5.5 0 00-11 0zM8 1a7 7 0 100 14A7 7 0 008 1z" fill="currentColor" /><path fill-rule="evenodd" clip-rule="evenodd" d="M8 5.15a.85.85 0 00-.823.637.75.75 0 01-1.453-.374A2.35 2.35 0 0110.35 6c0 1.036-.566 1.578-.963 1.948-.39.363-.586.55-.645.958a.75.75 0 01-1.484-.212c.134-.942.685-1.453 1.05-1.79l.055-.052c.353-.33.487-.488.487-.852A.85.85 0 008 5.15z" fill="currentColor" /><path d="M8.75 11.15a.75.75 0 11-1.5 0 .75.75 0 011.5 0z" fill="currentColor" /></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    addSpriteSymbol(new BrowserSymbol({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon16HelpOutline = function Icon16HelpOutline(props) {
  useIsomorphicLayoutEffect(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 16,
    height: !isNaN(props.height) ? +props.height : 16
  }));
};

Icon16HelpOutline.mountIcon = mountIcon;
export default Icon16HelpOutline;
//# sourceMappingURL=help_outline.js.map