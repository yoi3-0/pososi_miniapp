"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _browserSymbol = _interopRequireDefault(require("svg-baker-runtime/browser-symbol"));

var _es6ObjectAssign = require("es6-object-assign");

var _sprite = require("../sprite");

var _SvgIcon = require("../SvgIcon");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @ts-ignore
// @ts-ignore
var viewBox = '0 0 32 32';
var id = 'logo_vk_color_32';
var content = '<symbol fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" id="logo_vk_color_32"><path d="M19.987 3C27.267 3 29 4.733 29 12.013v7.974C29 27.267 27.267 29 19.987 29h-7.974C4.733 29 3 27.267 3 19.987v-7.974C3 4.733 4.733 3 12.013 3z" fill="#2787f5" /><path d="M7.65 11h1.896c.484 0 .667.212.848.737.927 2.701 2.49 5.061 3.134 5.061.24 0 .351-.11.351-.723v-2.791c-.07-1.286-.753-1.391-.753-1.848 0-.212.181-.436.482-.436h2.98c.401 0 .541.215.541.697v3.756c0 .401.175.542.295.542.241 0 .442-.14.884-.582 1.366-1.527 2.33-3.877 2.33-3.877.12-.281.342-.536.824-.536h1.896c.574 0 .694.295.574.697-.224 1.026-2.232 3.904-2.517 4.31l-.034.048c-.201.322-.281.482 0 .844.2.281.864.843 1.305 1.366.815.916 1.428 1.689 1.6 2.221.156.535-.115.806-.657.806h-1.896c-.723 0-.935-.577-2.22-1.862-1.125-1.085-1.607-1.226-1.888-1.226-.382 0-.496.108-.496.65v1.7c0 .467-.149.738-1.354.738-2.009 0-4.216-1.22-5.782-3.47C7.643 14.53 7 12.039 7 11.537c0-.281.108-.536.65-.536z" fill="#fff" /></symbol>';
var isMounted = false;

function mountIcon() {
  if (!isMounted) {
    (0, _sprite.addSpriteSymbol)(new _browserSymbol.default({
      id: id,
      viewBox: viewBox,
      content: content
    }));
    isMounted = true;
  }
}

var Icon32LogoVkColor = function Icon32LogoVkColor(props) {
  (0, _sprite.useIsomorphicLayoutEffect)(function () {
    mountIcon();
  }, []);
  return /*#__PURE__*/_react.default.createElement(_SvgIcon.SvgIcon, (0, _es6ObjectAssign.assign)({}, props, {
    viewBox: viewBox,
    id: id,
    width: !isNaN(props.width) ? +props.width : 32,
    height: !isNaN(props.height) ? +props.height : 32
  }));
};

Icon32LogoVkColor.mountIcon = mountIcon;
var _default = Icon32LogoVkColor;
exports.default = _default;
//# sourceMappingURL=logo_vk_color.js.map