{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { useRef } from 'react';\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport HorizontalScroll from \"../HorizontalScroll/HorizontalScroll\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { useDOM } from \"../../lib/dom\";\n\nvar CardScroll = function CardScroll(_ref) {\n  var children = _ref.children,\n      size = _ref.size,\n      sizeX = _ref.sizeX,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"size\", \"sizeX\"]);\n\n  var platform = usePlatform();\n  var refContainer = useRef(null);\n  var gapRef = useRef(null);\n\n  var _useDOM = useDOM(),\n      window = _useDOM.window;\n\n  function getScrollToLeft(offset) {\n    var containerWidth = refContainer.current.offsetWidth;\n    var slideIndex = Array.from(refContainer.current.children).findIndex(function (el) {\n      return el.offsetLeft + el.offsetWidth + parseInt(window.getComputedStyle(el).marginRight) - offset >= 0;\n    });\n\n    if (slideIndex === -1) {\n      return offset;\n    }\n\n    if (slideIndex === 0) {\n      return 0;\n    }\n\n    var slide = refContainer.current.children[slideIndex];\n    var scrollTo = slide.offsetLeft - (containerWidth - slide.offsetWidth) + gapRef.current.offsetWidth;\n\n    if (scrollTo <= 2 * gapRef.current.offsetWidth) {\n      return 0;\n    }\n\n    return scrollTo;\n  }\n\n  function getScrollToRight(offset) {\n    var containerWidth = refContainer.current.offsetWidth;\n    var slide = Array.from(refContainer.current.children).find(function (el) {\n      return el.offsetLeft + el.offsetWidth - offset > containerWidth;\n    });\n\n    if (!slide) {\n      return offset;\n    }\n\n    return slide.offsetLeft - gapRef.current.offsetWidth;\n  }\n\n  return createScopedElement(\"div\", _extends({}, restProps, {\n    vkuiClass: classNames(getClassName('CardScroll', platform), \"CardScroll--\".concat(size), \"CardScroll--sizeX-\".concat(sizeX))\n  }), createScopedElement(HorizontalScroll, {\n    getScrollToLeft: getScrollToLeft,\n    getScrollToRight: getScrollToRight,\n    showArrows: true\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"CardScroll__in\",\n    ref: refContainer\n  }, createScopedElement(\"span\", {\n    vkuiClass: \"CardScroll__gap\",\n    ref: gapRef\n  }), children, createScopedElement(\"span\", {\n    vkuiClass: \"CardScroll__gap\"\n  }))));\n};\n\nCardScroll.defaultProps = {\n  size: 's'\n};\nexport default withAdaptivity(CardScroll, {\n  sizeX: true\n});","map":{"version":3,"sources":["../../../src/components/CardScroll/CardScroll.tsx"],"names":["CardScroll","children","size","sizeX","restProps","platform","usePlatform","refContainer","useRef","gapRef","window","useDOM","containerWidth","slideIndex","el","parseInt","slide","scrollTo","classNames","getClassName","withAdaptivity"],"mappings":"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","sourcesContent":["import { HTMLAttributes, useRef, FC } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport HorizontalScroll from '../HorizontalScroll/HorizontalScroll';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport { useDOM } from '../../lib/dom';\n\nexport interface CardScrollProps extends HTMLAttributes<HTMLDivElement>, AdaptivityProps {\n  size?: 's' | 'm' | 'l';\n}\n\nconst CardScroll: FC<CardScrollProps> = ({ children, size, sizeX, ...restProps }: CardScrollProps) => {\n  const platform = usePlatform();\n\n  const refContainer = useRef<HTMLDivElement>(null);\n  const gapRef = useRef<HTMLDivElement>(null);\n\n  const { window } = useDOM();\n\n  function getScrollToLeft(offset: number): number {\n    const containerWidth = refContainer.current.offsetWidth;\n    const slideIndex = Array\n      .from(refContainer.current.children)\n      .findIndex((el: HTMLElement) => el.offsetLeft + el.offsetWidth + parseInt(window.getComputedStyle(el).marginRight) - offset >= 0);\n\n    if (slideIndex === -1) {\n      return offset;\n    }\n\n    if (slideIndex === 0) {\n      return 0;\n    }\n\n    const slide = refContainer.current.children[slideIndex] as HTMLElement;\n\n    const scrollTo = slide.offsetLeft - (containerWidth - slide.offsetWidth) + gapRef.current.offsetWidth;\n\n    if (scrollTo <= 2 * gapRef.current.offsetWidth) {\n      return 0;\n    }\n\n    return scrollTo;\n  }\n\n  function getScrollToRight(offset: number): number {\n    const containerWidth = refContainer.current.offsetWidth;\n    const slide = Array.from(refContainer.current.children).find((el: HTMLElement) => el.offsetLeft + el.offsetWidth - offset > containerWidth) as HTMLElement;\n\n    if (!slide) {\n      return offset;\n    }\n\n    return slide.offsetLeft - gapRef.current.offsetWidth;\n  }\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName('CardScroll', platform),\n        `CardScroll--${size}`,\n        `CardScroll--sizeX-${sizeX}`,\n      )}\n    >\n      <HorizontalScroll getScrollToLeft={getScrollToLeft} getScrollToRight={getScrollToRight} showArrows={true}>\n        <div vkuiClass=\"CardScroll__in\" ref={refContainer}>\n          <span vkuiClass=\"CardScroll__gap\" ref={gapRef} />\n          {children}\n          <span vkuiClass=\"CardScroll__gap\" />\n        </div>\n      </HorizontalScroll>\n    </div>\n  );\n};\n\nCardScroll.defaultProps = {\n  size: 's',\n};\n\nexport default withAdaptivity(CardScroll, { sizeX: true });\n"]},"metadata":{},"sourceType":"module"}