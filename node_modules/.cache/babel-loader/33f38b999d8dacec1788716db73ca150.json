{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport React, { createRef } from 'react';\nimport SelectMimicry from \"../SelectMimicry/SelectMimicry\";\nimport { debounce, setRef } from \"../../lib/utils\";\nimport { classNames } from \"../../lib/classNames\";\nimport CustomScrollView from \"../CustomScrollView/CustomScrollView\";\nimport { SizeType, withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport CustomSelectOption from \"../CustomSelectOption/CustomSelectOption\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport Input from \"../Input/Input\";\nimport { Icon20Dropdown, Icon24Dropdown } from '@vkontakte/icons';\nimport Caption from \"../Typography/Caption/Caption\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nvar warn = warnOnce('CustomSelect');\n\nvar CustomSelect = /*#__PURE__*/function (_React$Component) {\n  _inherits(CustomSelect, _React$Component);\n\n  var _super = _createSuper(CustomSelect);\n\n  function CustomSelect(props) {\n    var _this;\n\n    _classCallCheck(this, CustomSelect);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"keyboardInput\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"isControlledOutside\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"selectEl\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"scrollBoxRef\", /*#__PURE__*/createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"resetKeyboardInput\", function () {\n      _this.keyboardInput = '';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getSelectedItem\", function () {\n      var _this$state = _this.state,\n          selectedOptionIndex = _this$state.selectedOptionIndex,\n          options = _this$state.options;\n\n      if (!options.length) {\n        return null;\n      }\n\n      return options[selectedOptionIndex];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"open\", function () {\n      _this.setState(function (_ref) {\n        var selectedOptionIndex = _ref.selectedOptionIndex;\n        return {\n          opened: true,\n          focusedOptionIndex: selectedOptionIndex\n        };\n      }, function () {\n        var selectedOptionIndex = _this.state.selectedOptionIndex;\n\n        if (_this.isValidIndex(selectedOptionIndex)) {\n          _this.scrollToElement(selectedOptionIndex, true);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"close\", function () {\n      _this.resetKeyboardInput();\n\n      _this.setState(function () {\n        return {\n          inputValue: '',\n          opened: false,\n          focusedOptionIndex: -1,\n          options: _this.props.options\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectFocused\", function () {\n      var focusedOptionIndex = _this.state.focusedOptionIndex;\n\n      _this.select(focusedOptionIndex);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"select\", function (index) {\n      if (!_this.isValidIndex(index)) {\n        return;\n      }\n\n      var item = _this.state.options[index];\n\n      _this.setState({\n        nativeSelectValue: item.value\n      }, function () {\n        var event = new Event('change', {\n          bubbles: true\n        });\n\n        _this.selectEl.dispatchEvent(event);\n      });\n\n      _this.close();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function () {\n      _this.state.opened ? _this.close() : _this.open();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFocus\", function () {\n      var event = new Event('focus');\n\n      _this.selectEl.dispatchEvent(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onBlur\", function () {\n      _this.resetKeyboardInput();\n\n      _this.setState(function () {\n        return {\n          opened: false,\n          options: _this.props.options\n        };\n      });\n\n      var event = new Event('blur');\n\n      _this.selectEl.dispatchEvent(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focusOptionByIndex\", function (index) {\n      var focusedOptionIndex = _this.state.focusedOptionIndex;\n      var oldIndex = focusedOptionIndex;\n\n      if (index < 0) {\n        index = _this.state.options.length - 1;\n      } else if (index >= _this.state.options.length) {\n        index = 0;\n      }\n\n      if (index === oldIndex) {\n        return;\n      }\n\n      _this.scrollToElement(index);\n\n      _this.setState(function () {\n        return {\n          focusedOptionIndex: index\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focusOption\", function (type) {\n      var focusedOptionIndex = _this.state.focusedOptionIndex;\n      var index = focusedOptionIndex;\n\n      if (type === 'next') {\n        index = focusedOptionIndex + 1;\n      } else if (type === 'prev') {\n        index = focusedOptionIndex - 1;\n      }\n\n      _this.focusOptionByIndex(index);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOptionHover\", function (e) {\n      _this.setState({\n        focusedOptionIndex: Array.prototype.indexOf.call(e.currentTarget.parentNode.children, e.currentTarget)\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOptionDown\", function (e) {\n      e.preventDefault();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resetFocusedOption\", function () {\n      _this.setState(function () {\n        return {\n          focusedOptionIndex: -1\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyboardInput\", function (key) {\n      var fullInput = _this.keyboardInput + key;\n\n      var optionIndex = _this.state.options.findIndex(function (option) {\n        return option.label.toLowerCase().includes(fullInput);\n      });\n\n      if (optionIndex > -1) {\n        _this.focusOptionByIndex(optionIndex);\n      }\n\n      _this.keyboardInput = fullInput;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLabelClick\", function (e) {\n      var _this$scrollBoxRef$cu;\n\n      if ((_this$scrollBoxRef$cu = _this.scrollBoxRef.current) === null || _this$scrollBoxRef$cu === void 0 ? void 0 : _this$scrollBoxRef$cu.contains(e.target)) {\n        e.preventDefault();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onNativeSelectChange\", function (e) {\n      var value = e.currentTarget.value;\n\n      if (!_this.isControlledOutside) {\n        _this.setState({\n          selectedOptionIndex: _this.findSelectedIndex(_this.state.options, value)\n        });\n      }\n\n      if (_this.props.onChange) {\n        _this.props.onChange(e);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onInputChange\", function (e) {\n      if (_this.props.onInputChange) {\n        var _options = _this.props.onInputChange(e, _this.props.options);\n\n        if (_options) {\n          if (process.env.NODE_ENV === 'development') {\n            warn('This filtration method is deprecated. Return value of onInputChange will' + ' be ignored in v5.0.0. For custom filtration please update props.options by yourself or use filterFn property');\n          }\n\n          _this.setState({\n            options: _options,\n            selectedOptionIndex: _this.findSelectedIndex(_options, _this.state.nativeSelectValue),\n            inputValue: e.target.value\n          });\n        } else {\n          _this.setState({\n            inputValue: e.target.value\n          });\n        }\n      } else {\n        var _options2 = _this.props.options.filter(function (option) {\n          return _this.props.filterFn(e.target.value, option);\n        });\n\n        _this.setState({\n          options: _options2,\n          selectedOptionIndex: _this.findSelectedIndex(_options2, _this.state.nativeSelectValue),\n          inputValue: e.target.value\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onInputKeyDown\", function (event) {\n      switch (event.key) {\n        case 'ArrowUp':\n          event.preventDefault();\n\n          _this.focusOption('prev');\n\n          break;\n\n        case 'ArrowDown':\n          event.preventDefault();\n\n          _this.focusOption('next');\n\n          break;\n\n        case 'Escape':\n          event.preventDefault();\n\n          _this.close();\n\n          break;\n\n        case 'Enter':\n          event.preventDefault();\n\n          _this.selectFocused();\n\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDownSelect\", function (event) {\n      var opened = _this.state.opened;\n\n      if (event.key.length === 1 && event.key !== ' ') {\n        _this.onKeyboardInput(event.key);\n\n        return;\n      }\n\n      switch (event.key) {\n        case 'ArrowUp':\n          event.preventDefault();\n          opened ? _this.focusOption('prev') : _this.open();\n          break;\n\n        case 'ArrowDown':\n          event.preventDefault();\n          opened ? _this.focusOption('next') : _this.open();\n          break;\n\n        case 'Escape':\n          event.preventDefault();\n\n          _this.close();\n\n          break;\n\n        case 'Enter':\n        case 'Spacebar':\n        case ' ':\n          event.preventDefault();\n          opened ? _this.selectFocused() : _this.open();\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyUp\", debounce(_this.resetKeyboardInput, 1000));\n\n    _defineProperty(_assertThisInitialized(_this), \"renderOption\", function (option, index) {\n      var _this$state2 = _this.state,\n          focusedOptionIndex = _this$state2.focusedOptionIndex,\n          selectedOptionIndex = _this$state2.selectedOptionIndex;\n      var renderOption = _this.props.renderOption;\n      var hovered = index === focusedOptionIndex;\n      var selected = index === selectedOptionIndex;\n      return createScopedElement(React.Fragment, {\n        key: \"\".concat(option.value)\n      }, renderOption({\n        option: option,\n        hovered: hovered,\n        children: option.label,\n        selected: selected,\n        onClick: _this.selectFocused,\n        onMouseDown: _this.handleOptionDown,\n        onMouseEnter: _this.handleOptionHover\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectRef\", function (element) {\n      _this.selectEl = element;\n      setRef(element, _this.props.getRef);\n    });\n\n    var _value = props.value,\n        defaultValue = props.defaultValue;\n    var initialValue = _value !== undefined ? _value : defaultValue;\n    _this.keyboardInput = '';\n    _this.state = {\n      opened: false,\n      focusedOptionIndex: -1,\n      selectedOptionIndex: _this.findSelectedIndex(props.options, initialValue),\n      nativeSelectValue: initialValue,\n      options: props.options,\n      inputValue: ''\n    };\n\n    if (props.value !== undefined) {\n      _this.isControlledOutside = true;\n    }\n\n    return _this;\n  }\n\n  _createClass(CustomSelect, [{\n    key: \"findSelectedIndex\",\n    value: function findSelectedIndex(options, value) {\n      return options.findIndex(function (item) {\n        value = typeof item.value === 'number' ? Number(value) : value;\n        return item.value === value;\n      });\n    }\n  }, {\n    key: \"isValidIndex\",\n    value: function isValidIndex(index) {\n      return index >= 0 && index < this.state.options.length;\n    }\n  }, {\n    key: \"scrollToElement\",\n    value: function scrollToElement(index) {\n      var center = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var dropdown = this.scrollBoxRef.current;\n      var item = dropdown ? dropdown.children[index] : null;\n\n      if (!item) {\n        return;\n      }\n\n      var dropdownHeight = dropdown.offsetHeight;\n      var scrollTop = dropdown.scrollTop;\n      var itemTop = item.offsetTop;\n      var itemHeight = item.offsetHeight;\n\n      if (center) {\n        dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n      } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n        dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n      } else if (itemTop < scrollTop) {\n        dropdown.scrollTop = itemTop;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (prevProps.value !== this.props.value || prevProps.options !== this.props.options) {\n        this.isControlledOutside = this.props.value !== undefined;\n\n        var _value2 = this.props.value === undefined ? this.state.nativeSelectValue : this.props.value;\n\n        var _options3 = this.props.searchable ? this.props.options.filter(function (option) {\n          return _this2.props.filterFn(_this2.state.inputValue, option);\n        }) : this.props.options;\n\n        this.setState({\n          nativeSelectValue: _value2,\n          selectedOptionIndex: this.findSelectedIndex(_options3, _value2),\n          options: _options3\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          opened = _this$state3.opened,\n          nativeSelectValue = _this$state3.nativeSelectValue;\n\n      var _this$props = this.props,\n          searchable = _this$props.searchable,\n          name = _this$props.name,\n          className = _this$props.className,\n          getRef = _this$props.getRef,\n          getRootRef = _this$props.getRootRef,\n          popupDirection = _this$props.popupDirection,\n          options = _this$props.options,\n          sizeY = _this$props.sizeY,\n          platform = _this$props.platform,\n          style = _this$props.style,\n          onChange = _this$props.onChange,\n          onBlur = _this$props.onBlur,\n          onFocus = _this$props.onFocus,\n          onClick = _this$props.onClick,\n          renderOption = _this$props.renderOption,\n          children = _this$props.children,\n          emptyText = _this$props.emptyText,\n          onInputChange = _this$props.onInputChange,\n          filterFn = _this$props.filterFn,\n          restProps = _objectWithoutProperties(_this$props, [\"searchable\", \"name\", \"className\", \"getRef\", \"getRootRef\", \"popupDirection\", \"options\", \"sizeY\", \"platform\", \"style\", \"onChange\", \"onBlur\", \"onFocus\", \"onClick\", \"renderOption\", \"children\", \"emptyText\", \"onInputChange\", \"filterFn\"]);\n\n      var selected = this.getSelectedItem();\n      var label = selected ? selected.label : undefined;\n      return createScopedElement(\"label\", {\n        vkuiClass: getClassName('CustomSelect', platform),\n        className: className,\n        style: style,\n        ref: getRootRef,\n        onClick: this.onLabelClick\n      }, opened && searchable ? createScopedElement(Input, _extends({}, restProps, {\n        autoFocus: true,\n        onBlur: this.onBlur,\n        vkuiClass: classNames({\n          'CustomSelect__open': opened,\n          'CustomSelect__open--popupDirectionTop': popupDirection === 'top'\n        }),\n        value: this.state.inputValue,\n        onKeyDown: this.onInputKeyDown,\n        onChange: this.onInputChange // TODO Ожидается, что клик поймает нативный select, но его перехвает Input. К сожалению, это приводит конфликтам типизации.\n        // TODO Нужно перестать пытаться превратить CustomSelect в select. Тогда эта проблема уйдёт.\n        // @ts-ignore\n        ,\n        onClick: onClick,\n        after: sizeY === SizeType.COMPACT ? createScopedElement(Icon20Dropdown, null) : createScopedElement(Icon24Dropdown, null),\n        placeholder: restProps.placeholder\n      })) : createScopedElement(SelectMimicry, _extends({}, restProps, {\n        \"aria-hidden\": true,\n        onClick: this.onClick,\n        onKeyDown: this.handleKeyDownSelect,\n        onKeyUp: this.handleKeyUp,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        vkuiClass: classNames({\n          'CustomSelect__open': opened,\n          'CustomSelect__open--popupDirectionTop': popupDirection === 'top'\n        }),\n        className: className\n      }), label), createScopedElement(\"select\", {\n        ref: this.selectRef,\n        name: name,\n        onChange: this.onNativeSelectChange,\n        onBlur: onBlur,\n        onFocus: onFocus,\n        onClick: onClick,\n        value: nativeSelectValue,\n        \"aria-hidden\": true,\n        vkuiClass: \"CustomSelect__control\"\n      }, options.map(function (item) {\n        return createScopedElement(\"option\", {\n          key: \"\".concat(item.value),\n          value: item.value\n        });\n      })), opened && createScopedElement(\"div\", {\n        vkuiClass: classNames('CustomSelect__options', \"CustomSelect__options--sizeY-\".concat(sizeY), {\n          'CustomSelect__options--popupDirectionTop': popupDirection === 'top'\n        }),\n        onMouseLeave: this.resetFocusedOption\n      }, createScopedElement(CustomScrollView, {\n        boxRef: this.scrollBoxRef\n      }, this.state.options.map(this.renderOption), this.state.options.length === 0 && createScopedElement(Caption, {\n        level: \"1\",\n        weight: \"regular\",\n        vkuiClass: \"CustomSelect__empty\"\n      }, emptyText))));\n    }\n  }]);\n\n  return CustomSelect;\n}(React.Component);\n\n_defineProperty(CustomSelect, \"defaultProps\", {\n  searchable: false,\n  renderOption: function renderOption(props) {\n    return createScopedElement(CustomSelectOption, props);\n  },\n  options: [],\n  emptyText: 'Ничего не найдено',\n  filterFn: function filterFn(value, option) {\n    return option.label.toLowerCase().includes(value.toLowerCase());\n  }\n});\n\nexport default withPlatform(withAdaptivity(CustomSelect, {\n  sizeY: true\n}));","map":{"version":3,"sources":["../../../src/components/CustomSelect/CustomSelect.tsx"],"names":["warn","warnOnce","CustomSelect","React","Component","searchable","renderOption","options","emptyText","filterFn","option","value","defaultValue","props","initialValue","opened","focusedOptionIndex","selectedOptionIndex","nativeSelectValue","inputValue","createRef","item","Number","index","event","bubbles","center","dropdown","dropdownHeight","scrollTop","itemTop","itemHeight","oldIndex","type","Array","e","fullInput","optionIndex","process","debounce","prevProps","hovered","selected","children","onClick","onMouseDown","onMouseEnter","handleOptionHover","setRef","name","className","getRef","getRootRef","popupDirection","sizeY","platform","style","onChange","onBlur","onFocus","onInputChange","restProps","label","getClassName","onLabelClick","classNames","SizeType","placeholder","resetFocusedOption","scrollBoxRef","withPlatform","withAdaptivity"],"mappings":"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","sourcesContent":["import React, {\n  ChangeEvent,\n  ChangeEventHandler,\n  createRef,\n  KeyboardEvent,\n  KeyboardEventHandler,\n  MouseEvent,\n  ReactNode,\n  SelectHTMLAttributes,\n} from 'react';\nimport SelectMimicry from '../SelectMimicry/SelectMimicry';\nimport { debounce, setRef } from '../../lib/utils';\nimport { classNames } from '../../lib/classNames';\nimport { NativeSelectProps } from '../NativeSelect/NativeSelect';\nimport CustomScrollView from '../CustomScrollView/CustomScrollView';\nimport { SizeType, withAdaptivity } from '../../hoc/withAdaptivity';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport CustomSelectOption, { CustomSelectOptionProps } from '../CustomSelectOption/CustomSelectOption';\nimport { getClassName } from '../../helpers/getClassName';\nimport { FormFieldProps } from '../FormField/FormField';\nimport { HasPlatform } from '../../types';\nimport Input from '../Input/Input';\nimport { Icon20Dropdown, Icon24Dropdown } from '@vkontakte/icons';\nimport Caption from '../Typography/Caption/Caption';\nimport { warnOnce } from '../../lib/warnOnce';\n\ntype SelectValue = SelectHTMLAttributes<HTMLSelectElement>['value'];\n\nexport interface CustomSelectOptionInterface {\n  value: SelectValue;\n  label: string;\n  [index: string]: any;\n}\n\ninterface CustomSelectState {\n  inputValue?: string;\n  opened?: boolean;\n  focusedOptionIndex?: number;\n  selectedOptionIndex?: number;\n  nativeSelectValue?: SelectValue;\n  options?: CustomSelectOptionInterface[];\n}\n\nexport interface CustomSelectProps extends NativeSelectProps, HasPlatform, FormFieldProps {\n  /**\n   * Если `true`, то при клике на селект в нём появится текстовое поле для поиска по `options`. По умолчанию поиск\n   * производится по `option.label`.\n   */\n  searchable?: boolean;\n  /**\n   * Текст, который будет отображен, если приходит пустой `options`\n   */\n  emptyText?: string;\n  onInputChange?: (e: ChangeEvent, options: CustomSelectOptionInterface[]) => void | CustomSelectOptionInterface[];\n  options: Array<{\n    value: SelectValue;\n    label: string;\n    [index: string]: any;\n  }>;\n  /**\n   * Функция для кастомной фильтрации. По-умолчанию поиск производится по option.label.\n   */\n  filterFn?: (value: string, option: CustomSelectOptionInterface) => boolean;\n  popupDirection?: 'top' | 'bottom';\n  /**\n   * В качестве аргумента принимает валидные для [CustomSelectOption](#/CustomSelectOption) свойства\n   */\n  renderOption?: (props: CustomSelectOptionProps) => ReactNode;\n}\n\ntype MouseEventHandler = (event: MouseEvent<HTMLElement>) => void;\n\nconst warn = warnOnce('CustomSelect');\n\nclass CustomSelect extends React.Component<CustomSelectProps, CustomSelectState> {\n  static defaultProps: CustomSelectProps = {\n    searchable: false,\n    renderOption(props: CustomSelectOptionProps): ReactNode {\n      return (\n        <CustomSelectOption {...props} />\n      );\n    },\n    options: [],\n    emptyText: 'Ничего не найдено',\n    filterFn: (value, option) => option.label.toLowerCase().includes(value.toLowerCase()),\n  };\n\n  public constructor(props: CustomSelectProps) {\n    super(props);\n\n    const { value, defaultValue } = props;\n\n    const initialValue = value !== undefined ? value : defaultValue;\n\n    this.keyboardInput = '';\n\n    this.state = {\n      opened: false,\n      focusedOptionIndex: -1,\n      selectedOptionIndex: this.findSelectedIndex(props.options, initialValue),\n      nativeSelectValue: initialValue,\n      options: props.options,\n      inputValue: '',\n    };\n\n    if (props.value !== undefined) {\n      this.isControlledOutside = true;\n    }\n  }\n\n  public state: CustomSelectState;\n  private keyboardInput: string;\n  private isControlledOutside: boolean;\n  private selectEl: HTMLSelectElement;\n  private readonly scrollBoxRef = createRef<HTMLDivElement>();\n\n  private readonly resetKeyboardInput = () => {\n    this.keyboardInput = '';\n  };\n\n  private readonly getSelectedItem = () => {\n    const { selectedOptionIndex, options } = this.state;\n\n    if (!options.length) {\n      return null;\n    }\n\n    return options[selectedOptionIndex];\n  };\n\n  findSelectedIndex(options: CustomSelectOptionInterface[], value: SelectValue) {\n    return options.findIndex((item) => {\n      value = typeof item.value === 'number' ? Number(value) : value;\n      return item.value === value;\n    });\n  }\n\n  open = () => {\n    this.setState(({ selectedOptionIndex }) => ({\n      opened: true,\n      focusedOptionIndex: selectedOptionIndex,\n    }), () => {\n      const { selectedOptionIndex } = this.state;\n\n      if (this.isValidIndex(selectedOptionIndex)) {\n        this.scrollToElement(selectedOptionIndex, true);\n      }\n    });\n  };\n\n  close = () => {\n    this.resetKeyboardInput();\n\n    this.setState(() => ({\n      inputValue: '',\n      opened: false,\n      focusedOptionIndex: -1,\n      options: this.props.options,\n    }));\n  };\n\n  private isValidIndex(index: number) {\n    return index >= 0 && index < this.state.options.length;\n  }\n\n  selectFocused = () => {\n    const { focusedOptionIndex } = this.state;\n\n    this.select(focusedOptionIndex);\n  };\n\n  select = (index: number) => {\n    if (!this.isValidIndex(index)) {\n      return;\n    }\n\n    const item = this.state.options[index];\n\n    this.setState({\n      nativeSelectValue: item.value,\n    }, () => {\n      const event = new Event('change', { bubbles: true });\n      this.selectEl.dispatchEvent(event);\n    });\n    this.close();\n  };\n\n  onClick = () => {\n    this.state.opened ? this.close() : this.open();\n  };\n\n  onFocus = () => {\n    const event = new Event('focus');\n    this.selectEl.dispatchEvent(event);\n  };\n\n  onBlur = () => {\n    this.resetKeyboardInput();\n\n    this.setState(() => ({\n      opened: false,\n      options: this.props.options,\n    }));\n\n    const event = new Event('blur');\n    this.selectEl.dispatchEvent(event);\n  };\n\n  private scrollToElement(index: number, center = false) {\n    const dropdown = this.scrollBoxRef.current;\n    const item = dropdown ? (dropdown.children[index] as HTMLElement) : null;\n\n    if (!item) {\n      return;\n    }\n\n    const dropdownHeight = dropdown.offsetHeight;\n    const scrollTop = dropdown.scrollTop;\n    const itemTop = item.offsetTop;\n    const itemHeight = item.offsetHeight;\n\n    if (center) {\n      dropdown.scrollTop = itemTop - dropdownHeight / 2 + itemHeight / 2;\n    } else if (itemTop + itemHeight > dropdownHeight + scrollTop) {\n      dropdown.scrollTop = itemTop - dropdownHeight + itemHeight;\n    } else if (itemTop < scrollTop) {\n      dropdown.scrollTop = itemTop;\n    }\n  }\n\n  focusOptionByIndex = (index: number) => {\n    const { focusedOptionIndex } = this.state;\n    const oldIndex = focusedOptionIndex;\n\n    if (index < 0) {\n      index = this.state.options.length - 1;\n    } else if (index >= this.state.options.length) {\n      index = 0;\n    }\n\n    if (index === oldIndex) {\n      return;\n    }\n\n    this.scrollToElement(index);\n\n    this.setState(() => ({\n      focusedOptionIndex: index,\n    }));\n  };\n\n  focusOption = (type: 'next' | 'prev') => {\n    const { focusedOptionIndex } = this.state;\n    let index = focusedOptionIndex;\n\n    if (type === 'next') {\n      index = focusedOptionIndex + 1;\n    } else if (type === 'prev') {\n      index = focusedOptionIndex - 1;\n    }\n\n    this.focusOptionByIndex(index);\n  };\n\n  handleOptionHover: MouseEventHandler = (e: MouseEvent<HTMLElement>) => {\n    this.setState({\n      focusedOptionIndex: Array.prototype.indexOf.call(e.currentTarget.parentNode.children, e.currentTarget),\n    });\n  };\n\n  handleOptionDown: MouseEventHandler = (e: MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n  };\n\n  resetFocusedOption = () => {\n    this.setState(() => ({\n      focusedOptionIndex: -1,\n    }));\n  };\n\n  onKeyboardInput = (key: string) => {\n    const fullInput = this.keyboardInput + key;\n\n    const optionIndex = this.state.options.findIndex((option) => {\n      return option.label.toLowerCase().includes(fullInput);\n    });\n\n    if (optionIndex > -1) {\n      this.focusOptionByIndex(optionIndex);\n    }\n\n    this.keyboardInput = fullInput;\n  };\n\n  /**\n   * Нужен для правильного поведения обработчика onClick на select. Фильтрует клики, которые были сделаны по\n   * выпадающему списку.\n   */\n  onLabelClick = (e: MouseEvent<HTMLLabelElement>) => {\n    if (this.scrollBoxRef.current?.contains(e.target as Node)) {\n      e.preventDefault();\n    }\n  };\n\n  onNativeSelectChange: ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const value = e.currentTarget.value;\n    if (!this.isControlledOutside) {\n      this.setState({\n        selectedOptionIndex: this.findSelectedIndex(this.state.options, value),\n      });\n    }\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  };\n\n  onInputChange: ChangeEventHandler<HTMLInputElement> = (e) => {\n    if (this.props.onInputChange) {\n      const options = this.props.onInputChange(e, this.props.options);\n      if (options) {\n        if (process.env.NODE_ENV === 'development') {\n          warn('This filtration method is deprecated. Return value of onInputChange will' +\n            ' be ignored in v5.0.0. For custom filtration please update props.options by yourself or use filterFn property');\n        }\n        this.setState({\n          options,\n          selectedOptionIndex: this.findSelectedIndex(options, this.state.nativeSelectValue),\n          inputValue: e.target.value,\n        });\n      } else {\n        this.setState({ inputValue: e.target.value });\n      }\n    } else {\n      const options = this.props.options.filter((option) => this.props.filterFn(e.target.value, option));\n      this.setState({\n        options,\n        selectedOptionIndex: this.findSelectedIndex(options, this.state.nativeSelectValue),\n        inputValue: e.target.value,\n      });\n    }\n  };\n\n  onInputKeyDown: KeyboardEventHandler<HTMLInputElement> = (event) => {\n    switch (event.key) {\n      case 'ArrowUp':\n        event.preventDefault();\n        this.focusOption('prev');\n        break;\n      case 'ArrowDown':\n        event.preventDefault();\n        this.focusOption('next');\n        break;\n      case 'Escape':\n        event.preventDefault();\n        this.close();\n        break;\n      case 'Enter':\n        event.preventDefault();\n        this.selectFocused();\n        break;\n    }\n  };\n\n  handleKeyDownSelect = (event: KeyboardEvent) => {\n    const { opened } = this.state;\n\n    if (event.key.length === 1 && event.key !== ' ') {\n      this.onKeyboardInput(event.key);\n\n      return;\n    }\n\n    switch (event.key) {\n      case 'ArrowUp':\n        event.preventDefault();\n        opened ? this.focusOption('prev') : this.open();\n        break;\n      case 'ArrowDown':\n        event.preventDefault();\n        opened ? this.focusOption('next') : this.open();\n        break;\n      case 'Escape':\n        event.preventDefault();\n        this.close();\n        break;\n      case 'Enter':\n      case 'Spacebar':\n      case ' ':\n        event.preventDefault();\n        opened ? this.selectFocused() : this.open();\n        break;\n    }\n  };\n\n  handleKeyUp = debounce(this.resetKeyboardInput, 1000);\n\n  componentDidUpdate(prevProps: CustomSelectProps) {\n    if (prevProps.value !== this.props.value || prevProps.options !== this.props.options) {\n      this.isControlledOutside = this.props.value !== undefined;\n      const value = this.props.value === undefined ? this.state.nativeSelectValue : this.props.value;\n      const options = this.props.searchable ? this.props.options.filter((option) => this.props.filterFn(this.state.inputValue, option)) : this.props.options;\n      this.setState({\n        nativeSelectValue: value,\n        selectedOptionIndex: this.findSelectedIndex(options, value),\n        options,\n      });\n    }\n  }\n\n  renderOption = (option: CustomSelectOptionInterface, index: number) => {\n    const { focusedOptionIndex, selectedOptionIndex } = this.state;\n    const { renderOption } = this.props;\n    const hovered = index === focusedOptionIndex;\n    const selected = index === selectedOptionIndex;\n\n    return (\n      <React.Fragment key={`${option.value}`}>\n        {renderOption({\n          option,\n          hovered,\n          children: option.label,\n          selected,\n          onClick: this.selectFocused,\n          onMouseDown: this.handleOptionDown,\n          onMouseEnter: this.handleOptionHover,\n        })}\n      </React.Fragment>\n    );\n  };\n\n  selectRef = (element: HTMLSelectElement) => {\n    this.selectEl = element;\n    setRef(element, this.props.getRef);\n  };\n\n  render() {\n    const { opened, nativeSelectValue } = this.state;\n    const {\n      searchable,\n      name,\n      className,\n      getRef,\n      getRootRef,\n      popupDirection,\n      options,\n      sizeY,\n      platform,\n      style,\n      onChange,\n      onBlur,\n      onFocus,\n      onClick,\n      renderOption,\n      children,\n      emptyText,\n      onInputChange,\n      filterFn,\n      ...restProps\n    } = this.props;\n    const selected = this.getSelectedItem();\n    const label = selected ? selected.label : undefined;\n\n    return (\n      <label\n        vkuiClass={getClassName('CustomSelect', platform)}\n        className={className}\n        style={style}\n        ref={getRootRef}\n        onClick={this.onLabelClick}\n      >\n        {opened && searchable ?\n          <Input\n            {...restProps}\n            autoFocus\n            onBlur={this.onBlur}\n            vkuiClass={classNames({\n              'CustomSelect__open': opened,\n              'CustomSelect__open--popupDirectionTop': popupDirection === 'top',\n            })}\n            value={this.state.inputValue}\n            onKeyDown={this.onInputKeyDown}\n            onChange={this.onInputChange}\n            // TODO Ожидается, что клик поймает нативный select, но его перехвает Input. К сожалению, это приводит конфликтам типизации.\n            // TODO Нужно перестать пытаться превратить CustomSelect в select. Тогда эта проблема уйдёт.\n            // @ts-ignore\n            onClick={onClick}\n            after={sizeY === SizeType.COMPACT ? <Icon20Dropdown /> : <Icon24Dropdown />}\n            placeholder={restProps.placeholder}\n          /> :\n          <SelectMimicry\n            {...restProps}\n            aria-hidden={true}\n            onClick={this.onClick}\n            onKeyDown={this.handleKeyDownSelect}\n            onKeyUp={this.handleKeyUp}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            vkuiClass={classNames({\n              'CustomSelect__open': opened,\n              'CustomSelect__open--popupDirectionTop': popupDirection === 'top',\n            })}\n            className={className}\n          >\n            {label}\n          </SelectMimicry>\n        }\n        <select\n          ref={this.selectRef}\n          name={name}\n          onChange={this.onNativeSelectChange}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onClick={onClick}\n          value={nativeSelectValue}\n          aria-hidden={true}\n          vkuiClass=\"CustomSelect__control\"\n        >\n          {options.map((item) => <option key={`${item.value}`} value={item.value} />)}\n        </select>\n        {opened &&\n        <div\n          vkuiClass={classNames('CustomSelect__options', `CustomSelect__options--sizeY-${sizeY}`, {\n            'CustomSelect__options--popupDirectionTop': popupDirection === 'top',\n          })}\n          onMouseLeave={this.resetFocusedOption}\n        >\n          <CustomScrollView boxRef={this.scrollBoxRef}>\n            {this.state.options.map(this.renderOption)}\n            {this.state.options.length === 0 &&\n              <Caption level=\"1\" weight=\"regular\" vkuiClass=\"CustomSelect__empty\">\n                {emptyText}\n              </Caption>\n            }\n          </CustomScrollView>\n        </div>\n        }\n      </label>\n    );\n  }\n}\n\nexport default withPlatform(withAdaptivity(CustomSelect, {\n  sizeY: true,\n}));\n"]},"metadata":{},"sourceType":"module"}