{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport React, { Fragment, useState, isValidElement, forwardRef, cloneElement, useMemo, Children } from 'react';\nimport ReactDOM from 'react-dom';\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport { usePopper } from 'react-popper';\nimport { tooltipContainerAttr } from \"./TooltipContainer\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useDOM } from \"../../lib/dom\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\n\nvar isDOMTypeElement = function isDOMTypeElement(element) {\n  return /*#__PURE__*/React.isValidElement(element) && typeof element.type === 'string';\n};\n\nvar baseClassName = getClassName('Tooltip');\nvar warn = warnOnce('Tooltip');\nvar IS_DEV = process.env.NODE_ENV === 'development';\nvar SimpleTooltip = /*#__PURE__*/forwardRef(function SimpleTooltip(_ref, ref) {\n  var _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'accent' : _ref$mode,\n      header = _ref.header,\n      text = _ref.text,\n      arrowRef = _ref.arrowRef,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      attributes = _ref.attributes;\n  return createScopedElement(\"div\", {\n    vkuiClass: classNames(baseClassName, \"Tooltip--\".concat(mode))\n  }, createScopedElement(\"div\", _extends({\n    vkuiClass: \"Tooltip__container\",\n    ref: ref,\n    style: style.container\n  }, attributes.container), createScopedElement(\"div\", _extends({\n    vkuiClass: \"Tooltip__corner\",\n    style: style.arrow\n  }, attributes.arrow, {\n    ref: arrowRef\n  })), createScopedElement(\"div\", {\n    vkuiClass: \"Tooltip__content\"\n  }, header && createScopedElement(Subhead, {\n    weight: \"semibold\",\n    vkuiClass: \"Tooltip__title\"\n  }, header), text && createScopedElement(Subhead, {\n    weight: \"regular\",\n    vkuiClass: \"Tooltip__text\"\n  }, text))));\n});\n\nfunction mapAlignX(x) {\n  switch (x) {\n    case 'left':\n      return 'start';\n\n    case 'right':\n      return 'end';\n\n    default:\n      return '';\n  }\n}\n\n;\n\nfunction getPlacement(alignX, alignY) {\n  return [alignY || 'bottom', mapAlignX(alignX || 'left')].filter(function (p) {\n    return !!p;\n  }).join('-');\n}\n\nvar Tooltip = function Tooltip(_ref2) {\n  var children = _ref2.children,\n      isShown = _ref2.isShown,\n      _ref2$offsetX = _ref2.offsetX,\n      offsetX = _ref2$offsetX === void 0 ? 0 : _ref2$offsetX,\n      _ref2$offsetY = _ref2.offsetY,\n      offsetY = _ref2$offsetY === void 0 ? 15 : _ref2$offsetY,\n      alignX = _ref2.alignX,\n      alignY = _ref2.alignY,\n      onClose = _ref2.onClose,\n      cornerOffset = _ref2.cornerOffset,\n      restProps = _objectWithoutProperties(_ref2, [\"children\", \"isShown\", \"offsetX\", \"offsetY\", \"alignX\", \"alignY\", \"onClose\", \"cornerOffset\"]);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      tooltipRef = _useState2[0],\n      setTooltipRef = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tooltipArrowRef = _useState4[0],\n      setTooltipArrowRef = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      target = _useState6[0],\n      setTarget = _useState6[1];\n\n  if (IS_DEV) {\n    var multiChildren = Children.count(children) > 1; // Empty children is a noop\n\n    var primitiveChild = hasReactNode(children) && _typeof(children) !== 'object';\n    (multiChildren || primitiveChild) && warn(['children must be a single React element, got', multiChildren && 'multiple', primitiveChild && JSON.stringify(children)].filter(Boolean).join(' '));\n  }\n  /* eslint-disable no-restricted-properties */\n\n  /* eslint-disable @typescript-eslint/no-unnecessary-type-assertion*/\n\n\n  var tooltipContainer = useMemo(function () {\n    return target === null || target === void 0 ? void 0 : target.closest(\"[\".concat(tooltipContainerAttr, \"]\"));\n  }, [target]);\n  var strategy = useMemo(function () {\n    return (target === null || target === void 0 ? void 0 : target.style.position) === 'fixed' ? 'fixed' : 'absolute';\n  }, [target]);\n  /* eslint-enable @typescript-eslint/no-unnecessary-type-assertion*/\n\n  /* eslint-enable no-restricted-properties */\n\n  if (IS_DEV && target && !tooltipContainer) {\n    throw new Error('Use TooltipContainer for Tooltip outside Panel (see docs)');\n  }\n\n  var placement = getPlacement(alignX, alignY);\n\n  var _usePopper = usePopper(target, tooltipRef, {\n    strategy: strategy,\n    placement: placement,\n    modifiers: [{\n      name: 'offset',\n      options: {\n        offset: [offsetX, offsetY]\n      }\n    }, {\n      name: 'arrow',\n      options: {\n        element: tooltipArrowRef,\n        padding: 14\n      }\n    }, {\n      name: 'preventOverflow'\n    }, {\n      name: 'flip'\n    }]\n  }),\n      styles = _usePopper.styles,\n      attributes = _usePopper.attributes;\n\n  var _useDOM = useDOM(),\n      document = _useDOM.document;\n\n  useGlobalEventListener(document, 'click', isShown && onClose, {\n    passive: true\n  }); // NOTE: setting isShown to true used to trigger usePopper().forceUpdate()\n\n  var childRef = /*#__PURE__*/isValidElement(children) && (isDOMTypeElement(children) ? children.ref : children.props.getRootRef);\n  var patchedRef = useExternRef(setTarget, childRef);\n  var child = /*#__PURE__*/isValidElement(children) ? /*#__PURE__*/cloneElement(children, _defineProperty({}, isDOMTypeElement(children) ? 'ref' : 'getRootRef', patchedRef)) : children;\n\n  if (!alignX || !alignY) {\n    cornerOffset = 0;\n  }\n\n  return createScopedElement(Fragment, null, child, isShown && target != null && /*#__PURE__*/ReactDOM.createPortal(createScopedElement(SimpleTooltip, _extends({}, restProps, {\n    ref: function ref(el) {\n      return setTooltipRef(el);\n    },\n    arrowRef: function arrowRef(el) {\n      return setTooltipArrowRef(el);\n    },\n    style: {\n      arrow: styles.arrow,\n      container: styles.popper\n    },\n    attributes: {\n      arrow: attributes.arrow,\n      container: attributes.popper\n    }\n  })), tooltipContainer));\n};\n\nTooltip.defaultProps = {\n  offsetX: 0,\n  offsetY: 15,\n  cornerOffset: 0,\n  isShown: true,\n  mode: 'accent'\n};\nexport default Tooltip;","map":{"version":3,"sources":["../../../src/components/Tooltip/Tooltip.tsx"],"names":["isDOMTypeElement","element","baseClassName","getClassName","warn","warnOnce","IS_DEV","process","SimpleTooltip","forwardRef","mode","header","text","arrowRef","style","attributes","classNames","container","arrow","alignY","mapAlignX","alignX","Tooltip","children","isShown","offsetX","offsetY","onClose","cornerOffset","restProps","tooltipRef","setTooltipRef","useState","tooltipArrowRef","setTooltipArrowRef","target","setTarget","multiChildren","Children","primitiveChild","hasReactNode","JSON","tooltipContainer","useMemo","strategy","placement","getPlacement","styles","usePopper","modifiers","name","options","offset","padding","document","useDOM","useGlobalEventListener","passive","childRef","patchedRef","useExternRef","child","cloneElement","popper"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, ReactElement, ReactNode, isValidElement, FC, forwardRef, Ref, CSSProperties, HTMLAttributes, cloneElement, useMemo, Children } from 'react';\nimport ReactDOM from 'react-dom';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport { usePopper } from 'react-popper';\nimport { Placement } from '@popperjs/core';\nimport { tooltipContainerAttr } from './TooltipContainer';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useDOM } from '../../lib/dom';\nimport { warnOnce } from '../../lib/warnOnce';\nimport { hasReactNode } from '../../lib/utils';\nimport { useGlobalEventListener } from '../../hooks/useGlobalEventListener';\n\ninterface SimpleTooltipProps extends Partial<TooltipProps> {\n  target?: HTMLDivElement;\n  arrowRef?: Ref<HTMLDivElement>;\n  style?: {\n    arrow: CSSProperties;\n    container: CSSProperties;\n  };\n  attributes?: {\n    arrow: HTMLAttributes<HTMLDivElement>;\n    container: HTMLAttributes<HTMLDivElement>;\n  };\n}\n\nconst isDOMTypeElement = (element: ReactElement): element is React.DOMElement<any, any> => {\n  return React.isValidElement(element) && typeof element.type === 'string';\n};\n\nconst baseClassName = getClassName('Tooltip');\nconst warn = warnOnce('Tooltip');\nconst IS_DEV = process.env.NODE_ENV === 'development';\n\nconst SimpleTooltip = forwardRef<HTMLDivElement, SimpleTooltipProps>(\n  function SimpleTooltip(\n    { mode = 'accent', header, text, arrowRef, style = {}, attributes },\n    ref,\n  ) {\n    return (\n      <div vkuiClass={\n        classNames(\n          baseClassName,\n          `Tooltip--${mode}`,\n        )}>\n        <div vkuiClass=\"Tooltip__container\" ref={ref} style={style.container} {...attributes.container}>\n          <div vkuiClass=\"Tooltip__corner\" style={style.arrow} {...attributes.arrow} ref={arrowRef} />\n          <div vkuiClass=\"Tooltip__content\">\n            {header && <Subhead weight=\"semibold\" vkuiClass=\"Tooltip__title\">{header}</Subhead>}\n            {text && <Subhead weight=\"regular\" vkuiClass=\"Tooltip__text\">{text}</Subhead>}\n          </div>\n        </div>\n      </div>\n    );\n  });\n\nexport interface TooltipProps {\n  /**\n   * **Важно**: если в `children` передан React-компонент, то необходимо убедиться в том, что он поддерживает\n   * свойство `getRootRef`, которое должно возвращаться ссылку на корневой DOM-элемент компонента,\n   * иначе тултип показан не будет. Если передан React-element, то такой проблемы нет.\n   */\n  children: ReactElement;\n  mode?: 'accent' | 'light';\n  /**\n   * Если передан `false`, то рисуется просто `children`.\n   */\n  isShown?: boolean;\n  /**\n   * Текст тултипа.\n   */\n  text?: ReactNode;\n  /**\n   * Заголовок тултипа.\n   */\n  header?: ReactNode;\n  /**\n   * Положение по горизонтали (прижатие к левому или правому краю `children`).\n   * Если не задано, позиция по горизонтали определятся автоматически\n   */\n  alignX?: 'center' | 'left' | 'right';\n  /**\n   * Положение по вертикали (расположение над или под `children`).\n   * Если не задано, позиция по вертикали определятся автоматически\n   */\n  alignY?: 'top' | 'bottom';\n  /**\n   * Сдвиг по горизонтали (относительно портала, в котором рисуется тултип).\n   */\n  offsetX?: number;\n  /**\n   * Сдвиг по вертикали (относительно портала, в котором рисуется тултип).\n   */\n  offsetY?: number;\n  /**\n   * Сдвиг треугольника (относительно ширины тултипа).\n   */\n  cornerOffset?: number;\n  /**\n   * Callback, который вызывается при клике по любому месту в пределах экрана.\n   */\n  onClose?: () => void;\n}\n\nfunction mapAlignX(x: TooltipProps['alignX']) {\n  switch (x) {\n    case 'left': return 'start';\n    case 'right': return 'end';\n    default: return '';\n  }\n};\nfunction getPlacement(alignX: TooltipProps['alignX'], alignY: TooltipProps['alignY']): Placement {\n  return [alignY || 'bottom', mapAlignX(alignX || 'left')].filter((p) => !!p).join('-') as Placement;\n}\n\nconst Tooltip: FC<TooltipProps> = ({\n  children, isShown, offsetX = 0, offsetY = 15,\n  alignX, alignY, onClose, cornerOffset,\n  ...restProps\n}) => {\n  const [tooltipRef, setTooltipRef] = useState<HTMLElement>();\n  const [tooltipArrowRef, setTooltipArrowRef] = useState<HTMLElement>();\n  const [target, setTarget] = useState<HTMLElement>();\n\n  if (IS_DEV) {\n    const multiChildren = Children.count(children) > 1;\n    // Empty children is a noop\n    const primitiveChild = hasReactNode(children) && typeof children !== 'object';\n    (multiChildren || primitiveChild) && warn([\n      'children must be a single React element, got',\n      multiChildren && 'multiple',\n      primitiveChild && JSON.stringify(children),\n    ].filter(Boolean).join(' '));\n  }\n\n  /* eslint-disable no-restricted-properties */\n  /* eslint-disable @typescript-eslint/no-unnecessary-type-assertion*/\n  const tooltipContainer = useMemo(() => target?.closest(`[${tooltipContainerAttr}]`) as HTMLDivElement, [target]);\n  const strategy = useMemo(() => target?.style.position === 'fixed' ? 'fixed' : 'absolute', [target]);\n  /* eslint-enable @typescript-eslint/no-unnecessary-type-assertion*/\n  /* eslint-enable no-restricted-properties */\n\n  if (IS_DEV && target && !tooltipContainer) {\n    throw new Error('Use TooltipContainer for Tooltip outside Panel (see docs)');\n  }\n\n  const placement = getPlacement(alignX, alignY);\n  const { styles, attributes } = usePopper(target, tooltipRef, {\n    strategy,\n    placement,\n    modifiers: [\n      {\n        name: 'offset', options: {\n          offset: [\n            offsetX,\n            offsetY,\n          ],\n        },\n      },\n      {\n        name: 'arrow', options: {\n          element: tooltipArrowRef,\n          padding: 14,\n        },\n      },\n      {\n        name: 'preventOverflow',\n      },\n      {\n        name: 'flip',\n      },\n    ],\n  });\n\n  const { document } = useDOM();\n  useGlobalEventListener(document, 'click', isShown && onClose, { passive: true });\n  // NOTE: setting isShown to true used to trigger usePopper().forceUpdate()\n\n  const childRef = isValidElement(children) &&\n    (isDOMTypeElement(children) ? children.ref : children.props.getRootRef);\n  const patchedRef = useExternRef(setTarget, childRef);\n  const child = isValidElement(children) ? cloneElement(children, {\n    [isDOMTypeElement(children) ? 'ref' : 'getRootRef']: patchedRef,\n  }) : children;\n\n  if (!alignX || !alignY) {\n    cornerOffset = 0;\n  }\n\n  return (\n    <Fragment>\n      {child}\n      {isShown && target != null && ReactDOM.createPortal(\n        <SimpleTooltip\n          {...restProps}\n          ref={(el) => setTooltipRef(el)}\n          arrowRef={(el) => setTooltipArrowRef(el)}\n          style={{ arrow: styles.arrow, container: styles.popper }}\n          attributes={{ arrow: attributes.arrow, container: attributes.popper }}\n        />,\n        tooltipContainer,\n      )}\n    </Fragment>\n  );\n};\n\nTooltip.defaultProps = {\n  offsetX: 0,\n  offsetY: 15,\n  cornerOffset: 0,\n  isShown: true,\n  mode: 'accent',\n};\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module"}