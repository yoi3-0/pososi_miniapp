{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { createScopedElement } from \"../lib/jsxRuntime\";\nimport React from 'react';\nexport function withContext(Component, Ctx, prop) {\n  function WithContext(props) {\n    var context = React.useContext(Ctx); // @ts-ignore\n\n    return createScopedElement(Component, _extends({}, props, _defineProperty({}, prop, context)));\n  }\n\n  return WithContext;\n}","map":{"version":3,"sources":["../../src/hoc/withContext.tsx"],"names":["context","React"],"mappings":";;;AAAA,OAAA,KAAA,MAAA,OAAA;AAEA,OAAO,SAAA,WAAA,CAAA,SAAA,EAAA,GAAA,EAAA,IAAA,EAA2E;AAChF,WAAA,WAAA,CAAA,KAAA,EAAgC;AAC9B,QAAMA,OAAO,GAAGC,KAAK,CAALA,UAAAA,CADc,GACdA,CAAhB,CAD8B,CAG9B;;AACA,WAAO,mBAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA,eAAA,CAAA,EAAA,EAAA,IAAA,EAAP,OAAO,CAAA,CAAA,CAAP;AACD;;AACD,SAAA,WAAA;AACD","sourcesContent":["import React, { Context } from 'react';\n\nexport function withContext<T, X>(Component: T, Ctx: Context<X>, prop: string): T {\n  function WithContext(props: {}) {\n    const context = React.useContext<X>(Ctx);\n\n    // @ts-ignore\n    return <Component {...props} {...{ [prop]: context }} />;\n  }\n  return WithContext as unknown as T;\n}\n"]},"metadata":{},"sourceType":"module"}