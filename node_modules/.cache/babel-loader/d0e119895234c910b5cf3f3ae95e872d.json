{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 24 24';\nvar id = 'document_outline_24';\nvar content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" id=\"document_outline_24\"><path d=\"M13.25 3.753H7.47c-1.2 0-2.169.928-2.169 2.065v11.764c0 1.137.968 2.065 2.17 2.065h9.209c1.2 0 2.169-.927 2.169-2.065V10.9h-2.274a3.325 3.325 0 01-3.325-3.325V3.753zm1.775 4.197c0 .649.526 1.175 1.175 1.175h2.317l-3.492-3.97V7.95zM3.5 5.818C3.5 3.706 5.28 2 7.47 2h5.921c.78 0 1.52.33 2.026.904L20.02 8.14c.406.461.629 1.047.629 1.653v7.79c0 2.111-1.78 3.817-3.97 3.817H7.47c-2.19 0-3.97-1.706-3.97-3.818V5.818z\" fill=\"currentColor\" /></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon24DocumentOutline = function Icon24DocumentOutline(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 24,\n    height: !isNaN(props.height) ? +props.height : 24\n  }));\n};\n\nIcon24DocumentOutline.mountIcon = mountIcon;\nexport default Icon24DocumentOutline;","map":{"version":3,"sources":["../../../tmp/24/document_outline.ts"],"names":["viewBox","id","content","isMounted","addSpriteSymbol","Icon24DocumentOutline","useIsomorphicLayoutEffect","mountIcon","assign","width","isNaN","props","height"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA,C,CACA;;AACA,OAAA,aAAA,MAAA,kCAAA,C,CACA;;AACA,SAAA,MAAA,QAAA,mBAAA;AACA,SAAA,eAAA,EAAA,yBAAA,QAAA,WAAA;AACA,SAAA,OAAA,QAAA,YAAA;AAEA,IAAMA,OAAO,GAAb,WAAA;AACA,IAAMC,EAAE,GAAR,qBAAA;AACA,IAAMC,OAAO,GAAb,2iBAAA;AAEA,IAAIC,SAAS,GAAb,KAAA;;AACA,SAAA,SAAA,GAAqB;AACnB,MAAI,CAAJ,SAAA,EAAgB;AACdC,IAAAA,eAAe,CAAC,IAAA,aAAA,CAAkB;AAChCH,MAAAA,EAAE,EAD8B,EAAA;AAEhCD,MAAAA,OAAO,EAFyB,OAAA;AAGhCE,MAAAA,OAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfE;AAMAD,IAAAA,SAAS,GAATA,IAAAA;AACD;AACF;;AASD,IAAME,qBAAqD,GAAG,SAAxDA,qBAAwD,CAAA,KAAA,EAAW;AACvEC,EAAAA,yBAAyB,CAAC,YAAM;AAC9BC,IAAAA,SAAS;AADc,GAAA,EAAzBD,EAAyB,CAAzBA;AAIA,SAAA,aAAO,KAAK,CAAL,aAAA,CAAA,OAAA,EAA6BE,MAAM,CAAA,EAAA,EAAA,KAAA,EAAY;AACpDR,IAAAA,OAAO,EAD6C,OAAA;AAEpDC,IAAAA,EAAE,EAFkD,EAAA;AAGpDQ,IAAAA,KAAK,EAAE,CAACC,KAAK,CAACC,KAAK,CAAZ,KAAM,CAAN,GAAsB,CAACA,KAAK,CAA5B,KAAA,GAH6C,EAAA;AAIpDC,IAAAA,MAAM,EAAE,CAACF,KAAK,CAACC,KAAK,CAAZ,MAAM,CAAN,GAAuB,CAACA,KAAK,CAA7B,MAAA,GAAuC;AAJK,GAAZ,CAAnC,CAAP;AALF,CAAA;;AAaCN,qBAAD,CAAA,SAACA,GAAD,SAACA;AAED,eAAA,qBAAA","sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 24 24';\nconst id = 'document_outline_24';\nconst content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" id=\"document_outline_24\"><path d=\"M13.25 3.753H7.47c-1.2 0-2.169.928-2.169 2.065v11.764c0 1.137.968 2.065 2.17 2.065h9.209c1.2 0 2.169-.927 2.169-2.065V10.9h-2.274a3.325 3.325 0 01-3.325-3.325V3.753zm1.775 4.197c0 .649.526 1.175 1.175 1.175h2.317l-3.492-3.97V7.95zM3.5 5.818C3.5 3.706 5.28 2 7.47 2h5.921c.78 0 1.52.33 2.026.904L20.02 8.14c.406.461.629 1.047.629 1.653v7.79c0 2.111-1.78 3.817-3.97 3.817H7.47c-2.19 0-3.97-1.706-3.97-3.818V5.818z\" fill=\"currentColor\" /></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon24DocumentOutlineProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon24DocumentOutline: FC<Icon24DocumentOutlineProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 24,\n    height: !isNaN(props.height) ? +props.height : 24,\n  }));\n};\n\n(Icon24DocumentOutline as any).mountIcon = mountIcon;\n\nexport default Icon24DocumentOutline;\n"]},"metadata":{},"sourceType":"module"}