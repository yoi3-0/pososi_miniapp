{"ast":null,"code":"/*\n * Получает координату по оси абсцисс из touch- или mouse-события\n */\nvar coordX = function coordX(e) {\n  if (e.clientX != null) {\n    return e.clientX;\n  }\n\n  return e.changedTouches && e.changedTouches[0].clientX;\n};\n/*\n * Получает координату по оси ординат из touch- или mouse-события\n */\n\n\nvar coordY = function coordY(e) {\n  if (e.clientY != null) {\n    return e.clientY;\n  }\n\n  return e.changedTouches && e.changedTouches[0].clientY;\n};\n\nvar isClient = typeof window !== 'undefined';\nvar touchEnabled = isClient && 'ontouchstart' in window;\n/*\n * Возвращает массив поддерживаемых событий\n * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.\n * Если нет, используем события мыши\n */\n\nfunction getSupportedEvents() {\n  if (touchEnabled) {\n    return ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n  }\n\n  return ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n}\n/*\n * Рассчитывает \"сопротивление\" для iOS тач-событий\n */\n\n\nfunction rubber(offset, dimension, resistanceRate, isAndroid) {\n  if (isAndroid || offset < 0) {\n    return offset;\n  }\n\n  var offsettedResistance = offset * resistanceRate;\n  return offsettedResistance * dimension / (offsettedResistance + dimension);\n}\n\nexport { getSupportedEvents, coordX, coordY, touchEnabled, rubber };","map":{"version":3,"sources":["../../src/lib/touch.ts"],"names":["coordX","e","coordY","isClient","touchEnabled","isAndroid","offset","offsettedResistance"],"mappings":"AAGA;;;AAGA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAA,CAAA,EAA+B;AAC5C,MAAIC,CAAC,CAADA,OAAAA,IAAJ,IAAA,EAAuB;AACrB,WAAOA,CAAC,CAAR,OAAA;AACD;;AACD,SAAOA,CAAC,CAADA,cAAAA,IAAoBA,CAAC,CAADA,cAAAA,CAAAA,CAAAA,EAA3B,OAAA;AAJF,CAAA;AAOA;;;;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAA,CAAA,EAA+B;AAC5C,MAAID,CAAC,CAADA,OAAAA,IAAJ,IAAA,EAAuB;AACrB,WAAOA,CAAC,CAAR,OAAA;AACD;;AACD,SAAOA,CAAC,CAADA,cAAAA,IAAoBA,CAAC,CAADA,cAAAA,CAAAA,CAAAA,EAA3B,OAAA;AAJF,CAAA;;AAOA,IAAME,QAAiB,GAAG,OAAA,MAAA,KAA1B,WAAA;AACA,IAAMC,YAAqB,GAAGD,QAAQ,IAAI,kBAA1C,MAAA;AAEA;;;;;;AAKA,SAAA,kBAAA,GAAwC;AACtC,MAAA,YAAA,EAAkB;AAChB,WAAO,CAAA,YAAA,EAAA,WAAA,EAAA,UAAA,EAAP,aAAO,CAAP;AACD;;AAED,SAAO,CAAA,WAAA,EAAA,WAAA,EAAA,SAAA,EAAP,YAAO,CAAP;AACD;AAED;;;;;AAGA,SAAA,MAAA,CAAA,MAAA,EAAA,SAAA,EAAA,cAAA,EAAA,SAAA,EAAuG;AACrG,MAAIE,SAAS,IAAIC,MAAM,GAAvB,CAAA,EAA6B;AAC3B,WAAA,MAAA;AACD;;AAED,MAAMC,mBAAmB,GAAGD,MAAM,GAAlC,cAAA;AACA,SAAOC,mBAAmB,GAAnBA,SAAAA,IAAmCA,mBAAmB,GAA7D,SAAOA,CAAP;AACD;;AAED,SAAA,kBAAA,EAAA,MAAA,EAAA,MAAA,EAAA,YAAA,EAAA,MAAA","sourcesContent":["export interface VKUITouchEvent extends MouseEvent, TouchEvent {}\nexport type VKUITouchEventHander = (e: VKUITouchEvent) => void;\n\n/*\n * Получает координату по оси абсцисс из touch- или mouse-события\n */\nconst coordX = (e: VKUITouchEvent): number => {\n  if (e.clientX != null) {\n    return e.clientX;\n  }\n  return e.changedTouches && e.changedTouches[0].clientX;\n};\n\n/*\n * Получает координату по оси ординат из touch- или mouse-события\n */\nconst coordY = (e: VKUITouchEvent): number => {\n  if (e.clientY != null) {\n    return e.clientY;\n  }\n  return e.changedTouches && e.changedTouches[0].clientY;\n};\n\nconst isClient: boolean = typeof window !== 'undefined';\nconst touchEnabled: boolean = isClient && 'ontouchstart' in window;\n\n/*\n * Возвращает массив поддерживаемых событий\n * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.\n * Если нет, используем события мыши\n */\nfunction getSupportedEvents(): string[] {\n  if (touchEnabled) {\n    return ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n  }\n\n  return ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n}\n\n/*\n * Рассчитывает \"сопротивление\" для iOS тач-событий\n */\nfunction rubber(offset: number, dimension: number, resistanceRate: number, isAndroid: boolean): number {\n  if (isAndroid || offset < 0) {\n    return offset;\n  }\n\n  const offsettedResistance = offset * resistanceRate;\n  return offsettedResistance * dimension / (offsettedResistance + dimension);\n}\n\nexport { getSupportedEvents, coordX, coordY, touchEnabled, rubber };\n"]},"metadata":{},"sourceType":"module"}