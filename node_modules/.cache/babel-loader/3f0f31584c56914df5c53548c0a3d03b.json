{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { Component } from 'react';\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { withDOM } from \"../../lib/dom\";\n\nvar ActionSheetDropdownDesktop = /*#__PURE__*/function (_Component) {\n  _inherits(ActionSheetDropdownDesktop, _Component);\n\n  var _super = _createSuper(ActionSheetDropdownDesktop);\n\n  function ActionSheetDropdownDesktop() {\n    var _this;\n\n    _classCallCheck(this, ActionSheetDropdownDesktop);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      dropdownStyles: {\n        left: '0',\n        top: '0',\n        opacity: '0',\n        pointerEvents: 'none'\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      var _this$props = _this.props,\n          toggleRef = _this$props.toggleRef,\n          elementRef = _this$props.elementRef,\n          popupDirection = _this$props.popupDirection;\n      var toggleRect = toggleRef.getBoundingClientRect();\n      var elementRect = elementRef.current.getBoundingClientRect();\n      var left = toggleRect.left + toggleRect.width - elementRect.width + _this.window.pageXOffset;\n      var top;\n\n      if (popupDirection === 'top' || typeof popupDirection === 'function' && popupDirection(elementRef) === 'top') {\n        top = toggleRect.top - elementRect.height + _this.window.pageYOffset;\n      } else {\n        top = toggleRect.top + toggleRect.height + _this.window.pageYOffset;\n      }\n\n      _this.setState({\n        dropdownStyles: {\n          left: left,\n          top: top,\n          opacity: 1,\n          pointerEvents: 'auto'\n        }\n      });\n\n      setTimeout(function () {\n        _this.window.addEventListener('click', _this.handleClickOutside);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillUnmount\", function () {\n      _this.window.removeEventListener('click', _this.handleClickOutside);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickOutside\", function (e) {\n      var dropdownElement = _this.props.elementRef.current;\n\n      if (dropdownElement !== e.target && dropdownElement && !dropdownElement.contains(e.target)) {\n        _this.onClose();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClose\", function () {\n      _this.props.onClose();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopPropagation\", function (e) {\n      return e.stopPropagation();\n    });\n\n    return _this;\n  }\n\n  _createClass(ActionSheetDropdownDesktop, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          platform = _this$props2.platform,\n          elementRef = _this$props2.elementRef,\n          toggleRef = _this$props2.toggleRef,\n          closing = _this$props2.closing,\n          sizeY = _this$props2.sizeY,\n          window = _this$props2.window,\n          document = _this$props2.document,\n          popupDirection = _this$props2.popupDirection,\n          restProps = _objectWithoutProperties(_this$props2, [\"children\", \"platform\", \"elementRef\", \"toggleRef\", \"closing\", \"sizeY\", \"window\", \"document\", \"popupDirection\"]);\n\n      var baseClaseName = getClassName('ActionSheet', platform);\n      return createScopedElement(\"div\", _extends({}, restProps, {\n        ref: elementRef,\n        onClick: this.stopPropagation,\n        style: this.state.dropdownStyles,\n        vkuiClass: classNames(baseClaseName, 'ActionSheet--desktop', {\n          'ActionSheet--closing': this.props.closing\n        }, \"ActionSheet--sizeY-\".concat(sizeY))\n      }), children);\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.props.window;\n    }\n  }]);\n\n  return ActionSheetDropdownDesktop;\n}(Component);\n\nexport default withAdaptivity(withPlatform(withDOM(ActionSheetDropdownDesktop)), {\n  sizeY: true\n});","map":{"version":3,"sources":["../../../src/components/ActionSheet/ActionSheetDropdownDesktop.tsx"],"names":["ActionSheetDropdownDesktop","Component","dropdownStyles","left","top","opacity","pointerEvents","toggleRef","elementRef","popupDirection","toggleRect","elementRect","setTimeout","dropdownElement","e","children","platform","closing","sizeY","window","document","restProps","baseClaseName","getClassName","classNames","withAdaptivity","withPlatform","withDOM"],"mappings":"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","sourcesContent":["import { Component, CSSProperties, HTMLAttributes, MouseEventHandler, RefObject } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { HasPlatform } from '../../types';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport { DOMProps, withDOM } from '../../lib/dom';\nimport { ActionSheetProps } from './ActionSheet';\n\ninterface Props extends HTMLAttributes<HTMLDivElement>, HasPlatform, AdaptivityProps {\n  closing: boolean;\n  onClose(): void;\n  popupDirection?: ActionSheetProps['popupDirection'];\n  toggleRef: Element;\n  elementRef: RefObject<HTMLDivElement>;\n}\n\ninterface State {\n  dropdownStyles: CSSProperties;\n}\n\nclass ActionSheetDropdownDesktop extends Component<Props & DOMProps, State> {\n  state: State = {\n    dropdownStyles: {\n      left: '0',\n      top: '0',\n      opacity: '0',\n      pointerEvents: 'none',\n    },\n  };\n\n  get window(): Window {\n    return this.props.window;\n  }\n\n  componentDidMount = () => {\n    const { toggleRef, elementRef, popupDirection } = this.props;\n\n    const toggleRect = toggleRef.getBoundingClientRect();\n    const elementRect = elementRef.current.getBoundingClientRect();\n\n    let left = toggleRect.left + toggleRect.width - elementRect.width + this.window.pageXOffset;\n    let top: number;\n\n    if (popupDirection === 'top' || typeof popupDirection === 'function' && popupDirection(elementRef) === 'top') {\n      top = toggleRect.top - elementRect.height + this.window.pageYOffset;\n    } else {\n      top = toggleRect.top + toggleRect.height + this.window.pageYOffset;\n    }\n\n    this.setState({\n      dropdownStyles: {\n        left,\n        top,\n        opacity: 1,\n        pointerEvents: 'auto',\n      },\n    });\n\n    setTimeout(() => {\n      this.window.addEventListener('click', this.handleClickOutside);\n    });\n  };\n\n  componentWillUnmount = () => {\n    this.window.removeEventListener('click', this.handleClickOutside);\n  };\n\n  handleClickOutside = (e: MouseEvent) => {\n    const dropdownElement = this.props.elementRef.current;\n\n    if (dropdownElement !== e.target && dropdownElement && !dropdownElement.contains(e.target as Node)) {\n      this.onClose();\n    }\n  };\n\n  onClose = () => {\n    this.props.onClose();\n  };\n\n  stopPropagation: MouseEventHandler<HTMLDivElement> = (e) => e.stopPropagation();\n\n  render() {\n    const {\n      children,\n      platform,\n      elementRef,\n      toggleRef,\n      closing,\n      sizeY,\n      window,\n      document,\n      popupDirection,\n      ...restProps\n    } = this.props;\n    const baseClaseName = getClassName('ActionSheet', platform);\n\n    return (\n      <div\n        {...restProps}\n        ref={elementRef}\n        onClick={this.stopPropagation}\n        style={this.state.dropdownStyles}\n        vkuiClass={classNames(baseClaseName, 'ActionSheet--desktop', {\n          'ActionSheet--closing': this.props.closing,\n        }, `ActionSheet--sizeY-${sizeY}`)}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default withAdaptivity(withPlatform(withDOM<Props>(ActionSheetDropdownDesktop)), {\n  sizeY: true,\n});\n"]},"metadata":{},"sourceType":"module"}