{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport React, { Component } from 'react';\nimport PopoutWrapper from \"../PopoutWrapper/PopoutWrapper\";\nimport { transitionEvent } from \"../../lib/supportEvents\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { withAdaptivity, ViewWidth, ViewHeight } from \"../../hoc/withAdaptivity\";\nimport { ANDROID, IOS, VKCOM } from \"../../lib/platform\";\nimport ActionSheetDropdownDesktop from \"./ActionSheetDropdownDesktop\";\nimport ActionSheetDropdown from \"./ActionSheetDropdown\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { ActionSheetContext } from \"./ActionSheetContext\";\nimport Caption from \"../Typography/Caption/Caption\";\n\nvar ActionSheet = /*#__PURE__*/function (_Component) {\n  _inherits(ActionSheet, _Component);\n\n  var _super = _createSuper(ActionSheet);\n\n  function ActionSheet(props) {\n    var _this;\n\n    _classCallCheck(this, ActionSheet);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      closing: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"elRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"transitionFinishTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onClose\", function () {\n      _this.setState({\n        closing: true\n      });\n\n      _this.waitTransitionFinish(_this.props.onClose);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onItemClick\", function (action, autoclose) {\n      return function (event) {\n        event.persist();\n\n        if (autoclose) {\n          _this.setState({\n            closing: true\n          });\n\n          _this.waitTransitionFinish(function () {\n            _this.props.onClose();\n\n            action && action(event);\n          });\n        } else {\n          action && action(event);\n        }\n      };\n    });\n\n    _this.elRef = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(ActionSheet, [{\n    key: \"waitTransitionFinish\",\n    value: function waitTransitionFinish(eventHandler) {\n      if (this.isDesktop) {\n        return eventHandler();\n      }\n\n      if (transitionEvent.supported) {\n        this.elRef.current.removeEventListener(transitionEvent.name, eventHandler);\n        this.elRef.current.addEventListener(transitionEvent.name, eventHandler);\n      } else {\n        clearTimeout(this.transitionFinishTimeout);\n        this.transitionFinishTimeout = setTimeout(eventHandler, this.props.platform === ANDROID || this.props.platform === VKCOM ? 200 : 300);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          header = _this$props.header,\n          text = _this$props.text,\n          style = _this$props.style,\n          platform = _this$props.platform,\n          viewWidth = _this$props.viewWidth,\n          viewHeight = _this$props.viewHeight,\n          hasMouse = _this$props.hasMouse,\n          iosCloseItem = _this$props.iosCloseItem,\n          restProps = _objectWithoutProperties(_this$props, [\"children\", \"className\", \"header\", \"text\", \"style\", \"platform\", \"viewWidth\", \"viewHeight\", \"hasMouse\", \"iosCloseItem\"]);\n\n      var isDesktop = this.isDesktop;\n      var DropdownComponent = isDesktop ? ActionSheetDropdownDesktop : ActionSheetDropdown;\n      return createScopedElement(PopoutWrapper, {\n        closing: this.state.closing,\n        alignY: \"bottom\",\n        className: className,\n        style: style,\n        onClick: !isDesktop ? this.onClose : null,\n        hasMask: !isDesktop,\n        fixed: !isDesktop\n      }, createScopedElement(ActionSheetContext.Provider, {\n        value: {\n          onItemClick: this.onItemClick,\n          isDesktop: isDesktop\n        }\n      }, createScopedElement(DropdownComponent, _extends({\n        closing: this.state.closing,\n        onClose: this.onClose,\n        elementRef: this.elRef\n      }, restProps), (hasReactNode(header) || hasReactNode(text)) && createScopedElement(\"header\", {\n        vkuiClass: \"ActionSheet__header\"\n      }, hasReactNode(header) && createScopedElement(Caption, {\n        level: \"1\",\n        weight: platform === IOS ? 'semibold' : 'medium',\n        vkuiClass: \"ActionSheet__title\"\n      }, header), hasReactNode(text) && createScopedElement(Caption, {\n        level: \"1\",\n        weight: \"regular\",\n        vkuiClass: \"ActionSheet__text\"\n      }, text)), children, platform === IOS && !isDesktop && iosCloseItem)));\n    }\n  }, {\n    key: \"isDesktop\",\n    get: function get() {\n      var _this$props2 = this.props,\n          viewWidth = _this$props2.viewWidth,\n          viewHeight = _this$props2.viewHeight,\n          hasMouse = _this$props2.hasMouse;\n      return viewWidth >= ViewWidth.SMALL_TABLET && (hasMouse || viewHeight >= ViewHeight.MEDIUM);\n    }\n  }]);\n\n  return ActionSheet;\n}(Component);\n\n_defineProperty(ActionSheet, \"defaultProps\", {\n  popupDirection: 'bottom'\n});\n\nexport default withAdaptivity(withPlatform(ActionSheet), {\n  viewWidth: true,\n  viewHeight: true,\n  hasMouse: true\n});","map":{"version":3,"sources":["../../../src/components/ActionSheet/ActionSheet.tsx"],"names":["ActionSheet","Component","React","closing","popupDirection","event","action","viewWidth","viewHeight","hasMouse","ViewWidth","ViewHeight","eventHandler","transitionEvent","clearTimeout","setTimeout","children","className","header","text","style","platform","iosCloseItem","restProps","isDesktop","DropdownComponent","onItemClick","elRef","hasReactNode","withAdaptivity","withPlatform"],"mappings":"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","sourcesContent":["import React, { Component, HTMLAttributes } from 'react';\nimport PopoutWrapper from '../PopoutWrapper/PopoutWrapper';\nimport { transitionEvent } from '../../lib/supportEvents';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { withAdaptivity, AdaptivityProps, ViewWidth, ViewHeight } from '../../hoc/withAdaptivity';\nimport { HasPlatform } from '../../types';\nimport { ANDROID, IOS, VKCOM } from '../../lib/platform';\nimport ActionSheetDropdownDesktop from './ActionSheetDropdownDesktop';\nimport ActionSheetDropdown from './ActionSheetDropdown';\nimport { hasReactNode } from '../../lib/utils';\nimport { ActionSheetContext, ItemClickHandler } from './ActionSheetContext';\nimport Caption from '../Typography/Caption/Caption';\n\nexport type PopupDirectionFunction = (elRef: React.RefObject<HTMLDivElement>) => 'top' | 'bottom';\n\nexport interface ActionSheetProps extends HTMLAttributes<HTMLDivElement>, HasPlatform, AdaptivityProps {\n  header?: React.ReactNode;\n  text?: React.ReactNode;\n  onClose?: VoidFunction;\n  /**\n   * Desktop only\n   */\n  toggleRef: Element;\n  /**\n   * Desktop only\n   */\n  popupDirection?: 'top' | 'bottom' | PopupDirectionFunction;\n  /**\n   * iOS only\n   */\n  iosCloseItem: React.ReactNode;\n}\n\nexport interface ActionSheetState {\n  closing: boolean;\n}\n\nexport type CloseCallback = () => void;\n\nexport type AnimationEndCallback = (e?: AnimationEvent) => void;\n\nclass ActionSheet extends Component<ActionSheetProps, ActionSheetState> {\n  constructor(props: ActionSheetProps) {\n    super(props);\n    this.elRef = React.createRef();\n  }\n\n  state: ActionSheetState = {\n    closing: false,\n  };\n\n  elRef: React.RefObject<HTMLDivElement>;\n\n  private transitionFinishTimeout: ReturnType<typeof setTimeout>;\n\n  static defaultProps: Partial<ActionSheetProps> = {\n    popupDirection: 'bottom',\n  };\n\n  onClose: CloseCallback = () => {\n    this.setState({ closing: true });\n    this.waitTransitionFinish(this.props.onClose);\n  };\n\n  onItemClick: ItemClickHandler = (action, autoclose) => (event) => {\n    event.persist();\n\n    if (autoclose) {\n      this.setState({ closing: true });\n      this.waitTransitionFinish(() => {\n        this.props.onClose();\n        action && action(event);\n      });\n    } else {\n      action && action(event);\n    }\n  };\n\n  get isDesktop() {\n    const { viewWidth, viewHeight, hasMouse } = this.props;\n    return viewWidth >= ViewWidth.SMALL_TABLET && (hasMouse || viewHeight >= ViewHeight.MEDIUM);\n  }\n\n  waitTransitionFinish(eventHandler: AnimationEndCallback) {\n    if (this.isDesktop) {\n      return eventHandler();\n    }\n\n    if (transitionEvent.supported) {\n      this.elRef.current.removeEventListener(transitionEvent.name, eventHandler);\n      this.elRef.current.addEventListener(transitionEvent.name, eventHandler);\n    } else {\n      clearTimeout(this.transitionFinishTimeout);\n      this.transitionFinishTimeout = setTimeout(eventHandler, this.props.platform === ANDROID || this.props.platform === VKCOM ? 200 : 300);\n    }\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      header,\n      text,\n      style,\n      platform,\n      viewWidth,\n      viewHeight,\n      hasMouse,\n      iosCloseItem,\n      ...restProps\n    } = this.props;\n\n    const isDesktop = this.isDesktop;\n\n    const DropdownComponent = isDesktop\n      ? ActionSheetDropdownDesktop\n      : ActionSheetDropdown;\n\n    return (\n      <PopoutWrapper\n        closing={this.state.closing}\n        alignY=\"bottom\"\n        className={className}\n        style={style}\n        onClick={!isDesktop ? this.onClose : null}\n        hasMask={!isDesktop}\n        fixed={!isDesktop}\n      >\n        <ActionSheetContext.Provider\n          value={{\n            onItemClick: this.onItemClick,\n            isDesktop,\n          }}\n        >\n          <DropdownComponent\n            closing={this.state.closing}\n            onClose={this.onClose}\n            elementRef={this.elRef}\n            {...restProps}\n          >\n            {(hasReactNode(header) || hasReactNode(text)) &&\n              <header vkuiClass=\"ActionSheet__header\">\n                {hasReactNode(header) &&\n                  <Caption level=\"1\" weight={platform === IOS ? 'semibold' : 'medium'} vkuiClass=\"ActionSheet__title\">\n                    {header}\n                  </Caption>\n                }\n                {hasReactNode(text) && <Caption level=\"1\" weight=\"regular\" vkuiClass=\"ActionSheet__text\">{text}</Caption>}\n              </header>\n            }\n            {children}\n            {platform === IOS && !isDesktop && iosCloseItem}\n          </DropdownComponent>\n        </ActionSheetContext.Provider>\n      </PopoutWrapper>\n    );\n  }\n}\n\nexport default withAdaptivity(withPlatform(ActionSheet), {\n  viewWidth: true,\n  viewHeight: true,\n  hasMouse: true,\n});\n"]},"metadata":{},"sourceType":"module"}