{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { memo } from 'react';\nimport { classNames } from \"../../lib/classNames\";\nimport FormField from \"../FormField/FormField\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { useEnsuredControl } from \"../../hooks/useEnsuredControl\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nvar Textarea = /*#__PURE__*/memo(function (_ref) {\n  var defaultValue = _ref.defaultValue,\n      grow = _ref.grow,\n      style = _ref.style,\n      onResize = _ref.onResize,\n      className = _ref.className,\n      getRootRef = _ref.getRootRef,\n      getRef = _ref.getRef,\n      sizeY = _ref.sizeY,\n      restProps = _objectWithoutProperties(_ref, [\"defaultValue\", \"grow\", \"style\", \"onResize\", \"className\", \"getRootRef\", \"getRef\", \"sizeY\"]);\n\n  var _useEnsuredControl = useEnsuredControl(restProps, {\n    defaultValue: defaultValue\n  }),\n      _useEnsuredControl2 = _slicedToArray(_useEnsuredControl, 2),\n      value = _useEnsuredControl2[0],\n      onChange = _useEnsuredControl2[1];\n\n  var elementRef = useExternRef(getRef);\n  var platform = usePlatform(); // autosize input\n\n  useIsomorphicLayoutEffect(function () {\n    var el = elementRef.current;\n\n    if (grow) {\n      el.style.height = null;\n      el.style.height = \"\".concat(el.scrollHeight, \"px\"); // TODO: call only when height changed?\n\n      onResize && onResize(el);\n    }\n  }, [grow, value]);\n  return createScopedElement(FormField, {\n    vkuiClass: classNames(getClassName('Textarea', platform), \"Textarea--sizeY-\".concat(sizeY)),\n    className: className,\n    style: style,\n    getRootRef: getRootRef,\n    disabled: restProps.disabled\n  }, createScopedElement(\"textarea\", _extends({}, restProps, {\n    vkuiClass: \"Textarea__el\",\n    value: value,\n    onChange: onChange,\n    ref: elementRef\n  })));\n});\nTextarea.defaultProps = {\n  defaultValue: '',\n  grow: true\n};\nexport default withAdaptivity(Textarea, {\n  sizeY: true\n});","map":{"version":3,"sources":["../../../src/components/Textarea/Textarea.tsx"],"names":["Textarea","memo","defaultValue","grow","style","onResize","className","getRootRef","getRef","sizeY","restProps","value","onChange","useEnsuredControl","elementRef","useExternRef","platform","usePlatform","useIsomorphicLayoutEffect","el","classNames","getClassName","disabled","withAdaptivity"],"mappings":";;;;AAAA,SAAA,IAAA,QAAA,OAAA;AACA,SAAA,UAAA,QAAA,sBAAA;AACA,OAAA,SAAA,MAAA,wBAAA;AAEA,SAAA,cAAA,QAAA,0BAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,iBAAA,QAAA,+BAAA;AACA,SAAA,YAAA,QAAA,0BAAA;AACA,SAAA,WAAA,QAAA,yBAAA;AACA,SAAA,yBAAA,QAAA,qCAAA;AAYA,IAAMA,QAA2B,GAAA,aAAGC,IAAI,CAAC,UAAA,IAAA,EAUnC;AAAA,MATJC,YASI,GAAA,IAAA,CATJA,YASI;AAAA,MARJC,IAQI,GAAA,IAAA,CARJA,IAQI;AAAA,MAPJC,KAOI,GAAA,IAAA,CAPJA,KAOI;AAAA,MANJC,QAMI,GAAA,IAAA,CANJA,QAMI;AAAA,MALJC,SAKI,GAAA,IAAA,CALJA,SAKI;AAAA,MAJJC,UAII,GAAA,IAAA,CAJJA,UAII;AAAA,MAHJC,MAGI,GAAA,IAAA,CAHJA,MAGI;AAAA,MAFJC,KAEI,GAAA,IAAA,CAFJA,KAEI;AAAA,MADDC,SACC,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,cAAA,EAAA,MAAA,EAAA,OAAA,EAAA,UAAA,EAAA,WAAA,EAAA,YAAA,EAAA,QAAA,EAAA,OAAA,CAAA,CAAA;;AAAA,MAAA,kBAAA,GACsBG,iBAAiB,CAAA,SAAA,EAAY;AAAEX,IAAAA,YAAY,EAAZA;AAAF,GAAZ,CADvC;AAAA,MAAA,mBAAA,GAAA,cAAA,CAAA,kBAAA,EAAA,CAAA,CAAA;AAAA,MACGS,KADH,GAAA,mBAAA,CAAA,CAAA,CAAA;AAAA,MACUC,QADV,GAAA,mBAAA,CAAA,CAAA,CAAA;;AAEJ,MAAME,UAAU,GAAGC,YAAY,CAA/B,MAA+B,CAA/B;AACA,MAAMC,QAAQ,GAAGC,WAHb,EAGJ,CAHI,CAKJ;;AACAC,EAAAA,yBAAyB,CAAC,YAAM;AAC9B,QAAMC,EAAE,GAAGL,UAAU,CAArB,OAAA;;AACA,QAAA,IAAA,EAAU;AACRK,MAAAA,EAAE,CAAFA,KAAAA,CAAAA,MAAAA,GAAAA,IAAAA;AACAA,MAAAA,EAAE,CAAFA,KAAAA,CAAAA,MAAAA,GAAAA,GAAAA,MAAAA,CAAqBA,EAAE,CAAvBA,YAAAA,EAFQ,IAERA,CAAAA,CAFQ,CAGR;;AACAd,MAAAA,QAAQ,IAAIA,QAAQ,CAApBA,EAAoB,CAApBA;AACD;AAPsB,GAAA,EAQtB,CAAA,IAAA,EARHa,KAQG,CARsB,CAAzBA;AAUA,SACE,mBAAA,CAAA,SAAA,EAAA;AACE,IAAA,SAAS,EAAEE,UAAU,CAACC,YAAY,CAAA,UAAA,EAAb,QAAa,CAAb,EAAA,mBAAA,MAAA,CADvB,KACuB,CAAA,CADvB;AAEE,IAAA,SAAS,EAFX,SAAA;AAGE,IAAA,KAAK,EAHP,KAAA;AAIE,IAAA,UAAU,EAJZ,UAAA;AAKE,IAAA,QAAQ,EAAEX,SAAS,CAACY;AALtB,GAAA,EAOE,mBAAA,CAAA,UAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,SAAS,EAFX,cAAA;AAGE,IAAA,KAAK,EAHP,KAAA;AAIE,IAAA,QAAQ,EAJV,QAAA;AAKE,IAAA,GAAG,EAAER;AALP,GAAA,CAAA,CAPF,CADF;AA1BF,CAAwC,CAAxC;AA6CAd,QAAQ,CAARA,YAAAA,GAAwB;AACtBE,EAAAA,YAAY,EADU,EAAA;AAEtBC,EAAAA,IAAI,EAAE;AAFgB,CAAxBH;AAKA,eAAeuB,cAAc,CAAA,QAAA,EAAW;AAAEd,EAAAA,KAAK,EAAE;AAAT,CAAX,CAA7B","sourcesContent":["import { TextareaHTMLAttributes, FC, memo } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport FormField from '../FormField/FormField';\nimport { HasRef, HasRootRef } from '../../types';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport { getClassName } from '../../helpers/getClassName';\nimport { useEnsuredControl } from '../../hooks/useEnsuredControl';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\n\nexport interface TextareaProps extends\n  TextareaHTMLAttributes<HTMLTextAreaElement>,\n  HasRef<HTMLTextAreaElement>,\n  HasRootRef<HTMLElement>,\n  AdaptivityProps {\n  grow?: boolean;\n  onResize?(el: HTMLTextAreaElement): void;\n  defaultValue?: string;\n}\n\nconst Textarea: FC<TextareaProps> = memo(({\n  defaultValue,\n  grow,\n  style,\n  onResize,\n  className,\n  getRootRef,\n  getRef,\n  sizeY,\n  ...restProps\n}) => {\n  const [value, onChange] = useEnsuredControl(restProps, { defaultValue });\n  const elementRef = useExternRef(getRef);\n  const platform = usePlatform();\n\n  // autosize input\n  useIsomorphicLayoutEffect(() => {\n    const el = elementRef.current;\n    if (grow) {\n      el.style.height = null;\n      el.style.height = `${el.scrollHeight}px`;\n      // TODO: call only when height changed?\n      onResize && onResize(el);\n    }\n  }, [grow, value]);\n\n  return (\n    <FormField\n      vkuiClass={classNames(getClassName('Textarea', platform), `Textarea--sizeY-${sizeY}`)}\n      className={className}\n      style={style}\n      getRootRef={getRootRef}\n      disabled={restProps.disabled}\n    >\n      <textarea\n        {...restProps}\n        vkuiClass=\"Textarea__el\"\n        value={value}\n        onChange={onChange}\n        ref={elementRef}\n      />\n    </FormField>\n  );\n});\n\nTextarea.defaultProps = {\n  defaultValue: '',\n  grow: true,\n};\n\nexport default withAdaptivity(Textarea, { sizeY: true });\n"]},"metadata":{},"sourceType":"module"}