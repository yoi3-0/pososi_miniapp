{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { Icon24Send, Icon28AddCircleOutline, Icon28AttachOutline, Icon28CheckCircleOutline, Icon48WritebarDone, Icon48WritebarSend } from '@vkontakte/icons';\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { IOS } from \"../../lib/platform\";\nimport Caption from \"../Typography/Caption/Caption\";\nexport var WriteBarIcon = function WriteBarIcon(props) {\n  var _classNames;\n\n  var platform = usePlatform();\n\n  var mode = props.mode,\n      children = props.children,\n      count = props.count,\n      restProps = _objectWithoutProperties(props, [\"mode\", \"children\", \"count\"]);\n\n  var icon;\n\n  switch (mode) {\n    case 'attach':\n      icon = platform === IOS ? createScopedElement(Icon28AddCircleOutline, null) : createScopedElement(Icon28AttachOutline, null);\n      break;\n\n    case 'send':\n      icon = platform === IOS ? createScopedElement(Icon48WritebarSend, null) : createScopedElement(Icon24Send, null);\n      break;\n\n    case 'done':\n      icon = platform === IOS ? createScopedElement(Icon48WritebarDone, null) : createScopedElement(Icon28CheckCircleOutline, null);\n      break;\n\n    default:\n      break;\n  }\n\n  return createScopedElement(\"button\", _extends({\n    type: \"button\"\n  }, restProps, {\n    vkuiClass: classNames(getClassName('WriteBarIcon', platform), (_classNames = {}, _defineProperty(_classNames, \"WriteBarIcon--\".concat(mode), !!mode), _defineProperty(_classNames, 'WriteBarIcon--disabled', restProps.disabled), _classNames))\n  }), icon || children, count && createScopedElement(Caption, {\n    vkuiClass: \"WriteBarIcon__count\",\n    weight: \"regular\",\n    level: \"2\"\n  }, count));\n};","map":{"version":3,"sources":["../../../src/components/WriteBarIcon/WriteBarIcon.tsx"],"names":["WriteBarIcon","platform","usePlatform","mode","children","count","restProps","props","icon","classNames","getClassName"],"mappings":";;;;AACA,SAAA,UAAA,EAAA,sBAAA,EAAA,mBAAA,EAAA,wBAAA,EAAA,kBAAA,EAAA,kBAAA,QAAA,kBAAA;AAQA,SAAA,WAAA,QAAA,yBAAA;AACA,SAAA,UAAA,QAAA,sBAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,GAAA,QAAA,oBAAA;AACA,OAAA,OAAA,MAAA,+BAAA;AAmBA,OAAO,IAAMA,YAAmC,GAAG,SAAtCA,YAAsC,CAAA,KAAA,EAA8B;AAAA,MAAA,WAAA;;AAC/E,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;;AAD+E,MAG7EC,IAH6E,GAO3EI,KAP2E,CAAA,IAAA;AAAA,MAI7EH,QAJ6E,GAO3EG,KAP2E,CAAA,QAAA;AAAA,MAK7EF,KAL6E,GAO3EE,KAP2E,CAAA,KAAA;AAAA,MAM1ED,SAN0E,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,OAAA,CAAA,CAAA;;AAS/E,MAAA,IAAA;;AAEA,UAAA,IAAA;AACE,SAAA,QAAA;AACEE,MAAAA,IAAI,GAAGP,QAAQ,KAARA,GAAAA,GAAmB,mBAAA,CAAA,sBAAA,EAAnBA,IAAmB,CAAnBA,GAAgD,mBAAA,CAAA,mBAAA,EAAvDO,IAAuD,CAAvDA;AACA;;AAEF,SAAA,MAAA;AACEA,MAAAA,IAAI,GAAGP,QAAQ,KAARA,GAAAA,GAAmB,mBAAA,CAAA,kBAAA,EAAnBA,IAAmB,CAAnBA,GAA4C,mBAAA,CAAA,UAAA,EAAnDO,IAAmD,CAAnDA;AACA;;AAEF,SAAA,MAAA;AACEA,MAAAA,IAAI,GAAGP,QAAQ,KAARA,GAAAA,GAAmB,mBAAA,CAAA,kBAAA,EAAnBA,IAAmB,CAAnBA,GAA4C,mBAAA,CAAA,wBAAA,EAAnDO,IAAmD,CAAnDA;AACA;;AAEF;AACE;AAdJ;;AAiBA,SACE,mBAAA,CAAA,QAAA,EAAA,QAAA,CAAA;AACE,IAAA,IAAI,EAAC;AADP,GAAA,EAAA,SAAA,EAAA;AAGE,IAAA,SAAS,EAAEC,UAAU,CAACC,YAAY,CAAA,cAAA,EAAb,QAAa,CAAb,GAAA,WAAA,GAAA,EAAA,EAAA,eAAA,CAAA,WAAA,EAAA,iBAAA,MAAA,CAAA,IAAA,CAAA,EACQ,CAAC,CADT,IAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,wBAAA,EAEOJ,SAAS,CAFhB,QAAA,CAAA,EAAA,WAAA;AAHvB,GAAA,CAAA,EAQGE,IAAI,IARP,QAAA,EASGH,KAAK,IAAI,mBAAA,CAAA,OAAA,EAAA;AAAS,IAAA,SAAS,EAAlB,qBAAA;AAAyC,IAAA,MAAM,EAA/C,SAAA;AAA0D,IAAA,KAAK,EAAC;AAAhE,GAAA,EAVd,KAUc,CATZ,CADF;AA5BK,CAAA","sourcesContent":["import { ButtonHTMLAttributes, FC, ReactNode } from 'react';\nimport {\n  Icon24Send,\n  Icon28AddCircleOutline,\n  Icon28AttachOutline,\n  Icon28CheckCircleOutline,\n  Icon48WritebarDone,\n  Icon48WritebarSend,\n} from '@vkontakte/icons';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { IOS } from '../../lib/platform';\nimport Caption from '../Typography/Caption/Caption';\n\nexport interface WriteBarIconProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * Предустановленные типы кнопок в WriteBar для отрисовки иконки в зависимости от платформы.\n   * Если передать валидное значение для этого свойства, `children` игнорируется.\n   *\n   * - `attach` – иконка прикрепления.\n   * - `send` – иконка отправки.\n   * - `done` – иконка отправки в режиме редактирования.\n   */\n  mode?: 'attach' | 'send' | 'done';\n  /**\n   * Значение счётчика для кнопки. Например, для количества прикреплённых файлов.\n   */\n  count?: number;\n  'aria-label'?: string;\n}\n\nexport const WriteBarIcon: FC<WriteBarIconProps> = (props: WriteBarIconProps) => {\n  const platform = usePlatform();\n  const {\n    mode,\n    children,\n    count,\n    ...restProps\n  } = props;\n\n  let icon: ReactNode;\n\n  switch (mode) {\n    case 'attach':\n      icon = platform === IOS ? <Icon28AddCircleOutline /> : <Icon28AttachOutline />;\n      break;\n\n    case 'send':\n      icon = platform === IOS ? <Icon48WritebarSend /> : <Icon24Send />;\n      break;\n\n    case 'done':\n      icon = platform === IOS ? <Icon48WritebarDone /> : <Icon28CheckCircleOutline />;\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <button\n      type=\"button\"\n      {...restProps}\n      vkuiClass={classNames(getClassName('WriteBarIcon', platform), {\n        [`WriteBarIcon--${mode}`]: !!mode,\n        'WriteBarIcon--disabled': restProps.disabled,\n      })}\n    >\n      {icon || children}\n      {count && <Caption vkuiClass=\"WriteBarIcon__count\" weight=\"regular\" level=\"2\">{count}</Caption>}\n    </button>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}