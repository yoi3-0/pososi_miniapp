{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 48 48';\nvar id = 'linked_48';\nvar content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\" id=\"linked_48\"><path d=\"M29.712 18.288a9.633 9.633 0 010 13.624l-7.266 7.266c-3.763 3.762-9.862 3.762-13.624 0-3.763-3.762-3.763-9.862 0-13.624l.3-.3a1.927 1.927 0 012.725 2.725l-.3.3a5.78 5.78 0 008.174 8.175l7.266-7.267a5.78 5.78 0 000-8.174 1.927 1.927 0 012.725-2.725zm9.466-9.466c3.762 3.762 3.762 9.861 0 13.624l-.435.435a1.927 1.927 0 11-2.725-2.725l.436-.435a5.78 5.78 0 10-8.175-8.175l-7.266 7.267a5.78 5.78 0 000 8.174 1.927 1.927 0 01-2.725 2.725 9.633 9.633 0 010-13.624l7.266-7.266c3.762-3.763 9.862-3.763 13.624 0z\" fill=\"currentColor\" /></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon48Linked = function Icon48Linked(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 48,\n    height: !isNaN(props.height) ? +props.height : 48\n  }));\n};\n\nIcon48Linked.mountIcon = mountIcon;\nexport default Icon48Linked;","map":{"version":3,"sources":["../../../tmp/48/linked.ts"],"names":["viewBox","id","content","isMounted","addSpriteSymbol","Icon48Linked","useIsomorphicLayoutEffect","mountIcon","assign","width","isNaN","props","height"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA,C,CACA;;AACA,OAAA,aAAA,MAAA,kCAAA,C,CACA;;AACA,SAAA,MAAA,QAAA,mBAAA;AACA,SAAA,eAAA,EAAA,yBAAA,QAAA,WAAA;AACA,SAAA,OAAA,QAAA,YAAA;AAEA,IAAMA,OAAO,GAAb,WAAA;AACA,IAAMC,EAAE,GAAR,WAAA;AACA,IAAMC,OAAO,GAAb,8nBAAA;AAEA,IAAIC,SAAS,GAAb,KAAA;;AACA,SAAA,SAAA,GAAqB;AACnB,MAAI,CAAJ,SAAA,EAAgB;AACdC,IAAAA,eAAe,CAAC,IAAA,aAAA,CAAkB;AAChCH,MAAAA,EAAE,EAD8B,EAAA;AAEhCD,MAAAA,OAAO,EAFyB,OAAA;AAGhCE,MAAAA,OAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfE;AAMAD,IAAAA,SAAS,GAATA,IAAAA;AACD;AACF;;AASD,IAAME,YAAmC,GAAG,SAAtCA,YAAsC,CAAA,KAAA,EAAW;AACrDC,EAAAA,yBAAyB,CAAC,YAAM;AAC9BC,IAAAA,SAAS;AADc,GAAA,EAAzBD,EAAyB,CAAzBA;AAIA,SAAA,aAAO,KAAK,CAAL,aAAA,CAAA,OAAA,EAA6BE,MAAM,CAAA,EAAA,EAAA,KAAA,EAAY;AACpDR,IAAAA,OAAO,EAD6C,OAAA;AAEpDC,IAAAA,EAAE,EAFkD,EAAA;AAGpDQ,IAAAA,KAAK,EAAE,CAACC,KAAK,CAACC,KAAK,CAAZ,KAAM,CAAN,GAAsB,CAACA,KAAK,CAA5B,KAAA,GAH6C,EAAA;AAIpDC,IAAAA,MAAM,EAAE,CAACF,KAAK,CAACC,KAAK,CAAZ,MAAM,CAAN,GAAuB,CAACA,KAAK,CAA7B,MAAA,GAAuC;AAJK,GAAZ,CAAnC,CAAP;AALF,CAAA;;AAaCN,YAAD,CAAA,SAACA,GAAD,SAACA;AAED,eAAA,YAAA","sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 48 48';\nconst id = 'linked_48';\nconst content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\" id=\"linked_48\"><path d=\"M29.712 18.288a9.633 9.633 0 010 13.624l-7.266 7.266c-3.763 3.762-9.862 3.762-13.624 0-3.763-3.762-3.763-9.862 0-13.624l.3-.3a1.927 1.927 0 012.725 2.725l-.3.3a5.78 5.78 0 008.174 8.175l7.266-7.267a5.78 5.78 0 000-8.174 1.927 1.927 0 012.725-2.725zm9.466-9.466c3.762 3.762 3.762 9.861 0 13.624l-.435.435a1.927 1.927 0 11-2.725-2.725l.436-.435a5.78 5.78 0 10-8.175-8.175l-7.266 7.267a5.78 5.78 0 000 8.174 1.927 1.927 0 01-2.725 2.725 9.633 9.633 0 010-13.624l7.266-7.266c3.762-3.763 9.862-3.763 13.624 0z\" fill=\"currentColor\" /></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon48LinkedProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon48Linked: FC<Icon48LinkedProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 48,\n    height: !isNaN(props.height) ? +props.height : 48,\n  }));\n};\n\n(Icon48Linked as any).mountIcon = mountIcon;\n\nexport default Icon48Linked;\n"]},"metadata":{},"sourceType":"module"}