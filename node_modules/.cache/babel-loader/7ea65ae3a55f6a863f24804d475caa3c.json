{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { useMemo, useState } from 'react';\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { ListContext } from \"./ListContext\";\n\nvar List = function List(_ref) {\n  var children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var platform = usePlatform();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDragging = _useState2[0],\n      toggleDrag = _useState2[1];\n\n  return createScopedElement(\"div\", _extends({\n    role: \"list\"\n  }, restProps, {\n    vkuiClass: classNames(getClassName('List', platform), {\n      'List--dragging': isDragging\n    })\n  }), createScopedElement(ListContext.Provider, {\n    value: useMemo(function () {\n      return {\n        toggleDrag: toggleDrag\n      };\n    }, [])\n  }, children));\n};\n\nexport default List;","map":{"version":3,"sources":["../../../src/components/List/List.tsx"],"names":["List","children","restProps","platform","usePlatform","isDragging","toggleDrag","useState","classNames","getClassName","useMemo"],"mappings":";;;;AAAA,SAAA,OAAA,EAAA,QAAA,QAAA,OAAA;AACA,SAAA,UAAA,QAAA,sBAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,WAAA,QAAA,yBAAA;AACA,SAAA,WAAA,QAAA,eAAA;;AAEA,IAAMA,IAAuD,GAAG,SAA1DA,IAA0D,CAAA,IAAA,EAG1B;AAAA,MAFpCC,QAEoC,GAAA,IAAA,CAFpCA,QAEoC;AAAA,MADjCC,SACiC,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA;;AACpC,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;;AADoC,MAAA,SAAA,GAEHG,QAAQ,CAFL,KAEK,CAFL;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MAE7BF,UAF6B,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAEjBC,UAFiB,GAAA,UAAA,CAAA,CAAA,CAAA;;AAIpC,SACE,mBAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AACE,IAAA,IAAI,EAAC;AADP,GAAA,EAAA,SAAA,EAAA;AAGE,IAAA,SAAS,EAAEE,UAAU,CAACC,YAAY,CAAA,MAAA,EAAb,QAAa,CAAb,EAAiC;AACpD,wBAAkBJ;AADkC,KAAjC;AAHvB,GAAA,CAAA,EAOE,mBAAA,CAAC,WAAD,CAAA,QAAA,EAAA;AAAsB,IAAA,KAAK,EAAEK,OAAO,CAAC,YAAA;AAAA,aAAO;AAAEJ,QAAAA,UAAU,EAAVA;AAAF,OAAP;AAAD,KAAA,EAAA,EAAA;AAApC,GAAA,EARJ,QAQI,CAPF,CADF;AAPF,CAAA;;AAsBA,eAAA,IAAA","sourcesContent":["import { FunctionComponent, HTMLAttributes, useMemo, useState } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { ListContext } from './ListContext';\n\nconst List: FunctionComponent<HTMLAttributes<HTMLDivElement>> = ({\n  children,\n  ...restProps\n}: HTMLAttributes<HTMLDivElement>) => {\n  const platform = usePlatform();\n  const [isDragging, toggleDrag] = useState(false);\n\n  return (\n    <div\n      role=\"list\"\n      {...restProps}\n      vkuiClass={classNames(getClassName('List', platform), {\n        'List--dragging': isDragging,\n      })}\n    >\n      <ListContext.Provider value={useMemo(() => ({ toggleDrag }), [])}>\n        {children}\n      </ListContext.Provider>\n    </div>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}