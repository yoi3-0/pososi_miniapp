{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport React from 'react';\nimport { classNames } from \"../../lib/classNames\";\n\nfunction calcStrokeDashOffset(value, radius) {\n  var progress = value / 100;\n  return 2 * Math.PI * radius * (1 - progress);\n}\n\nvar PullToRefreshSpinner = function PullToRefreshSpinner(_ref) {\n  var on = _ref.on,\n      progress = _ref.progress,\n      size = _ref.size,\n      strokeWidth = _ref.strokeWidth,\n      style = _ref.style,\n      restProps = _objectWithoutProperties(_ref, [\"on\", \"progress\", \"size\", \"strokeWidth\", \"style\"]);\n\n  var radius = 0.5 * size - 0.5 * strokeWidth;\n  var dasharray = 2 * Math.PI * radius;\n  var circleCenter = 0.5 * size;\n  var dashoffset = calcStrokeDashOffset(on ? 80 : progress, radius);\n  return createScopedElement(\"div\", {\n    vkuiClass: classNames('PullToRefresh__spinner', {\n      'PullToRefresh__spinner--on': on\n    }),\n    style: style,\n    \"aria-label\": on ? restProps['aria-label'] : undefined\n  }, createScopedElement(\"svg\", {\n    role: \"presentation\",\n    vkuiClass: \"PullToRefresh__spinner-self\",\n    style: {\n      width: size,\n      height: size\n    },\n    viewBox: \"0 0 \".concat(size, \" \").concat(size),\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, createScopedElement(\"g\", {\n    style: {\n      width: size,\n      height: size,\n      transformOrigin: \"\".concat(circleCenter, \"px \").concat(circleCenter, \"px\")\n    }\n  }, createScopedElement(\"circle\", {\n    vkuiClass: \"PullToRefresh__spinner-path\",\n    fill: \"none\",\n    strokeDasharray: dasharray,\n    strokeDashoffset: dashoffset,\n    strokeWidth: strokeWidth,\n    strokeLinecap: \"round\",\n    cx: circleCenter,\n    cy: circleCenter,\n    r: radius\n  }))));\n};\n\nPullToRefreshSpinner.defaultProps = {\n  'size': 24,\n  'strokeWidth': 2.5,\n  'on': true,\n  'progress': null,\n  'aria-label': 'Пожалуйста, подождите...'\n};\nexport default /*#__PURE__*/React.memo(PullToRefreshSpinner);","map":{"version":3,"sources":["../../../src/components/PullToRefresh/PullToRefreshSpinner.tsx"],"names":["progress","value","Math","PullToRefreshSpinner","on","size","strokeWidth","style","restProps","radius","dasharray","circleCenter","dashoffset","calcStrokeDashOffset","classNames","undefined","width","height","transformOrigin","React"],"mappings":";;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,UAAA,QAAA,sBAAA;;AAEA,SAAA,oBAAA,CAAA,KAAA,EAAA,MAAA,EAA6D;AAC3D,MAAMA,QAAQ,GAAGC,KAAK,GAAtB,GAAA;AACA,SAAO,IAAIC,IAAI,CAAR,EAAA,GAAA,MAAA,IAAwB,IAA/B,QAAO,CAAP;AACD;;AAUD,IAAMC,oBAAkE,GAAG,SAArEA,oBAAqE,CAAA,IAAA,EAO1C;AAAA,MAN/BC,EAM+B,GAAA,IAAA,CAN/BA,EAM+B;AAAA,MAL/BJ,QAK+B,GAAA,IAAA,CAL/BA,QAK+B;AAAA,MAJ/BK,IAI+B,GAAA,IAAA,CAJ/BA,IAI+B;AAAA,MAH/BC,WAG+B,GAAA,IAAA,CAH/BA,WAG+B;AAAA,MAF/BC,KAE+B,GAAA,IAAA,CAF/BA,KAE+B;AAAA,MAD5BC,SAC4B,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,IAAA,EAAA,UAAA,EAAA,MAAA,EAAA,aAAA,EAAA,OAAA,CAAA,CAAA;;AAC/B,MAAMC,MAAM,GAAG,MAAA,IAAA,GAAa,MAA5B,WAAA;AACA,MAAMC,SAAS,GAAG,IAAIR,IAAI,CAAR,EAAA,GAAlB,MAAA;AACA,MAAMS,YAAY,GAAG,MAArB,IAAA;AAEA,MAAMC,UAAU,GAAGC,oBAAoB,CAACT,EAAE,GAAA,EAAA,GAAH,QAAA,EAAvC,MAAuC,CAAvC;AAEA,SACE,mBAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAEU,UAAU,CAAA,wBAAA,EAA2B;AAC9C,oCAA8BV;AADgB,KAA3B,CADvB;AAIE,IAAA,KAAK,EAJP,KAAA;AAKE,kBAAYA,EAAE,GAAGI,SAAS,CAAZ,YAAY,CAAZ,GAA6BO;AAL7C,GAAA,EAOE,mBAAA,CAAA,KAAA,EAAA;AACE,IAAA,IAAI,EADN,cAAA;AAEE,IAAA,SAAS,EAFX,6BAAA;AAGE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EADA,IAAA;AAELC,MAAAA,MAAM,EAAEZ;AAFH,KAHT;AAOE,IAAA,OAAO,EAAA,OAAA,MAAA,CAAA,IAAA,EAAA,GAAA,EAAA,MAAA,CAPT,IAOS,CAPT;AAQE,IAAA,KAAK,EAAC;AARR,GAAA,EAUE,mBAAA,CAAA,GAAA,EAAA;AACE,IAAA,KAAK,EAAE;AACLW,MAAAA,KAAK,EADA,IAAA;AAELC,MAAAA,MAAM,EAFD,IAAA;AAGLC,MAAAA,eAAe,EAAA,GAAA,MAAA,CAAA,YAAA,EAAA,KAAA,EAAA,MAAA,CAAA,YAAA,EAAA,IAAA;AAHV;AADT,GAAA,EAOE,mBAAA,CAAA,QAAA,EAAA;AACE,IAAA,SAAS,EADX,6BAAA;AAEE,IAAA,IAAI,EAFN,MAAA;AAGE,IAAA,eAAe,EAHjB,SAAA;AAIE,IAAA,gBAAgB,EAJlB,UAAA;AAKE,IAAA,WAAW,EALb,WAAA;AAME,IAAA,aAAa,EANf,OAAA;AAOE,IAAA,EAAE,EAPJ,YAAA;AAQE,IAAA,EAAE,EARJ,YAAA;AASE,IAAA,CAAC,EAAET;AATL,GAAA,CAPF,CAVF,CAPF,CADF;AAdF,CAAA;;AAwDAN,oBAAoB,CAApBA,YAAAA,GAAoC;AAClC,UADkC,EAAA;AAElC,iBAFkC,GAAA;AAGlC,QAHkC,IAAA;AAIlC,cAJkC,IAAA;AAKlC,gBAAc;AALoB,CAApCA;AAQA,eAAA,aAAegB,KAAK,CAALA,IAAAA,CAAf,oBAAeA,CAAf","sourcesContent":["import React, { FunctionComponent, HTMLAttributes } from 'react';\nimport { classNames } from '../../lib/classNames';\n\nfunction calcStrokeDashOffset(value: number, radius: number) {\n  const progress = value / 100;\n  return 2 * Math.PI * radius * (1 - progress);\n}\n\nexport interface PullToRefreshSpinnerProps extends HTMLAttributes<HTMLDivElement> {\n  size?: number;\n  strokeWidth?: number;\n  on?: boolean;\n  progress?: number;\n  'aria-label'?: string;\n}\n\nconst PullToRefreshSpinner: FunctionComponent<PullToRefreshSpinnerProps> = ({\n  on,\n  progress,\n  size,\n  strokeWidth,\n  style,\n  ...restProps\n}: PullToRefreshSpinnerProps) => {\n  const radius = 0.5 * size - 0.5 * strokeWidth;\n  const dasharray = 2 * Math.PI * radius;\n  const circleCenter = 0.5 * size;\n\n  const dashoffset = calcStrokeDashOffset(on ? 80 : progress, radius);\n\n  return (\n    <div\n      vkuiClass={classNames('PullToRefresh__spinner', {\n        'PullToRefresh__spinner--on': on,\n      })}\n      style={style}\n      aria-label={on ? restProps['aria-label'] : undefined}\n    >\n      <svg\n        role=\"presentation\"\n        vkuiClass=\"PullToRefresh__spinner-self\"\n        style={{\n          width: size,\n          height: size,\n        }}\n        viewBox={`0 0 ${size} ${size}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g\n          style={{\n            width: size,\n            height: size,\n            transformOrigin: `${circleCenter}px ${circleCenter}px`,\n          }}\n        >\n          <circle\n            vkuiClass=\"PullToRefresh__spinner-path\"\n            fill=\"none\"\n            strokeDasharray={dasharray}\n            strokeDashoffset={dashoffset}\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n            cx={circleCenter}\n            cy={circleCenter}\n            r={radius}\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nPullToRefreshSpinner.defaultProps = {\n  'size': 24,\n  'strokeWidth': 2.5,\n  'on': true,\n  'progress': null,\n  'aria-label': 'Пожалуйста, подождите...',\n};\n\nexport default React.memo(PullToRefreshSpinner);\n"]},"metadata":{},"sourceType":"module"}