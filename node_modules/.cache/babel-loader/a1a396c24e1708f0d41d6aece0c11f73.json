{"ast":null,"code":"function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { createContext, useMemo } from 'react';\nexport var IconSettingsContext = /*#__PURE__*/createContext({});\nexport var IconSettingsProvider = function IconSettingsProvider(_ref) {\n  var children = _ref.children,\n      settings = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var contextValue = useMemo(function () {\n    return settings;\n  }, [settings.classPrefix, settings.globalClasses]);\n  return /*#__PURE__*/React.createElement(IconSettingsContext.Provider, {\n    value: contextValue\n  }, children);\n};","map":{"version":3,"sources":["../../tmp/IconSettings.tsx"],"names":["IconSettingsContext","createContext","IconSettingsProvider","children","settings","contextValue","useMemo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,aAAA,EAAA,OAAA,QAAA,OAAA;AAOA,OAAO,IAAMA,mBAAmB,GAAA,aAAGC,aAAa,CAAzC,EAAyC,CAAzC;AAEP,OAAO,IAAMC,oBAA+C,GAAG,SAAlDA,oBAAkD,CAAA,IAAA,EAA+B;AAAA,MAA5BC,QAA4B,GAAA,IAAA,CAA5BA,QAA4B;AAAA,MAAfC,QAAe,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA;;AAC5F,MAAMC,YAAY,GAAGC,OAAO,CAAC,YAAA;AAAA,WAAA,QAAA;AAAD,GAAA,EAAiB,CAACF,QAAQ,CAAT,WAAA,EAAuBA,QAAQ,CAA5E,aAA6C,CAAjB,CAA5B;AACA,SAAA,aACE,KAAA,CAAA,aAAA,CAAC,mBAAD,CAAA,QAAA,EAAA;AAA8B,IAAA,KAAK,EAAEC;AAArC,GAAA,EADF,QACE,CADF;AAFK,CAAA","sourcesContent":["import React, { createContext, FC, useMemo } from 'react';\n\nexport type IconSettingsInterface = {\n  classPrefix?: string;\n  globalClasses?: boolean;\n}\n\nexport const IconSettingsContext = createContext<IconSettingsInterface>({});\n\nexport const IconSettingsProvider: FC<IconSettingsInterface> = ({ children, ...settings }) => {\n  const contextValue = useMemo(() => settings, [settings.classPrefix, settings.globalClasses]);\n  return (\n    <IconSettingsContext.Provider value={contextValue}>\n      {children}\n    </IconSettingsContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}