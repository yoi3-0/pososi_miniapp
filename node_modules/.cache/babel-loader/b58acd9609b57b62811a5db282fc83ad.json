{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { useContext } from 'react';\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport FixedLayout from \"../FixedLayout/FixedLayout\";\nimport Separator from \"../Separator/Separator\";\nimport { Platform, VKCOM } from \"../../lib/platform\";\nimport { ConfigProviderContext, WebviewType } from \"../ConfigProvider/ConfigProviderContext\";\nimport { SizeType, withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { isPrimitiveReactNode } from \"../../lib/utils\";\nimport Text from \"../Typography/Text/Text\";\nimport { TooltipContainer } from \"../Tooltip/TooltipContainer\";\n\nvar PanelHeaderInTypography = function PanelHeaderInTypography(_ref) {\n  var children = _ref.children;\n  var platform = usePlatform();\n  return platform === VKCOM ? createScopedElement(Text, {\n    weight: \"medium\"\n  }, children) : createScopedElement(\"span\", {\n    vkuiClass: \"PanelHeader__content-in\"\n  }, children);\n};\n\nvar PanelHeaderIn = function PanelHeaderIn(_ref2) {\n  var children = _ref2.children,\n      left = _ref2.left,\n      right = _ref2.right;\n\n  var _useContext = useContext(ConfigProviderContext),\n      webviewType = _useContext.webviewType;\n\n  var isPrimitive = isPrimitiveReactNode(children);\n  return createScopedElement(TooltipContainer, {\n    fixed: true,\n    vkuiClass: \"PanelHeader__in\"\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"PanelHeader__left\"\n  }, left), createScopedElement(\"div\", {\n    vkuiClass: \"PanelHeader__content\"\n  }, isPrimitive ? createScopedElement(PanelHeaderInTypography, null, children) : children), createScopedElement(\"div\", {\n    vkuiClass: \"PanelHeader__right\"\n  }, webviewType !== WebviewType.VKAPPS && right));\n};\n\nvar PanelHeader = function PanelHeader(props) {\n  var left = props.left,\n      children = props.children,\n      right = props.right,\n      separator = props.separator,\n      visor = props.visor,\n      transparent = props.transparent,\n      shadow = props.shadow,\n      getRef = props.getRef,\n      getRootRef = props.getRootRef,\n      sizeX = props.sizeX,\n      sizeY = props.sizeY,\n      fixed = props.fixed,\n      restProps = _objectWithoutProperties(props, [\"left\", \"children\", \"right\", \"separator\", \"visor\", \"transparent\", \"shadow\", \"getRef\", \"getRootRef\", \"sizeX\", \"sizeY\", \"fixed\"]);\n\n  var platform = usePlatform();\n\n  var _useContext2 = useContext(ConfigProviderContext),\n      webviewType = _useContext2.webviewType;\n\n  var needShadow = shadow && sizeX === SizeType.REGULAR;\n  var isFixed = fixed !== undefined ? fixed : platform !== Platform.VKCOM;\n  return createScopedElement(\"div\", _extends({}, restProps, {\n    vkuiClass: classNames(getClassName('PanelHeader', platform), {\n      'PanelHeader--trnsp': transparent,\n      'PanelHeader--shadow': needShadow,\n      'PanelHeader--vis': visor,\n      'PanelHeader--sep': separator && visor,\n      'PanelHeader--vkapps': webviewType === WebviewType.VKAPPS,\n      'PanelHeader--no-left': !left,\n      'PanelHeader--no-right': !right,\n      'PanelHeader--fixed': isFixed\n    }, \"PanelHeader--sizeX-\".concat(sizeX)),\n    ref: isFixed ? getRootRef : getRef\n  }), isFixed ? createScopedElement(FixedLayout, {\n    vkuiClass: \"PanelHeader__fixed\",\n    vertical: \"top\",\n    getRootRef: getRef\n  }, createScopedElement(PanelHeaderIn, props)) : createScopedElement(PanelHeaderIn, props), separator && visor && platform !== VKCOM && createScopedElement(Separator, {\n    vkuiClass: \"PanelHeader__separator\",\n    expanded: sizeX === SizeType.REGULAR\n  }));\n};\n\nPanelHeader.defaultProps = {\n  separator: true,\n  transparent: false,\n  visor: true\n};\nexport default withAdaptivity(PanelHeader, {\n  sizeX: true,\n  sizeY: true\n});","map":{"version":3,"sources":["../../../src/components/PanelHeader/PanelHeader.tsx"],"names":["PanelHeaderInTypography","children","platform","usePlatform","PanelHeaderIn","left","right","webviewType","useContext","isPrimitive","isPrimitiveReactNode","WebviewType","PanelHeader","separator","visor","transparent","shadow","getRef","getRootRef","sizeX","sizeY","fixed","restProps","props","needShadow","SizeType","isFixed","Platform","classNames","getClassName","REGULAR","withAdaptivity"],"mappings":";;;AAAA,SAAA,UAAA,QAAA,OAAA;AACA,SAAA,WAAA,QAAA,yBAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,UAAA,QAAA,sBAAA;AACA,OAAA,WAAA,MAAA,4BAAA;AACA,OAAA,SAAA,MAAA,wBAAA;AACA,SAAA,QAAA,EAAA,KAAA,QAAA,oBAAA;AAEA,SAAA,qBAAA,EAAA,WAAA,QAAA,yCAAA;AACA,SAAA,QAAA,EAAA,cAAA,QAAA,0BAAA;AACA,SAAA,oBAAA,QAAA,iBAAA;AACA,OAAA,IAAA,MAAA,yBAAA;AACA,SAAA,gBAAA,QAAA,6BAAA;;AAsBA,IAAMA,uBAA6C,GAAG,SAAhDA,uBAAgD,CAAA,IAAA,EAAoC;AAAA,MAAjCC,QAAiC,GAAA,IAAA,CAAjCA,QAAiC;AACxF,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;AAEA,SAAOD,QAAQ,KAARA,KAAAA,GACH,mBAAA,CAAA,IAAA,EAAA;AAAM,IAAA,MAAM,EAAC;AAAb,GAAA,EADGA,QACH,CADGA,GAEH,mBAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,EAFJ,QAEI,CAFJ;AAHF,CAAA;;AAQA,IAAME,aAAmC,GAAG,SAAtCA,aAAsC,CAAA,KAAA,EAA+B;AAAA,MAA5BH,QAA4B,GAAA,KAAA,CAA5BA,QAA4B;AAAA,MAAlBI,IAAkB,GAAA,KAAA,CAAlBA,IAAkB;AAAA,MAAZC,KAAY,GAAA,KAAA,CAAZA,KAAY;;AAAA,MAAA,WAAA,GACjDE,UAAU,CADuC,qBACvC,CADuC;AAAA,MACjED,WADiE,GAAA,WAAA,CAAA,WAAA;;AAEzE,MAAME,WAAW,GAAGC,oBAAoB,CAAxC,QAAwC,CAAxC;AAEA,SACE,mBAAA,CAAA,gBAAA,EAAA;AAAkB,IAAA,KAAK,EAAvB,IAAA;AAAwB,IAAA,SAAS,EAAC;AAAlC,GAAA,EACE,mBAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EADF,IACE,CADF,EAIE,mBAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACGD,WAAW,GAAG,mBAAA,CAAA,uBAAA,EAAA,IAAA,EAAH,QAAG,CAAH,GALhB,QAIE,CAJF,EAOE,mBAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACGF,WAAW,KAAKI,WAAW,CAA3BJ,MAAAA,IATP,KAQI,CAPF,CADF;AAJF,CAAA;;AAmBA,IAAMK,WAAiC,GAAG,SAApCA,WAAoC,CAAA,KAAA,EAA6B;AAAA,MAEnEP,IAFmE,GAejEkB,KAfiE,CAAA,IAAA;AAAA,MAGnEtB,QAHmE,GAejEsB,KAfiE,CAAA,QAAA;AAAA,MAInEjB,KAJmE,GAejEiB,KAfiE,CAAA,KAAA;AAAA,MAKnEV,SALmE,GAejEU,KAfiE,CAAA,SAAA;AAAA,MAMnET,KANmE,GAejES,KAfiE,CAAA,KAAA;AAAA,MAOnER,WAPmE,GAejEQ,KAfiE,CAAA,WAAA;AAAA,MAQnEP,MARmE,GAejEO,KAfiE,CAAA,MAAA;AAAA,MASnEN,MATmE,GAejEM,KAfiE,CAAA,MAAA;AAAA,MAUnEL,UAVmE,GAejEK,KAfiE,CAAA,UAAA;AAAA,MAWnEJ,KAXmE,GAejEI,KAfiE,CAAA,KAAA;AAAA,MAYnEH,KAZmE,GAejEG,KAfiE,CAAA,KAAA;AAAA,MAanEF,KAbmE,GAejEE,KAfiE,CAAA,KAAA;AAAA,MAchED,SAdgE,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,OAAA,EAAA,WAAA,EAAA,OAAA,EAAA,aAAA,EAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;AAgBrE,MAAMpB,QAAQ,GAAGC,WAAjB,EAAA;;AAhBqE,MAAA,YAAA,GAiB7CK,UAAU,CAjBmC,qBAiBnC,CAjBmC;AAAA,MAiB7DD,WAjB6D,GAAA,YAAA,CAAA,WAAA;;AAkBrE,MAAMiB,UAAU,GAAGR,MAAM,IAAIG,KAAK,KAAKM,QAAQ,CAA/C,OAAA;AACA,MAAIC,OAAO,GAAGL,KAAK,KAALA,SAAAA,GAAAA,KAAAA,GAA8BnB,QAAQ,KAAKyB,QAAQ,CAAjE,KAAA;AAEA,SACE,mBAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,SAAS,EACPC,UAAU,CACRC,YAAY,CAAA,aAAA,EADJ,QACI,CADJ,EAER;AACE,4BADF,WAAA;AAEE,6BAFF,UAAA;AAGE,0BAHF,KAAA;AAIE,0BAAoBhB,SAAS,IAJ/B,KAAA;AAKE,6BAAuBN,WAAW,KAAKI,WAAW,CALpD,MAAA;AAME,8BAAwB,CAN1B,IAAA;AAOE,+BAAyB,CAP3B,KAAA;AAQE,4BAAsBe;AARxB,KAFQ,EAAA,sBAAA,MAAA,CAHd,KAGc,CAAA,CAHd;AAkBE,IAAA,GAAG,EAAEA,OAAO,GAAA,UAAA,GAAgBT;AAlB9B,GAAA,CAAA,EAoBGS,OAAO,GACN,mBAAA,CAAA,WAAA,EAAA;AAAa,IAAA,SAAS,EAAtB,oBAAA;AAA4C,IAAA,QAAQ,EAApD,KAAA;AAA2D,IAAA,UAAU,EAAET;AAAvE,GAAA,EACE,mBAAA,CAAA,aAAA,EAFI,KAEJ,CADF,CADM,GAIN,mBAAA,CAAA,aAAA,EAxBJ,KAwBI,CAxBJ,EA0BGJ,SAAS,IAATA,KAAAA,IAAsBX,QAAQ,KAA9BW,KAAAA,IAA4C,mBAAA,CAAA,SAAA,EAAA;AAC3C,IAAA,SAAS,EADkC,wBAAA;AAE3C,IAAA,QAAQ,EAAEM,KAAK,KAAKM,QAAQ,CAACK;AAFc,GAAA,CA1B/C,CADF;AArBF,CAAA;;AAwDAlB,WAAW,CAAXA,YAAAA,GAA2B;AACzBC,EAAAA,SAAS,EADgB,IAAA;AAEzBE,EAAAA,WAAW,EAFc,KAAA;AAGzBD,EAAAA,KAAK,EAAE;AAHkB,CAA3BF;AAMA,eAAemB,cAAc,CAAA,WAAA,EAAc;AACzCZ,EAAAA,KAAK,EADoC,IAAA;AAEzCC,EAAAA,KAAK,EAAE;AAFkC,CAAd,CAA7B","sourcesContent":["import { FC, HTMLAttributes, ReactNode, useContext } from 'react';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport Separator from '../Separator/Separator';\nimport { Platform, VKCOM } from '../../lib/platform';\nimport { HasRef, HasRootRef } from '../../types';\nimport { ConfigProviderContext, WebviewType } from '../ConfigProvider/ConfigProviderContext';\nimport { AdaptivityProps, SizeType, withAdaptivity } from '../../hoc/withAdaptivity';\nimport { isPrimitiveReactNode } from '../../lib/utils';\nimport Text from '../Typography/Text/Text';\nimport { TooltipContainer } from '../Tooltip/TooltipContainer';\n\nexport interface PanelHeaderProps extends\n  HTMLAttributes<HTMLDivElement>,\n  HasRef<HTMLDivElement>,\n  HasRootRef<HTMLDivElement>,\n  AdaptivityProps {\n  left?: ReactNode;\n  right?: ReactNode;\n  separator?: boolean;\n  transparent?: boolean;\n  shadow?: boolean;\n  /**\n   * Если `false`, то шапка будет нулевой высоты и контент панели \"залезет\" под неё\n   */\n  visor?: boolean;\n  /**\n   * Если `false`, то шапка будет в потоке. По умолчанию `true`, но если платформа vkcom, то по умолчанию `false`.\n   */\n  fixed?: boolean;\n}\n\nconst PanelHeaderInTypography: FC<PanelHeaderProps> = ({ children }: PanelHeaderProps) => {\n  const platform = usePlatform();\n\n  return platform === VKCOM\n    ? <Text weight=\"medium\">{children}</Text>\n    : <span vkuiClass=\"PanelHeader__content-in\">{children}</span>;\n};\n\nconst PanelHeaderIn: FC<PanelHeaderProps> = ({ children, left, right }) => {\n  const { webviewType } = useContext(ConfigProviderContext);\n  const isPrimitive = isPrimitiveReactNode(children);\n\n  return (\n    <TooltipContainer fixed vkuiClass=\"PanelHeader__in\">\n      <div vkuiClass=\"PanelHeader__left\">\n        {left}\n      </div>\n      <div vkuiClass=\"PanelHeader__content\">\n        {isPrimitive ? <PanelHeaderInTypography>{children}</PanelHeaderInTypography> : children}\n      </div>\n      <div vkuiClass=\"PanelHeader__right\">\n        {webviewType !== WebviewType.VKAPPS && right}\n      </div>\n    </TooltipContainer>\n  );\n};\n\nconst PanelHeader: FC<PanelHeaderProps> = (props: PanelHeaderProps) => {\n  const {\n    left,\n    children,\n    right,\n    separator,\n    visor,\n    transparent,\n    shadow,\n    getRef,\n    getRootRef,\n    sizeX,\n    sizeY,\n    fixed,\n    ...restProps\n  } = props;\n  const platform = usePlatform();\n  const { webviewType } = useContext(ConfigProviderContext);\n  const needShadow = shadow && sizeX === SizeType.REGULAR;\n  let isFixed = fixed !== undefined ? fixed : platform !== Platform.VKCOM;\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={\n        classNames(\n          getClassName('PanelHeader', platform),\n          {\n            'PanelHeader--trnsp': transparent,\n            'PanelHeader--shadow': needShadow,\n            'PanelHeader--vis': visor,\n            'PanelHeader--sep': separator && visor,\n            'PanelHeader--vkapps': webviewType === WebviewType.VKAPPS,\n            'PanelHeader--no-left': !left,\n            'PanelHeader--no-right': !right,\n            'PanelHeader--fixed': isFixed,\n          },\n          `PanelHeader--sizeX-${sizeX}`,\n        )\n      }\n      ref={isFixed ? getRootRef : getRef}\n    >\n      {isFixed ?\n        <FixedLayout vkuiClass=\"PanelHeader__fixed\" vertical=\"top\" getRootRef={getRef}>\n          <PanelHeaderIn {...props} />\n        </FixedLayout> :\n        <PanelHeaderIn {...props} />\n      }\n      {separator && visor && platform !== VKCOM && <Separator\n        vkuiClass=\"PanelHeader__separator\"\n        expanded={sizeX === SizeType.REGULAR}\n      />}\n    </div>\n  );\n};\n\nPanelHeader.defaultProps = {\n  separator: true,\n  transparent: false,\n  visor: true,\n};\n\nexport default withAdaptivity(PanelHeader, {\n  sizeX: true,\n  sizeY: true,\n});\n"]},"metadata":{},"sourceType":"module"}