{"ast":null,"code":"import { useRef } from 'react';\nimport { transitionEvent } from \"../lib/supportEvents\";\nexport var useWaitTransitionFinish = function useWaitTransitionFinish() {\n  var timeoutRef = useRef(null);\n\n  var waitTransitionFinish = function waitTransitionFinish(element, eventHandler, durationFallback) {\n    if (element) {\n      if (transitionEvent.supported) {\n        element.removeEventListener(transitionEvent.name, eventHandler);\n        element.addEventListener(transitionEvent.name, eventHandler);\n      } else {\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = setTimeout(eventHandler, durationFallback);\n      }\n    }\n  };\n\n  return {\n    waitTransitionFinish: waitTransitionFinish\n  };\n};","map":{"version":3,"sources":["../../src/hooks/useWaitTransitionFinish.ts"],"names":["useWaitTransitionFinish","timeoutRef","useRef","waitTransitionFinish","transitionEvent","element","clearTimeout","setTimeout"],"mappings":"AAAA,SAAA,MAAA,QAAA,OAAA;AACA,SAAA,eAAA,QAAA,sBAAA;AAEA,OAAO,IAAMA,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AAC3C,MAAMC,UAAU,GAAGC,MAAM,CAAzB,IAAyB,CAAzB;;AAEA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAA,OAAA,EAAA,YAAA,EAAA,gBAAA,EAAgF;AAC3G,QAAA,OAAA,EAAa;AACX,UAAIC,eAAe,CAAnB,SAAA,EAA+B;AAC7BC,QAAAA,OAAO,CAAPA,mBAAAA,CAA4BD,eAAe,CAA3CC,IAAAA,EAAAA,YAAAA;AACAA,QAAAA,OAAO,CAAPA,gBAAAA,CAAyBD,eAAe,CAAxCC,IAAAA,EAAAA,YAAAA;AAFF,OAAA,MAGO;AACLC,QAAAA,YAAY,CAACL,UAAU,CAAvBK,OAAY,CAAZA;AACAL,QAAAA,UAAU,CAAVA,OAAAA,GAAqBM,UAAU,CAAA,YAAA,EAA/BN,gBAA+B,CAA/BA;AACD;AACF;AATH,GAAA;;AAYA,SAAO;AACLE,IAAAA,oBAAoB,EAApBA;AADK,GAAP;AAfK,CAAA","sourcesContent":["import { useRef } from 'react';\nimport { transitionEvent } from '../lib/supportEvents';\n\nexport const useWaitTransitionFinish = () => {\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null);\n\n  const waitTransitionFinish = (element: HTMLElement, eventHandler: VoidFunction, durationFallback: number) => {\n    if (element) {\n      if (transitionEvent.supported) {\n        element.removeEventListener(transitionEvent.name, eventHandler);\n        element.addEventListener(transitionEvent.name, eventHandler);\n      } else {\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = setTimeout(eventHandler, durationFallback);\n      }\n    }\n  };\n\n  return {\n    waitTransitionFinish,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}