{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport React, { Component } from 'react';\nimport FixedLayout from \"../FixedLayout/FixedLayout\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { animationEvent } from \"../../lib/supportEvents\";\nimport { withAdaptivity, ViewWidth } from \"../../hoc/withAdaptivity\";\nimport { withDOM } from \"../../lib/dom\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nexport var PanelHeaderContext = /*#__PURE__*/function (_Component) {\n  _inherits(PanelHeaderContext, _Component);\n\n  var _super = _createSuper(PanelHeaderContext);\n\n  function PanelHeaderContext() {\n    var _this;\n\n    _classCallCheck(this, PanelHeaderContext);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      closing: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"elementRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"animationFinishTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"startClosing\", function (event) {\n      if (_this.elementRef && _this.elementRef.current && !_this.elementRef.current.contains(event.target)) {\n        _this.props.onClose();\n\n        _this.props.document.removeEventListener('click', _this.startClosing);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAnimationFinish\", function () {\n      _this.setState({\n        closing: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(PanelHeaderContext, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.opened && this.isDesktop) {\n        this.props.document.addEventListener('click', this.startClosing);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.opened !== prevProps.opened || this.props.viewWidth !== prevProps.viewWidth) {\n        if (this.props.opened === false && !this.state.closing) {\n          this.setState({\n            closing: true\n          });\n          this.waitAnimationFinish(this.onAnimationFinish);\n        }\n\n        if (this.isDesktop && this.props.opened) {\n          this.props.document.addEventListener('click', this.startClosing);\n        } else {\n          this.props.document.removeEventListener('click', this.startClosing);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.isDesktop) {\n        this.props.document.removeEventListener('click', this.startClosing);\n      }\n    }\n  }, {\n    key: \"waitAnimationFinish\",\n    value: function waitAnimationFinish(eventHandler) {\n      if (this.elementRef.current) {\n        if (animationEvent.supported) {\n          this.elementRef.current.removeEventListener(animationEvent.name, eventHandler);\n          this.elementRef.current.addEventListener(animationEvent.name, eventHandler);\n        } else {\n          clearTimeout(this.animationFinishTimeout);\n          this.animationFinishTimeout = setTimeout(eventHandler, 200);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          opened = _this$props.opened,\n          onClose = _this$props.onClose,\n          platform = _this$props.platform,\n          viewWidth = _this$props.viewWidth,\n          hasMouse = _this$props.hasMouse,\n          window = _this$props.window,\n          document = _this$props.document,\n          restProps = _objectWithoutProperties(_this$props, [\"children\", \"opened\", \"onClose\", \"platform\", \"viewWidth\", \"hasMouse\", \"window\", \"document\"]);\n\n      var closing = this.state.closing;\n      var baseClassNames = getClassName('PanelHeaderContext', platform);\n      return createScopedElement(FixedLayout, _extends({}, restProps, {\n        vkuiClass: classNames(baseClassNames, {\n          'PanelHeaderContext--opened': opened,\n          'PanelHeaderContext--closing': closing,\n          'PanelHeaderContext--desktop': this.isDesktop\n        }),\n        vertical: \"top\"\n      }), createScopedElement(\"div\", {\n        vkuiClass: \"PanelHeaderContext__in\",\n        ref: this.elementRef\n      }, createScopedElement(\"div\", {\n        vkuiClass: \"PanelHeaderContext__content\"\n      }, (opened || closing) && children)), !this.isDesktop && (opened || closing) && createScopedElement(\"div\", {\n        onClick: onClose,\n        vkuiClass: \"PanelHeaderContext__fade\"\n      }));\n    }\n  }, {\n    key: \"isDesktop\",\n    get: function get() {\n      return this.props.viewWidth >= ViewWidth.SMALL_TABLET;\n    }\n  }]);\n\n  return PanelHeaderContext;\n}(Component);\n\n_defineProperty(PanelHeaderContext, \"defaultProps\", {\n  opened: false\n});\n\nexport default withAdaptivity(withPlatform(withDOM(PanelHeaderContext)), {\n  viewWidth: true,\n  hasMouse: true\n});","map":{"version":3,"sources":["../../../src/components/PanelHeaderContext/PanelHeaderContext.tsx"],"names":["PanelHeaderContext","opened","closing","React","ViewWidth","event","prevProps","animationEvent","clearTimeout","setTimeout","children","onClose","platform","viewWidth","hasMouse","window","document","restProps","baseClassNames","getClassName","classNames","isDesktop","elementRef","withAdaptivity","withPlatform","withDOM"],"mappings":"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","sourcesContent":["import React, { Component, HTMLAttributes, RefObject } from 'react';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { animationEvent } from '../../lib/supportEvents';\nimport { withAdaptivity, AdaptivityProps, ViewWidth } from '../../hoc/withAdaptivity';\nimport { DOMProps, withDOM } from '../../lib/dom';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { HasPlatform } from '../../types';\n\nexport interface PanelHeaderContextProps extends HTMLAttributes<HTMLDivElement>, HasPlatform, AdaptivityProps {\n  opened: boolean;\n  onClose: VoidFunction;\n}\n\nexport interface PanelHeaderContextState {\n  closing: boolean;\n}\n\nexport class PanelHeaderContext extends Component<PanelHeaderContextProps & DOMProps, PanelHeaderContextState> {\n  static defaultProps: Partial<PanelHeaderContextProps> = {\n    opened: false,\n  };\n\n  state: PanelHeaderContextState = {\n    closing: false,\n  };\n\n  elementRef: RefObject<HTMLDivElement> = React.createRef();\n\n  private animationFinishTimeout: ReturnType<typeof setTimeout>;\n\n  get isDesktop(): boolean {\n    return this.props.viewWidth >= ViewWidth.SMALL_TABLET;\n  }\n\n  startClosing = (event: Event) => {\n    if (this.elementRef && this.elementRef.current && !this.elementRef.current.contains(event.target as Node)) {\n      this.props.onClose();\n      this.props.document.removeEventListener('click', this.startClosing);\n    }\n  };\n\n  componentDidMount() {\n    if (this.props.opened && this.isDesktop) {\n      this.props.document.addEventListener('click', this.startClosing);\n    }\n  }\n\n  componentDidUpdate(prevProps: PanelHeaderContextProps) {\n    if (this.props.opened !== prevProps.opened || this.props.viewWidth !== prevProps.viewWidth) {\n      if (this.props.opened === false && !this.state.closing) {\n        this.setState({ closing: true });\n        this.waitAnimationFinish(this.onAnimationFinish);\n      }\n\n      if (this.isDesktop && this.props.opened) {\n        this.props.document.addEventListener('click', this.startClosing);\n      } else {\n        this.props.document.removeEventListener('click', this.startClosing);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.isDesktop) {\n      this.props.document.removeEventListener('click', this.startClosing);\n    }\n  }\n\n  waitAnimationFinish(eventHandler: VoidFunction) {\n    if (this.elementRef.current) {\n      if (animationEvent.supported) {\n        this.elementRef.current.removeEventListener(animationEvent.name, eventHandler);\n        this.elementRef.current.addEventListener(animationEvent.name, eventHandler);\n      } else {\n        clearTimeout(this.animationFinishTimeout);\n        this.animationFinishTimeout = setTimeout(eventHandler, 200);\n      }\n    }\n  }\n\n  onAnimationFinish: VoidFunction = () => {\n    this.setState({ closing: false });\n  };\n\n  render() {\n    const { children, opened, onClose, platform, viewWidth, hasMouse, window, document, ...restProps } = this.props;\n    const { closing } = this.state;\n    const baseClassNames = getClassName('PanelHeaderContext', platform);\n\n    return (\n      <FixedLayout {...restProps} vkuiClass={classNames(baseClassNames, {\n        'PanelHeaderContext--opened': opened,\n        'PanelHeaderContext--closing': closing,\n        'PanelHeaderContext--desktop': this.isDesktop,\n      })} vertical=\"top\">\n        <div vkuiClass=\"PanelHeaderContext__in\" ref={this.elementRef}>\n          <div vkuiClass=\"PanelHeaderContext__content\">\n            {(opened || closing) && children}\n          </div>\n        </div>\n        {!this.isDesktop && (opened || closing) && <div onClick={onClose} vkuiClass=\"PanelHeaderContext__fade\" />}\n      </FixedLayout>\n    );\n  }\n}\n\nexport default withAdaptivity(withPlatform(withDOM(PanelHeaderContext)), {\n  viewWidth: true,\n  hasMouse: true,\n});\n"]},"metadata":{},"sourceType":"module"}