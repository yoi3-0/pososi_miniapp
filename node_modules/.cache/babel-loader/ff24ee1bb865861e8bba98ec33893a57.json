{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nexport function removeObjectKeys(obj) {\n  var keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var newObj = _objectSpread({}, obj);\n\n  keys.forEach(function (key) {\n    return delete newObj[key];\n  });\n  return newObj;\n}","map":{"version":3,"sources":["../../src/lib/removeObjectKeys.ts"],"names":["keys","newObj"],"mappings":";AAAA,OAAO,SAAA,gBAAA,CAAA,GAAA,EAA2E;AAAA,MAAnBA,IAAmB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAP,EAAO;;AAChF,MAAIC,MAAS,GAAA,aAAA,CAAA,EAAA,EAAb,GAAa,CAAb;;AAEAD,EAAAA,IAAI,CAAJA,OAAAA,CAAa,UAAA,GAAA,EAAA;AAAA,WAAY,OAAOC,MAAM,CAAzB,GAAyB,CAAzB;AAAbD,GAAAA;AAEA,SAAA,MAAA;AACD","sourcesContent":["export function removeObjectKeys<T, K extends keyof T>(obj: T, keys: K[] = []): T {\n  let newObj: T = { ...obj };\n\n  keys.forEach((key: K) => delete newObj[key]);\n\n  return newObj;\n}\n"]},"metadata":{},"sourceType":"module"}