{"ast":null,"code":"export var noop = function noop() {}; // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport function throttle(fn) {\n  var threshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n  var scope = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : window;\n  var last;\n  var deferTimer;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var context = scope;\n    var now = Date.now();\n\n    if (last && now < last + threshold) {\n      clearTimeout(deferTimer);\n      deferTimer = setTimeout(function () {\n        last = now;\n        fn.apply(context, args);\n      }, threshold);\n    } else {\n      last = now;\n      fn.apply(context, args);\n    }\n  };\n}\nexport function debounce(fn, delay) {\n  var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : window;\n  var timeout;\n  var args;\n\n  var later = function later() {\n    return fn.apply(context, args);\n  };\n\n  return function () {\n    for (var _len2 = arguments.length, a = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      a[_key2] = arguments[_key2];\n    }\n\n    args = a;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, delay);\n  };\n}","map":{"version":3,"sources":["../../src/functions.ts"],"names":["noop","threshold","scope","window","args","context","now","Date","last","clearTimeout","deferTimer","setTimeout","fn","later","a","timeout"],"mappings":"AAAA,OAAO,IAAMA,IAAI,GAAG,SAAPA,IAAO,GAAM,CAAnB,CAAA,C,CAAuB;;AAE9B,OAAO,SAAA,QAAA,CAAA,EAAA,EAAgG;AAAA,MAAhCC,SAAgC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAApB,EAAoB;AAAA,MAAhBC,KAAgB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAARC,MAAQ;AACrG,MAAA,IAAA;AACA,MAAA,UAAA;AAEA,SAAO,YAAqB;AAAA,SAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAATC,IAAS,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAATA,MAAAA,IAAS,CAAA,IAAA,CAATA,GAAS,SAAA,CAAA,IAAA,CAATA;AAAS;;AAC1B,QAAMC,OAAO,GAAb,KAAA;AACA,QAAMC,GAAG,GAAGC,IAAI,CAAhB,GAAYA,EAAZ;;AAEA,QAAIC,IAAI,IAAIF,GAAG,GAAGE,IAAI,GAAtB,SAAA,EAAoC;AAClCC,MAAAA,YAAY,CAAZA,UAAY,CAAZA;AACAC,MAAAA,UAAU,GAAGC,UAAU,CAAC,YAAM;AAC5BH,QAAAA,IAAI,GAAJA,GAAAA;AACAI,QAAAA,EAAE,CAAFA,KAAAA,CAAAA,OAAAA,EAAAA,IAAAA;AAFqB,OAAA,EAAvBF,SAAuB,CAAvBA;AAFF,KAAA,MAMO;AACLF,MAAAA,IAAI,GAAJA,GAAAA;AACAI,MAAAA,EAAE,CAAFA,KAAAA,CAAAA,OAAAA,EAAAA,IAAAA;AACD;AAbH,GAAA;AAeD;AAED,OAAO,SAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAiG;AAAA,MAAlBP,OAAkB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAARF,MAAQ;AACtG,MAAA,OAAA;AACA,MAAA,IAAA;;AAEA,MAAMU,KAAK,GAAG,SAARA,KAAQ,GAAA;AAAA,WAAMD,EAAE,CAAFA,KAAAA,CAAAA,OAAAA,EAAN,IAAMA,CAAN;AAAd,GAAA;;AAEA,SAAO,YAAa;AAAA,SAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAATE,CAAS,GAAA,IAAA,KAAA,CAAA,KAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AAATA,MAAAA,CAAS,CAAA,KAAA,CAATA,GAAS,SAAA,CAAA,KAAA,CAATA;AAAS;;AAClBV,IAAAA,IAAI,GAAJA,CAAAA;AACAK,IAAAA,YAAY,CAAZA,OAAY,CAAZA;AACAM,IAAAA,OAAO,GAAGJ,UAAU,CAAA,KAAA,EAApBI,KAAoB,CAApBA;AAHF,GAAA;AAKD","sourcesContent":["export const noop = () => {}; // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport function throttle<T extends any[]>(fn: (...args: T) => unknown, threshold = 50, scope = window) {\n  let last: number;\n  let deferTimer: ReturnType<typeof setTimeout>;\n\n  return function(...args: T) {\n    const context = scope;\n    const now = Date.now();\n\n    if (last && now < last + threshold) {\n      clearTimeout(deferTimer);\n      deferTimer = setTimeout(() => {\n        last = now;\n        fn.apply(context, args);\n      }, threshold);\n    } else {\n      last = now;\n      fn.apply(context, args);\n    }\n  };\n}\n\nexport function debounce<T extends any[]>(fn: (...args: T) => unknown, delay: number, context = window) {\n  let timeout: ReturnType<typeof setTimeout>;\n  let args: T;\n\n  const later = () => fn.apply(context, args);\n\n  return (...a: T) => {\n    args = a;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, delay);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}