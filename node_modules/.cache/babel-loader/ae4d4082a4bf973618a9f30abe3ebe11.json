{"ast":null,"code":"/**\n * Добавляет к числу 0 в начале, если число меньше 10\n */\nexport function leadingZero(number) {\n  if (number >= 10) {\n    return String(number);\n  } else {\n    return '0' + String(number);\n  }\n}\n/**\n * Форматирует число, разбивая его на разряды\n */\n\nexport function formatNumber(number) {\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ' ';\n  var decimalSeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ',';\n  var numberParts = number.toString().split('.');\n  var result = [];\n\n  for (var i = numberParts[0].length - 3; i > -3; i -= 3) {\n    result.unshift(numberParts[0].slice(i > 0 ? i : 0, i + 3));\n  }\n\n  numberParts[0] = result.join(separator);\n  return numberParts.join(decimalSeparator);\n}","map":{"version":3,"sources":["../../src/numbers.ts"],"names":["number","String","separator","decimalSeparator","numberParts","result","i"],"mappings":"AAAA;;;AAGA,OAAO,SAAA,WAAA,CAAA,MAAA,EAA6C;AAClD,MAAIA,MAAM,IAAV,EAAA,EAAkB;AAChB,WAAOC,MAAM,CAAb,MAAa,CAAb;AADF,GAAA,MAEO;AACL,WAAO,MAAMA,MAAM,CAAnB,MAAmB,CAAnB;AACD;AACF;AAED;;;;AAGA,OAAO,SAAA,YAAA,CAAA,MAAA,EAAuF;AAAA,MAAjDC,SAAiD,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAArC,GAAqC;AAAA,MAAhCC,gBAAgC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAb,GAAa;AAC5F,MAAMC,WAAW,GAAGJ,MAAM,CAANA,QAAAA,GAAAA,KAAAA,CAApB,GAAoBA,CAApB;AACA,MAAMK,MAAM,GAAZ,EAAA;;AAEA,OAAK,IAAIC,CAAC,GAAGF,WAAW,CAAXA,CAAW,CAAXA,CAAAA,MAAAA,GAAb,CAAA,EAAwCE,CAAC,GAAG,CAA5C,CAAA,EAAgDA,CAAC,IAAjD,CAAA,EAAwD;AACtDD,IAAAA,MAAM,CAANA,OAAAA,CAAeD,WAAW,CAAXA,CAAW,CAAXA,CAAAA,KAAAA,CAAqBE,CAAC,GAADA,CAAAA,GAAAA,CAAAA,GAArBF,CAAAA,EAAoCE,CAAC,GAApDD,CAAeD,CAAfC;AACD;;AAEDD,EAAAA,WAAW,CAAXA,CAAW,CAAXA,GAAiBC,MAAM,CAANA,IAAAA,CAAjBD,SAAiBC,CAAjBD;AACA,SAAOA,WAAW,CAAXA,IAAAA,CAAP,gBAAOA,CAAP;AACD","sourcesContent":["/**\n * Добавляет к числу 0 в начале, если число меньше 10\n */\nexport function leadingZero(number: number): string {\n  if (number >= 10) {\n    return String(number);\n  } else {\n    return '0' + String(number);\n  }\n}\n\n/**\n * Форматирует число, разбивая его на разряды\n */\nexport function formatNumber(number: number, separator = ' ', decimalSeparator = ','): string {\n  const numberParts = number.toString().split('.');\n  const result = [];\n\n  for (let i = numberParts[0].length - 3; i > -3; i -= 3) {\n    result.unshift(numberParts[0].slice(i > 0 ? i : 0, i + 3));\n  }\n\n  numberParts[0] = result.join(separator);\n  return numberParts.join(decimalSeparator);\n}\n"]},"metadata":{},"sourceType":"module"}