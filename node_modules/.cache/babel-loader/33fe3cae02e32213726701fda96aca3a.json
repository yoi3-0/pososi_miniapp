{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 16 16';\nvar id = 'users_16';\nvar content = '<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"users_16\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h16v16H0z\" /><path d=\"M9.886 8.65a7.356 7.356 0 011.447-.15c1.53 0 4.334.571 4.334 2.857 0 1-.255 1.143-.765 1.143h-4.06c.105-.326.158-.708.158-1.143 0-1.148-.42-2.044-1.114-2.707zM1 11.357C1 9.071 3.804 8.5 5.333 8.5c1.53 0 4.334.571 4.334 2.857 0 1-.255 1.143-.765 1.143H1.765c-.51 0-.765-.143-.765-1.143zM7.333 5.5a2 2 0 11-3.999.001 2 2 0 014-.001zm6 0a2 2 0 11-3.999.001 2 2 0 014-.001z\" fill=\"currentColor\" /></g></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon16Users = function Icon16Users(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 16,\n    height: !isNaN(props.height) ? +props.height : 16\n  }));\n};\n\nIcon16Users.mountIcon = mountIcon;\nexport default Icon16Users;","map":{"version":3,"sources":["../../../tmp/16/users.ts"],"names":["viewBox","id","content","isMounted","addSpriteSymbol","Icon16Users","useIsomorphicLayoutEffect","mountIcon","assign","width","isNaN","props","height"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA,C,CACA;;AACA,OAAA,aAAA,MAAA,kCAAA,C,CACA;;AACA,SAAA,MAAA,QAAA,mBAAA;AACA,SAAA,eAAA,EAAA,yBAAA,QAAA,WAAA;AACA,SAAA,OAAA,QAAA,YAAA;AAEA,IAAMA,OAAO,GAAb,WAAA;AACA,IAAMC,EAAE,GAAR,UAAA;AACA,IAAMC,OAAO,GAAb,2iBAAA;AAEA,IAAIC,SAAS,GAAb,KAAA;;AACA,SAAA,SAAA,GAAqB;AACnB,MAAI,CAAJ,SAAA,EAAgB;AACdC,IAAAA,eAAe,CAAC,IAAA,aAAA,CAAkB;AAChCH,MAAAA,EAAE,EAD8B,EAAA;AAEhCD,MAAAA,OAAO,EAFyB,OAAA;AAGhCE,MAAAA,OAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfE;AAMAD,IAAAA,SAAS,GAATA,IAAAA;AACD;AACF;;AASD,IAAME,WAAiC,GAAG,SAApCA,WAAoC,CAAA,KAAA,EAAW;AACnDC,EAAAA,yBAAyB,CAAC,YAAM;AAC9BC,IAAAA,SAAS;AADc,GAAA,EAAzBD,EAAyB,CAAzBA;AAIA,SAAA,aAAO,KAAK,CAAL,aAAA,CAAA,OAAA,EAA6BE,MAAM,CAAA,EAAA,EAAA,KAAA,EAAY;AACpDR,IAAAA,OAAO,EAD6C,OAAA;AAEpDC,IAAAA,EAAE,EAFkD,EAAA;AAGpDQ,IAAAA,KAAK,EAAE,CAACC,KAAK,CAACC,KAAK,CAAZ,KAAM,CAAN,GAAsB,CAACA,KAAK,CAA5B,KAAA,GAH6C,EAAA;AAIpDC,IAAAA,MAAM,EAAE,CAACF,KAAK,CAACC,KAAK,CAAZ,MAAM,CAAN,GAAuB,CAACA,KAAK,CAA7B,MAAA,GAAuC;AAJK,GAAZ,CAAnC,CAAP;AALF,CAAA;;AAaCN,WAAD,CAAA,SAACA,GAAD,SAACA;AAED,eAAA,WAAA","sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 16 16';\nconst id = 'users_16';\nconst content = '<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"users_16\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h16v16H0z\" /><path d=\"M9.886 8.65a7.356 7.356 0 011.447-.15c1.53 0 4.334.571 4.334 2.857 0 1-.255 1.143-.765 1.143h-4.06c.105-.326.158-.708.158-1.143 0-1.148-.42-2.044-1.114-2.707zM1 11.357C1 9.071 3.804 8.5 5.333 8.5c1.53 0 4.334.571 4.334 2.857 0 1-.255 1.143-.765 1.143H1.765c-.51 0-.765-.143-.765-1.143zM7.333 5.5a2 2 0 11-3.999.001 2 2 0 014-.001zm6 0a2 2 0 11-3.999.001 2 2 0 014-.001z\" fill=\"currentColor\" /></g></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon16UsersProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon16Users: FC<Icon16UsersProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 16,\n    height: !isNaN(props.height) ? +props.height : 16,\n  }));\n};\n\n(Icon16Users as any).mountIcon = mountIcon;\n\nexport default Icon16Users;\n"]},"metadata":{},"sourceType":"module"}