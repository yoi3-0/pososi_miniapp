{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { Component } from 'react';\nimport { getSupportedEvents, coordX, coordY, touchEnabled } from \"../../lib/touch\";\nimport { canUseDOM, withDOM } from \"../../lib/dom\";\nimport { setRef, noop } from \"../../lib/utils\";\nvar events = getSupportedEvents();\n\nvar Touch = /*#__PURE__*/function (_Component) {\n  _inherits(Touch, _Component);\n\n  var _super = _createSuper(Touch);\n\n  function Touch() {\n    var _this;\n\n    _classCallCheck(this, Touch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"didSlide\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"gesture\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnter\", function (e) {\n      if (_this.props.onEnter) {\n        _this.props.onEnter(e);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLeave\", function (e) {\n      if (_this.props.onLeave) {\n        _this.props.onLeave(e);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onStart\", function (e) {\n      _this.gesture = {\n        startX: coordX(e),\n        startY: coordY(e),\n        startT: new Date(),\n        isPressed: true\n      }; // Вызываем нужные колбеки из props\n\n      var outputEvent = _objectSpread(_objectSpread({}, _this.gesture), {}, {\n        originalEvent: e\n      });\n\n      if (_this.props.onStart) {\n        _this.props.onStart(outputEvent);\n      }\n\n      if (_this.props.onStartX) {\n        _this.props.onStartX(outputEvent);\n      }\n\n      if (_this.props.onStartY) {\n        _this.props.onStartY(outputEvent);\n      }\n\n      !touchEnabled && _this.subscribe(_this.document);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMove\", function (e) {\n      var _this$gesture = _this.gesture,\n          isPressed = _this$gesture.isPressed,\n          isX = _this$gesture.isX,\n          isY = _this$gesture.isY,\n          startX = _this$gesture.startX,\n          startY = _this$gesture.startY;\n\n      if (isPressed) {\n        // смещения\n        var shiftX = coordX(e) - startX;\n        var shiftY = coordY(e) - startY; // абсолютные значения смещений\n\n        var shiftXAbs = Math.abs(shiftX);\n        var shiftYAbs = Math.abs(shiftY); // Если определяем мультитач, то прерываем жест\n\n        if (!!e.touches && e.touches.length > 1) {\n          return _this.onEnd(e);\n        } // если мы ещё не определились\n\n\n        if (!isX && !isY) {\n          var willBeX = shiftXAbs >= 5 && shiftXAbs > shiftYAbs;\n          var willBeY = shiftYAbs >= 5 && shiftYAbs > shiftXAbs;\n          var willBeSlidedX = willBeX && !!_this.props.onMoveX || !!_this.props.onMove;\n          var willBeSlidedY = willBeY && !!_this.props.onMoveY || !!_this.props.onMove;\n          _this.gesture.isY = willBeY;\n          _this.gesture.isX = willBeX;\n          _this.gesture.isSlideX = willBeSlidedX;\n          _this.gesture.isSlideY = willBeSlidedY;\n          _this.gesture.isSlide = willBeSlidedX || willBeSlidedY;\n        }\n\n        if (_this.gesture.isSlide) {\n          _this.gesture.shiftX = shiftX;\n          _this.gesture.shiftY = shiftY;\n          _this.gesture.shiftXAbs = shiftXAbs;\n          _this.gesture.shiftYAbs = shiftYAbs; // Вызываем нужные колбеки из props\n\n          var _outputEvent = _objectSpread(_objectSpread({}, _this.gesture), {}, {\n            originalEvent: e\n          });\n\n          if (_this.props.onMove) {\n            _this.props.onMove(_outputEvent);\n          }\n\n          if (_this.gesture.isSlideX && _this.props.onMoveX) {\n            _this.props.onMoveX(_outputEvent);\n          }\n\n          if (_this.gesture.isSlideY && _this.props.onMoveY) {\n            _this.props.onMoveY(_outputEvent);\n          }\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnd\", function (e) {\n      var _this$gesture2 = _this.gesture,\n          isPressed = _this$gesture2.isPressed,\n          isSlide = _this$gesture2.isSlide,\n          isSlideX = _this$gesture2.isSlideX,\n          isSlideY = _this$gesture2.isSlideY;\n\n      if (isPressed) {\n        // Вызываем нужные колбеки из props\n        var _outputEvent2 = _objectSpread(_objectSpread({}, _this.gesture), {}, {\n          originalEvent: e\n        });\n\n        if (_this.props.onEnd) {\n          _this.props.onEnd(_outputEvent2);\n        }\n\n        if (isSlideY && _this.props.onEndY) {\n          _this.props.onEndY(_outputEvent2);\n        }\n\n        if (isSlideX && _this.props.onEndX) {\n          _this.props.onEndX(_outputEvent2);\n        }\n      }\n\n      _this.didSlide = isSlide;\n      _this.gesture = {}; // Если это был тач-евент, симулируем отмену hover\n\n      if (e.type === 'touchend' || e.type === 'touchcancel') {\n        _this.onLeave(e);\n      }\n\n      !touchEnabled && _this.unsubscribe();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unsubscribe\", noop);\n\n    _defineProperty(_assertThisInitialized(_this), \"onDragStart\", function (e) {\n      var target = e.target;\n\n      if (target.tagName === 'A' || target.tagName === 'IMG') {\n        e.preventDefault();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"postGestureClick\", function (e) {\n      var _this$props = _this.props,\n          onClickCapture = _this$props.onClickCapture,\n          noSlideClick = _this$props.noSlideClick;\n\n      if (!_this.didSlide) {\n        return onClickCapture && onClickCapture(e);\n      }\n\n      if (e.target.tagName === 'A') {\n        e.preventDefault();\n      }\n\n      if (noSlideClick) {\n        e.stopPropagation();\n      } else {\n        onClickCapture && onClickCapture(e);\n      }\n\n      _this.didSlide = false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRef\", function (container) {\n      _this.container = container;\n      setRef(container, _this.props.getRootRef);\n    });\n\n    return _this;\n  }\n\n  _createClass(Touch, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (canUseDOM) {\n        this.container.addEventListener(events[0], this.onStart, {\n          capture: this.props.useCapture,\n          passive: false\n        });\n        touchEnabled && this.subscribe(this.container);\n        this.container.addEventListener('mouseenter', this.onEnter, {\n          capture: this.props.useCapture,\n          passive: true\n        });\n        this.container.addEventListener('mouseleave', this.onLeave, {\n          capture: this.props.useCapture,\n          passive: true\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.container.removeEventListener(events[0], this.onStart);\n      this.unsubscribe();\n      this.container.removeEventListener('mouseenter', this.onEnter);\n      this.container.removeEventListener('mouseleave', this.onLeave);\n    }\n    /**\n     * Обработчик событий mouseenter\n     *\n     * @param {Object} e Браузерное событие\n     * @return {void}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(element) {\n      var _this2 = this;\n\n      this.unsubscribe();\n      var listenerParams = {\n        capture: this.props.useCapture,\n        passive: false\n      };\n      element.addEventListener(events[1], this.onMove, listenerParams);\n      element.addEventListener(events[2], this.onEnd, listenerParams);\n      element.addEventListener(events[3], this.onEnd, listenerParams);\n\n      this.unsubscribe = function () {\n        // Здесь нужен последний аргумент с такими же параметрами, потому что\n        // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n        // https://github.com/VKCOM/VKUI/issues/444\n        element.removeEventListener(events[1], _this2.onMove, listenerParams);\n        element.removeEventListener(events[2], _this2.onEnd, listenerParams);\n        element.removeEventListener(events[3], _this2.onEnd, listenerParams);\n        _this2.unsubscribe = noop;\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          onStart = _this$props2.onStart,\n          onStartX = _this$props2.onStartX,\n          onStartY = _this$props2.onStartY,\n          onMove = _this$props2.onMove,\n          onMoveX = _this$props2.onMoveX,\n          onMoveY = _this$props2.onMoveY,\n          onLeave = _this$props2.onLeave,\n          onEnter = _this$props2.onEnter,\n          onEnd = _this$props2.onEnd,\n          onEndX = _this$props2.onEndX,\n          onEndY = _this$props2.onEndY,\n          useCapture = _this$props2.useCapture,\n          Component = _this$props2.Component,\n          getRootRef = _this$props2.getRootRef,\n          noSlideClick = _this$props2.noSlideClick,\n          window = _this$props2.window,\n          document = _this$props2.document,\n          restProps = _objectWithoutProperties(_this$props2, [\"onStart\", \"onStartX\", \"onStartY\", \"onMove\", \"onMoveX\", \"onMoveY\", \"onLeave\", \"onEnter\", \"onEnd\", \"onEndX\", \"onEndY\", \"useCapture\", \"Component\", \"getRootRef\", \"noSlideClick\", \"window\", \"document\"]);\n\n      return createScopedElement(Component, _extends({}, restProps, {\n        onDragStart: this.onDragStart,\n        onClickCapture: this.postGestureClick,\n        ref: this.getRef\n      }), this.props.children);\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.props.document;\n    }\n  }]);\n\n  return Touch;\n}(Component);\n\n_defineProperty(Touch, \"defaultProps\", {\n  Component: 'div',\n  children: '',\n  useCapture: false,\n  noSlideClick: false\n});\n\nexport default withDOM(Touch);","map":{"version":3,"sources":["../../../src/components/Touch/Touch.tsx"],"names":["events","getSupportedEvents","Touch","Component","children","useCapture","noSlideClick","capture","passive","touchEnabled","startX","coordX","startY","coordY","startT","isPressed","outputEvent","originalEvent","e","isX","isY","shiftX","shiftY","shiftXAbs","Math","shiftYAbs","willBeX","willBeY","willBeSlidedX","willBeSlidedY","isSlide","isSlideX","isSlideY","element","listenerParams","noop","target","onClickCapture","setRef","onStart","onStartX","onStartY","onMove","onMoveX","onMoveY","onLeave","onEnter","onEnd","onEndX","onEndY","getRootRef","window","document","restProps","getRef","withDOM"],"mappings":"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","sourcesContent":["import {\n  Component,\n  DragEvent,\n  ElementType,\n  MouseEvent as ReactMouseEvent,\n  RefCallback,\n  AllHTMLAttributes,\n} from 'react';\nimport {\n  getSupportedEvents,\n  coordX,\n  coordY,\n  touchEnabled,\n  VKUITouchEvent,\n  VKUITouchEventHander,\n} from '../../lib/touch';\nimport { HasRootRef } from '../../types';\nimport { canUseDOM, DOMProps, withDOM } from '../../lib/dom';\nimport { setRef, noop } from '../../lib/utils';\n\nexport interface TouchProps extends AllHTMLAttributes<HTMLElement>, HasRootRef<HTMLElement> {\n  onEnter?(outputEvent: MouseEvent): void;\n  onLeave?(outputEvent: MouseEvent): void;\n  onStart?(outputEvent: TouchEvent): void;\n  onStartX?(outputEvent: TouchEvent): void;\n  onStartY?(outputEvent: TouchEvent): void;\n  onMove?(outputEvent: TouchEvent): void;\n  onMoveX?(outputEvent: TouchEvent): void;\n  onMoveY?(outputEvent: TouchEvent): void;\n  onEnd?(outputEvent: TouchEvent): void;\n  onEndX?(outputEvent: TouchEvent): void;\n  onEndY?(outputEvent: TouchEvent): void;\n  useCapture?: boolean;\n  noSlideClick?: boolean;\n  Component?: ElementType;\n}\n\nexport interface Gesture {\n  startX?: number;\n  startY?: number;\n  startT?: Date;\n  isPressed?: boolean;\n  isY?: boolean;\n  isX?: boolean;\n  isSlideX?: boolean;\n  isSlideY?: boolean;\n  isSlide?: boolean;\n  shiftX?: number;\n  shiftY?: number;\n  shiftXAbs?: number;\n  shiftYAbs?: number;\n}\n\nexport interface TouchEvent extends Gesture {\n  originalEvent: VKUITouchEvent;\n}\n\nexport type TouchEventHandler = (e: TouchEvent) => void;\nexport type ClickHandler = (e: ReactMouseEvent<HTMLElement>) => void;\nexport type DragHandler = (e: DragEvent<HTMLElement>) => void;\n\nconst events = getSupportedEvents();\n\nclass Touch extends Component<TouchProps & DOMProps> {\n  didSlide = false;\n  gesture: Partial<Gesture> = {};\n  container: HTMLElement;\n\n  static defaultProps: TouchProps = {\n    Component: 'div',\n    children: '',\n    useCapture: false,\n    noSlideClick: false,\n  };\n\n  get document() {\n    return this.props.document;\n  }\n\n  componentDidMount() {\n    if (canUseDOM) {\n      this.container.addEventListener(events[0], this.onStart, { capture: this.props.useCapture, passive: false });\n      touchEnabled && this.subscribe(this.container);\n\n      this.container.addEventListener('mouseenter', this.onEnter, { capture: this.props.useCapture, passive: true });\n      this.container.addEventListener('mouseleave', this.onLeave, { capture: this.props.useCapture, passive: true });\n    }\n  }\n\n  componentWillUnmount() {\n    this.container.removeEventListener(events[0], this.onStart);\n    this.unsubscribe();\n\n    this.container.removeEventListener('mouseenter', this.onEnter);\n    this.container.removeEventListener('mouseleave', this.onLeave);\n  }\n\n  /**\n   * Обработчик событий mouseenter\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  onEnter = (e: MouseEvent) => {\n    if (this.props.onEnter) {\n      this.props.onEnter(e);\n    }\n  };\n\n  /**\n   * Обработчик событий mouseleave\n   *\n   * @param {Object} e Браузерное событие\n   * @param {boolean} simulated флаг, с которым обработчик был вызван симулятивно\n   * @return {void}\n   */\n  onLeave = (e: MouseEvent) => {\n    if (this.props.onLeave) {\n      this.props.onLeave(e);\n    }\n  };\n\n  /**\n   * Обработчик событий touchstart\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  onStart: VKUITouchEventHander = (e: VKUITouchEvent) => {\n    this.gesture = {\n      startX: coordX(e),\n      startY: coordY(e),\n      startT: new Date(),\n      isPressed: true,\n    };\n\n    // Вызываем нужные колбеки из props\n    const outputEvent = {\n      ...this.gesture,\n      originalEvent: e,\n    };\n\n    if (this.props.onStart) {\n      this.props.onStart(outputEvent);\n    }\n\n    if (this.props.onStartX) {\n      this.props.onStartX(outputEvent);\n    }\n\n    if (this.props.onStartY) {\n      this.props.onStartY(outputEvent);\n    }\n\n    !touchEnabled && this.subscribe(this.document);\n  };\n\n  /**\n   * Обработчик событий touchmove\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  onMove: VKUITouchEventHander = (e: VKUITouchEvent) => {\n    const { isPressed, isX, isY, startX, startY } = this.gesture;\n\n    if (isPressed) {\n      // смещения\n      const shiftX = coordX(e) - startX;\n      const shiftY = coordY(e) - startY;\n\n      // абсолютные значения смещений\n      const shiftXAbs = Math.abs(shiftX);\n      const shiftYAbs = Math.abs(shiftY);\n\n      // Если определяем мультитач, то прерываем жест\n      if (!!e.touches && e.touches.length > 1) {\n        return this.onEnd(e);\n      }\n\n      // если мы ещё не определились\n      if (!isX && !isY) {\n        let willBeX = shiftXAbs >= 5 && shiftXAbs > shiftYAbs;\n        let willBeY = shiftYAbs >= 5 && shiftYAbs > shiftXAbs;\n        let willBeSlidedX = willBeX && !!this.props.onMoveX || !!this.props.onMove;\n        let willBeSlidedY = willBeY && !!this.props.onMoveY || !!this.props.onMove;\n\n        this.gesture.isY = willBeY;\n        this.gesture.isX = willBeX;\n        this.gesture.isSlideX = willBeSlidedX;\n        this.gesture.isSlideY = willBeSlidedY;\n        this.gesture.isSlide = willBeSlidedX || willBeSlidedY;\n      }\n\n      if (this.gesture.isSlide) {\n        this.gesture.shiftX = shiftX;\n        this.gesture.shiftY = shiftY;\n        this.gesture.shiftXAbs = shiftXAbs;\n        this.gesture.shiftYAbs = shiftYAbs;\n\n        // Вызываем нужные колбеки из props\n        const outputEvent: TouchEvent = {\n          ...this.gesture,\n          originalEvent: e,\n        };\n\n        if (this.props.onMove) {\n          this.props.onMove(outputEvent);\n        }\n\n        if (this.gesture.isSlideX && this.props.onMoveX) {\n          this.props.onMoveX(outputEvent);\n        }\n\n        if (this.gesture.isSlideY && this.props.onMoveY) {\n          this.props.onMoveY(outputEvent);\n        }\n      }\n    }\n  };\n\n  /**\n   * Обработчик событий touchend, touchcancel\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  onEnd: VKUITouchEventHander = (e: VKUITouchEvent) => {\n    const { isPressed, isSlide, isSlideX, isSlideY } = this.gesture;\n\n    if (isPressed) {\n      // Вызываем нужные колбеки из props\n      const outputEvent: TouchEvent = {\n        ...this.gesture,\n        originalEvent: e,\n      };\n\n      if (this.props.onEnd) {\n        this.props.onEnd(outputEvent);\n      }\n\n      if (isSlideY && this.props.onEndY) {\n        this.props.onEndY(outputEvent);\n      }\n\n      if (isSlideX && this.props.onEndX) {\n        this.props.onEndX(outputEvent);\n      }\n    }\n\n    this.didSlide = isSlide;\n    this.gesture = {};\n\n    // Если это был тач-евент, симулируем отмену hover\n    if (e.type === 'touchend' || e.type === 'touchcancel') {\n      this.onLeave(e);\n    }\n\n    !touchEnabled && this.unsubscribe();\n  };\n\n  subscribe(element: HTMLElement | Document) {\n    this.unsubscribe();\n    const listenerParams = { capture: this.props.useCapture, passive: false };\n    element.addEventListener(events[1], this.onMove, listenerParams);\n    element.addEventListener(events[2], this.onEnd, listenerParams);\n    element.addEventListener(events[3], this.onEnd, listenerParams);\n    this.unsubscribe = () => {\n      // Здесь нужен последний аргумент с такими же параметрами, потому что\n      // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n      // https://github.com/VKCOM/VKUI/issues/444\n      element.removeEventListener(events[1], this.onMove, listenerParams);\n      element.removeEventListener(events[2], this.onEnd, listenerParams);\n      element.removeEventListener(events[3], this.onEnd, listenerParams);\n      this.unsubscribe = noop;\n    };\n  }\n  unsubscribe = noop;\n\n  /**\n   * Обработчик событий dragstart\n   * Отменяет нативное браузерное поведение для вложенных ссылок и изображений\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  onDragStart: DragHandler = (e: DragEvent<HTMLElement>) => {\n    const target = e.target as HTMLElement;\n    if (target.tagName === 'A' || target.tagName === 'IMG') {\n      e.preventDefault();\n    }\n  };\n\n  /**\n   * Обработчик клика по компоненту\n   * Отменяет переход по вложенной ссылке, если был зафиксирован свайп\n   *\n   * @param {Object} e Браузерное событие\n   * @return {void}\n   */\n  postGestureClick: ClickHandler = (e) => {\n    const { onClickCapture, noSlideClick } = this.props;\n    if (!this.didSlide) {\n      return onClickCapture && onClickCapture(e);\n    }\n    if ((e.target as HTMLElement).tagName === 'A') {\n      e.preventDefault();\n    }\n    if (noSlideClick) {\n      e.stopPropagation();\n    } else {\n      onClickCapture && onClickCapture(e);\n    }\n    this.didSlide = false;\n  };\n\n  getRef: RefCallback<HTMLElement> = (container) => {\n    this.container = container;\n    setRef(container, this.props.getRootRef);\n  };\n\n  render() {\n    const {\n      onStart,\n      onStartX,\n      onStartY,\n      onMove,\n      onMoveX,\n      onMoveY,\n      onLeave,\n      onEnter,\n      onEnd,\n      onEndX,\n      onEndY,\n      useCapture,\n      Component,\n      getRootRef,\n      noSlideClick,\n      window,\n      document,\n      ...restProps\n    } = this.props;\n\n    return (\n      <Component\n        {...restProps}\n        onDragStart={this.onDragStart}\n        onClickCapture={this.postGestureClick}\n        ref={this.getRef}\n      >\n        {this.props.children}\n      </Component>\n    );\n  }\n}\n\nexport default withDOM<TouchProps>(Touch);\n"]},"metadata":{},"sourceType":"module"}