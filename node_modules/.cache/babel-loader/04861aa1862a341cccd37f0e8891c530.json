{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport React, { Component, createRef } from 'react';\nimport Touch from \"../Touch/Touch\";\nimport TouchRootContext from \"../Touch/TouchContext\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { setTransformStyle } from \"../../lib/styles\";\nimport { rubber } from \"../../lib/touch\";\nimport { isFunction } from \"../../lib/utils\";\nimport { ANDROID, IOS, VKCOM } from \"../../lib/platform\";\nimport { transitionEvent } from \"../../lib/supportEvents\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { withContext } from \"../../hoc/withContext\";\nimport ModalRootContext from \"./ModalRootContext\";\nimport { ConfigProviderContext, WebviewType } from \"../ConfigProvider/ConfigProviderContext\";\nimport { ModalType } from \"./types\";\nimport { MODAL_PAGE_DEFAULT_PERCENT_HEIGHT } from \"./constants\";\nimport { withDOM } from \"../../lib/dom\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nvar warn = warnOnce('ModalRoot');\nvar IS_DEV = process.env.NODE_ENV === 'development';\n\nfunction numberInRange(number, range) {\n  return number >= range[0] && number <= range[1];\n}\n\nfunction rangeTranslate(number) {\n  return Math.max(0, Math.min(98, number));\n}\n\nvar ModalRootTouchComponent = /*#__PURE__*/function (_Component) {\n  _inherits(ModalRootTouchComponent, _Component);\n\n  var _super = _createSuper(ModalRootTouchComponent);\n\n  function ModalRootTouchComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ModalRootTouchComponent);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"modalsState\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"documentScrolling\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"activeTransitions\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maskElementRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"viewportRef\", /*#__PURE__*/createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"maskAnimationFrame\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"modalRootContext\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"frameIds\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"preventTouch\", function (event) {\n      if (!event) {\n        return false;\n      }\n\n      while (event.originalEvent) {\n        event = event.originalEvent;\n      }\n\n      if (event.preventDefault) {\n        event.preventDefault();\n      }\n\n      return false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateModalTranslate\", function () {\n      var activeModal = _this.state.activeModal || _this.state.nextModal;\n\n      if (!activeModal) {\n        return;\n      }\n\n      var modalState = _this.modalsState[activeModal];\n\n      _this.animateTranslate(modalState, modalState.translateY);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateModalHeight\", function () {\n      var _this$state = _this.state,\n          activeModal = _this$state.activeModal,\n          nextModal = _this$state.nextModal;\n      var modalId = activeModal || nextModal;\n      var modalState = modalId ? _this.modalsState[modalId] : undefined;\n\n      if (modalState && modalState.type === ModalType.PAGE && modalState.dynamicContentHeight) {\n        if (_this.state.switching) {\n          _this.waitTransitionFinish(modalState, function () {\n            requestAnimationFrame(function () {\n              return _this.checkPageContentHeight();\n            });\n          });\n        } else {\n          requestAnimationFrame(function () {\n            return _this.checkPageContentHeight();\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchMove\", function (e) {\n      if (_this.state.switching) {\n        return;\n      }\n\n      var activeModal = _this.state.activeModal || _this.state.nextModal;\n\n      if (!activeModal) {\n        return;\n      }\n\n      var modalState = _this.modalsState[activeModal];\n\n      if (modalState.type === ModalType.PAGE) {\n        return _this.onPageTouchMove(e, modalState);\n      }\n\n      if (modalState.type === ModalType.CARD) {\n        return _this.onCardTouchMove(e, modalState);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchEnd\", function (e) {\n      var activeModal = _this.state.activeModal || _this.state.nextModal;\n\n      if (!activeModal) {\n        return;\n      }\n\n      var modalState = _this.modalsState[activeModal];\n\n      if (modalState.type === ModalType.PAGE) {\n        return _this.onPageTouchEnd(e, modalState);\n      }\n\n      if (modalState.type === ModalType.CARD) {\n        return _this.onCardTouchEnd(modalState);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onScroll\", function (e) {\n      var activeModal = _this.state.activeModal;\n      var target = e.target;\n\n      if (!activeModal) {\n        return;\n      }\n\n      var modalState = _this.modalsState[activeModal];\n\n      if (modalState.type === ModalType.PAGE && modalState.contentElement.contains(target)) {\n        modalState.contentScrolled = true;\n        clearTimeout(modalState.contentScrollStopTimeout);\n        modalState.contentScrollStopTimeout = window.setTimeout(function () {\n          if (modalState.contentScrolled) {\n            modalState.contentScrolled = false;\n          }\n        }, 250);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"prevNextSwitchEndHandler\", function () {\n      _this.activeTransitions = Math.max(0, _this.activeTransitions - 1);\n\n      if (_this.activeTransitions > 0) {\n        return;\n      }\n\n      var activeModal = _this.state.nextModal;\n      var newState = {\n        prevModal: null,\n        nextModal: null,\n        visibleModals: [activeModal],\n        activeModal: activeModal,\n        animated: false,\n        switching: false\n      };\n\n      if (!activeModal) {\n        newState.history = [];\n      }\n\n      _this.setState(newState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerActiveModalClose\", function () {\n      var activeModalState = _this.modalsState[_this.state.activeModal];\n\n      if (activeModalState) {\n        _this.doCloseModal(activeModalState);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"doCloseModal\", function (modalState) {\n      // Сбрасываем состояния, которые могут помешать закрытию модального окна\n      _this.setState({\n        touchDown: false,\n        switching: false\n      });\n\n      if (isFunction(modalState.onClose)) {\n        modalState.onClose();\n      } else if (isFunction(_this.props.onClose)) {\n        _this.props.onClose(modalState.id);\n      } else if (IS_DEV) {\n        warn('onClose is undefined');\n      }\n    });\n\n    var _activeModal = props.activeModal;\n    _this.state = {\n      activeModal: null,\n      prevModal: null,\n      nextModal: _activeModal,\n      visibleModals: _activeModal ? [_activeModal] : [],\n      animated: !!_activeModal,\n      switching: false,\n      history: _activeModal ? [_activeModal] : [],\n      isBack: false,\n      inited: false,\n      touchDown: false,\n      dragging: false\n    };\n    _this.activeTransitions = 0;\n    _this.maskElementRef = /*#__PURE__*/React.createRef();\n\n    _this.initModalsState();\n\n    _this.modalRootContext = {\n      updateModalHeight: _this.updateModalHeight,\n      registerModal: function registerModal(_ref) {\n        var id = _ref.id,\n            data = _objectWithoutProperties(_ref, [\"id\"]);\n\n        return Object.assign(_this.modalsState[id], data);\n      },\n      onClose: _this.triggerActiveModalClose,\n      isInsideModal: true\n    };\n    _this.frameIds = {};\n    return _this;\n  }\n\n  _createClass(ModalRootTouchComponent, [{\n    key: \"getModals\",\n    value: function getModals() {\n      return React.Children.toArray(this.props.children);\n    }\n  }, {\n    key: \"initModalsState\",\n    value: function initModalsState() {\n      this.modalsState = this.getModals().reduce(function (acc, Modal) {\n        var modalProps = Modal.props;\n        var state = {\n          id: getNavId(modalProps, warn),\n          onClose: Modal.props.onClose,\n          dynamicContentHeight: !!modalProps.dynamicContentHeight\n        }; // ModalPage props\n\n        if (typeof modalProps.settlingHeight === 'number') {\n          state.settlingHeight = modalProps.settlingHeight;\n        }\n\n        acc[state.id] = state;\n        return acc;\n      }, {});\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initActiveModal();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.toggleDocumentScrolling(true);\n\n      if (this.props.platform === IOS) {\n        this.window.removeEventListener('resize', this.updateModalTranslate, false);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      if (this.props.activeModal !== prevProps.activeModal && !this.state.switching) {\n        var nextModal = this.props.activeModal;\n        var prevModal = prevProps.activeModal;\n\n        if (IS_DEV && nextModal !== null && !this.modalsState[nextModal]) {\n          return warn(\"[componentDidUpdate] nextModal \".concat(nextModal, \" not found\"));\n        }\n\n        var history = _toConsumableArray(this.state.history);\n\n        var isBack = false;\n\n        if (nextModal === null) {\n          history = [];\n        } else if (history.includes(nextModal)) {\n          history = history.splice(0, history.indexOf(nextModal) + 1);\n          isBack = true;\n        } else {\n          history.push(nextModal);\n        }\n\n        return this.setState({\n          activeModal: null,\n          nextModal: nextModal,\n          prevModal: prevModal,\n          visibleModals: [nextModal, prevModal],\n          history: history,\n          isBack: isBack,\n          animated: true,\n          inited: false,\n          switching: false\n        }, function () {\n          if (nextModal === null) {\n            _this2.closeActiveModal();\n          } else {\n            _this2.initActiveModal();\n          }\n        });\n      }\n\n      if (this.state.switching && !prevState.switching) {\n        requestAnimationFrame(function () {\n          return _this2.switchPrevNext();\n        });\n      }\n\n      if (!this.state.activeModal && !this.state.prevModal && !this.state.nextModal) {\n        this.toggleDocumentScrolling(true);\n      } else {\n        this.toggleDocumentScrolling(false);\n      }\n    }\n    /* Отключает скролл документа */\n\n  }, {\n    key: \"toggleDocumentScrolling\",\n    value: function toggleDocumentScrolling(enabled) {\n      if (this.documentScrolling === enabled) {\n        return;\n      }\n\n      this.documentScrolling = enabled;\n\n      if (enabled) {\n        // Здесь нужен последний аргумент с такими же параметрами, потому что\n        // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n        // https://github.com/VKCOM/VKUI/issues/444\n        // @ts-ignore (В интерфейсе EventListenerOptions нет поля passive)\n        this.window.removeEventListener('touchmove', this.preventTouch, {\n          passive: false\n        });\n      } else {\n        this.window.addEventListener('touchmove', this.preventTouch, {\n          passive: false\n        });\n      }\n    }\n  }, {\n    key: \"initActiveModal\",\n\n    /**\n     * Инициализирует модалку перед анимацией открытия\n     */\n    value: function initActiveModal() {\n      var activeModal = this.state.activeModal || this.state.nextModal;\n\n      if (!activeModal) {\n        return;\n      }\n\n      var modalState = this.modalsState[activeModal]; // Отслеживаем изменение размеров viewport (Необходимо для iOS)\n\n      if (this.props.platform === IOS) {\n        this.window.addEventListener('resize', this.updateModalTranslate, false);\n      }\n\n      switch (modalState.type) {\n        case ModalType.PAGE:\n          modalState.settlingHeight = modalState.settlingHeight || MODAL_PAGE_DEFAULT_PERCENT_HEIGHT;\n          this.initPageModal(modalState);\n          break;\n\n        case ModalType.CARD:\n          this.initCardModal(modalState);\n          break;\n\n        default:\n          if (IS_DEV) {\n            warn('[initActiveModal] modalState.type is unknown');\n          }\n\n      }\n\n      this.setState({\n        inited: true,\n        switching: true\n      });\n    }\n  }, {\n    key: \"initPageModal\",\n    value: function initPageModal(modalState) {\n      var contentElement = modalState.contentElement;\n      var contentHeight = contentElement.firstElementChild.offsetHeight;\n      var prevTranslateY = modalState.translateY;\n      modalState.expandable = contentHeight > contentElement.clientHeight || modalState.settlingHeight === 100;\n      var collapsed = false;\n      var expanded = false;\n      var translateYFrom;\n      var translateY;\n      var expandedRange;\n      var collapsedRange;\n      var hiddenRange;\n\n      if (modalState.expandable) {\n        translateYFrom = 100 - modalState.settlingHeight;\n        var shiftHalf = translateYFrom / 2;\n        var visiblePart = 100 - translateYFrom;\n        expandedRange = [0, shiftHalf];\n        collapsedRange = [shiftHalf, translateYFrom + visiblePart / 4];\n        hiddenRange = [translateYFrom + visiblePart / 4, 100];\n        collapsed = translateYFrom > 0;\n        expanded = translateYFrom <= 0;\n        translateY = translateYFrom;\n      } else {\n        var headerHeight = modalState.headerElement.offsetHeight;\n        var height = contentHeight + headerHeight;\n        translateYFrom = 100 - height / modalState.innerElement.parentElement.offsetHeight * 100;\n        translateY = translateYFrom;\n        expandedRange = [translateY, translateY + 25];\n        collapsedRange = [translateY + 25, translateY + 25];\n        hiddenRange = [translateY + 25, translateY + 100];\n      } // Если модалка может открываться на весь экран, и новый сдвиг больше предыдущего, то откроем её на весь экран\n\n\n      if (modalState.expandable && translateY > prevTranslateY || modalState.settlingHeight === 100) {\n        translateY = 0;\n      }\n\n      modalState.expandedRange = expandedRange;\n      modalState.collapsedRange = collapsedRange;\n      modalState.hiddenRange = hiddenRange;\n      modalState.translateY = translateY;\n      modalState.translateYFrom = translateYFrom;\n      modalState.collapsed = collapsed;\n      modalState.expanded = expanded;\n    }\n  }, {\n    key: \"initCardModal\",\n    value: function initCardModal(modalState) {\n      modalState.translateY = 0;\n    }\n  }, {\n    key: \"checkPageContentHeight\",\n    value: function checkPageContentHeight() {\n      var _this$state2 = this.state,\n          activeModal = _this$state2.activeModal,\n          nextModal = _this$state2.nextModal;\n      var modalId = activeModal || nextModal;\n      var modalState = this.modalsState[modalId];\n\n      if ((modalState === null || modalState === void 0 ? void 0 : modalState.type) === ModalType.PAGE && (modalState === null || modalState === void 0 ? void 0 : modalState.modalElement)) {\n        var prevModalState = _objectSpread({}, modalState);\n\n        this.initPageModal(modalState);\n\n        var currentModalState = _objectSpread({}, modalState);\n\n        var needAnimate = false;\n\n        if (prevModalState.expandable === currentModalState.expandable) {\n          if (prevModalState.translateYFrom !== currentModalState.translateYFrom) {\n            needAnimate = true;\n          }\n        } else {\n          needAnimate = true;\n        }\n\n        if (needAnimate) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n      }\n    }\n  }, {\n    key: \"closeActiveModal\",\n    value: function closeActiveModal() {\n      // Сбрасываем состояния, которые могут помешать закрытию модального окна\n      this.setState({\n        touchDown: false,\n        switching: false\n      });\n\n      if (this.props.platform === IOS) {\n        this.window.removeEventListener('resize', this.updateModalTranslate, false);\n      }\n\n      var prevModal = this.state.prevModal;\n\n      if (!prevModal) {\n        return warn(\"[closeActiveModal] prevModal is \".concat(prevModal));\n      }\n\n      var prevModalState = this.modalsState[prevModal];\n      this.waitTransitionFinish(prevModalState, this.prevNextSwitchEndHandler);\n      this.animateTranslate(prevModalState, 100);\n      this.setMaskOpacity(prevModalState, 0);\n    }\n  }, {\n    key: \"onPageTouchMove\",\n    value: function onPageTouchMove(event, modalState) {\n      var shiftY = event.shiftY,\n          startT = event.startT,\n          originalEvent = event.originalEvent;\n      var target = originalEvent.target;\n\n      if (!event.isY) {\n        if (this.viewportRef.current.contains(target)) {\n          originalEvent.preventDefault();\n        }\n\n        return;\n      }\n\n      if (!modalState.innerElement.contains(target)) {\n        return originalEvent.preventDefault();\n      }\n\n      originalEvent.stopPropagation();\n      var expandable = modalState.expandable,\n          contentScrolled = modalState.contentScrolled,\n          collapsed = modalState.collapsed,\n          expanded = modalState.expanded;\n\n      if (!this.state.touchDown) {\n        modalState.touchStartTime = startT;\n        modalState.touchStartContentScrollTop = modalState.contentElement.scrollTop;\n        this.setState({\n          touchDown: true\n        });\n      }\n\n      if (contentScrolled) {\n        return;\n      }\n\n      if (modalState.touchMovePositive === null) {\n        modalState.touchMovePositive = shiftY > 0;\n      }\n\n      if (!modalState.expandable || collapsed || expanded && modalState.touchMovePositive && modalState.touchStartContentScrollTop === 0 || modalState.headerElement.contains(target)) {\n        originalEvent.preventDefault();\n\n        if (!expandable && shiftY < 0) {\n          return;\n        }\n\n        !this.state.dragging && this.setState({\n          dragging: true\n        });\n        var shiftYPercent = shiftY / this.window.innerHeight * 100;\n        var shiftYCurrent = rubber(shiftYPercent, 72, 0.8, this.props.platform === ANDROID || this.props.platform === VKCOM);\n        modalState.touchShiftYPercent = shiftYPercent;\n        modalState.translateYCurrent = rangeTranslate(modalState.translateY + shiftYCurrent);\n        this.animateTranslate(modalState, modalState.translateYCurrent);\n        this.setMaskOpacity(modalState);\n      }\n    }\n  }, {\n    key: \"onCardTouchMove\",\n    value: function onCardTouchMove(event, modalState) {\n      var originalEvent = event.originalEvent,\n          shiftY = event.shiftY,\n          startT = event.startT;\n      var target = originalEvent.target;\n\n      if (modalState.innerElement.contains(target)) {\n        if (!this.state.touchDown) {\n          modalState.touchStartTime = startT;\n          this.setState({\n            touchDown: true,\n            dragging: true\n          });\n        }\n\n        var shiftYPercent = shiftY / modalState.innerElement.offsetHeight * 100;\n        var shiftYCurrent = rubber(shiftYPercent, 72, 1.2, this.props.platform === ANDROID || this.props.platform === VKCOM);\n        modalState.touchShiftYPercent = shiftYPercent;\n        modalState.translateYCurrent = Math.max(0, modalState.translateY + shiftYCurrent);\n        this.animateTranslate(modalState, modalState.translateYCurrent);\n        this.setMaskOpacity(modalState);\n      }\n    }\n  }, {\n    key: \"onPageTouchEnd\",\n    value: function onPageTouchEnd(event, modalState) {\n      var _this3 = this;\n\n      var startY = event.startY,\n          shiftY = event.shiftY;\n      modalState.contentScrolled = false;\n      modalState.touchMovePositive = null;\n      var setStateCallback;\n\n      if (this.state.dragging) {\n        var shiftYEndPercent = (startY + shiftY) / this.window.innerHeight * 100;\n        var translateY = modalState.translateYCurrent;\n        var expectTranslateY = translateY / (Date.now() - modalState.touchStartTime.getTime()) * 240 * 0.6 * (modalState.touchShiftYPercent < 0 ? -1 : 1);\n        translateY = rangeTranslate(translateY + expectTranslateY);\n\n        if (modalState.settlingHeight !== 100) {\n          if (numberInRange(translateY, modalState.expandedRange)) {\n            translateY = modalState.expandedRange[0];\n          } else if (numberInRange(translateY, modalState.collapsedRange)) {\n            translateY = modalState.translateYFrom;\n          } else if (numberInRange(translateY, modalState.hiddenRange)) {\n            translateY = 100;\n          } else {\n            translateY = modalState.translateYFrom;\n          }\n        } else {\n          if (numberInRange(translateY, [0, 25])) {\n            translateY = 0;\n          } else {\n            translateY = 100;\n          }\n        }\n\n        if (translateY !== 100 && shiftYEndPercent >= 75) {\n          translateY = 100;\n        }\n\n        modalState.translateY = translateY;\n        modalState.translateYCurrent = translateY;\n        modalState.collapsed = translateY > 0 && translateY < shiftYEndPercent;\n        modalState.expanded = translateY === 0;\n        modalState.hidden = translateY === 100;\n\n        if (modalState.hidden) {\n          this.doCloseModal(modalState);\n        }\n\n        setStateCallback = function setStateCallback() {\n          if (!modalState.hidden) {\n            _this3.animateTranslate(modalState, modalState.translateY);\n          }\n\n          _this3.setMaskOpacity(modalState);\n        };\n      }\n\n      this.setState({\n        touchDown: false,\n        dragging: false\n      }, setStateCallback);\n    }\n  }, {\n    key: \"onCardTouchEnd\",\n    value: function onCardTouchEnd(modalState) {\n      var _this4 = this;\n\n      var setStateCallback;\n\n      if (this.state.dragging) {\n        var translateY = modalState.translateYCurrent;\n        var expectTranslateY = translateY / (Date.now() - modalState.touchStartTime.getTime()) * 240 * 0.6 * (modalState.touchShiftYPercent < 0 ? -1 : 1);\n        translateY = Math.max(0, translateY + expectTranslateY);\n\n        if (translateY >= 30) {\n          translateY = 100;\n        } else {\n          translateY = 0;\n        }\n\n        modalState.translateY = translateY;\n        modalState.hidden = translateY === 100;\n\n        if (modalState.hidden) {\n          this.doCloseModal(modalState);\n        }\n\n        setStateCallback = function setStateCallback() {\n          if (!modalState.hidden) {\n            _this4.animateTranslate(modalState, modalState.translateY);\n          }\n\n          _this4.setMaskOpacity(modalState);\n        };\n      }\n\n      this.setState({\n        touchDown: false,\n        dragging: false\n      }, setStateCallback);\n    }\n  }, {\n    key: \"waitTransitionFinish\",\n    value: function waitTransitionFinish(modalState, eventHandler) {\n      if (transitionEvent.supported) {\n        var onceHandler = function onceHandler() {\n          modalState.innerElement.removeEventListener(transitionEvent.name, onceHandler);\n          eventHandler();\n        };\n\n        modalState.innerElement.addEventListener(transitionEvent.name, onceHandler);\n      } else {\n        setTimeout(eventHandler, this.props.platform === ANDROID || this.props.platform === VKCOM ? 320 : 400);\n      }\n    }\n  }, {\n    key: \"switchPrevNext\",\n    value: function switchPrevNext() {\n      var _this5 = this;\n\n      var _this$state3 = this.state,\n          prevModal = _this$state3.prevModal,\n          nextModal = _this$state3.nextModal;\n      var prevModalState = this.modalsState[prevModal];\n      var nextModalState = this.modalsState[nextModal];\n\n      if (IS_DEV && !prevModalState && !nextModalState) {\n        return warn(\"[switchPrevNext] prevModal is \".concat(prevModal, \", nextModal is \").concat(nextModal));\n      }\n\n      var prevIsPage = !!prevModalState && prevModalState.type === ModalType.PAGE;\n      var prevIsCard = !!prevModalState && prevModalState.type === ModalType.CARD;\n      var nextIsPage = !!nextModalState && nextModalState.type === ModalType.PAGE;\n      var nextIsCard = !!nextModalState && nextModalState.type === ModalType.CARD; // Ждём полного скрытия предыдущей модалки\n\n      if (prevModalState && (nextIsCard || prevIsCard && nextIsPage)) {\n        this.waitTransitionFinish(prevModalState, function () {\n          _this5.activeTransitions += 1;\n\n          _this5.waitTransitionFinish(nextModalState, _this5.prevNextSwitchEndHandler);\n\n          _this5.animateTranslate(nextModalState, nextModalState.translateY);\n        });\n        return this.animateTranslate(prevModalState, 100);\n      }\n\n      if (prevModalState && nextIsPage) {\n        this.activeTransitions += 1;\n        this.waitTransitionFinish(prevModalState, this.prevNextSwitchEndHandler);\n\n        if (prevIsPage && prevModalState.translateY <= nextModalState.translateYFrom && !this.state.isBack) {\n          this.animateTranslate(prevModalState, nextModalState.translateYFrom + 10);\n        } else {\n          this.animateTranslate(prevModalState, 100);\n        }\n      }\n\n      this.activeTransitions += 1;\n      this.waitTransitionFinish(nextModalState, this.prevNextSwitchEndHandler);\n      this.animateTranslate(nextModalState, nextModalState.translateY);\n    }\n  }, {\n    key: \"animateTranslate\",\n\n    /**\n     * Анимирует сдвиг модалки\n     *\n     * @param {ModalsStateEntry} modalState\n     * @param {number} percent Процент сдвига: 0 – полностью открыта, 100 – полностью закрыта\n     */\n    value: function animateTranslate(modalState, percent) {\n      var frameId = \"animateTranslateFrame\".concat(modalState.id);\n      cancelAnimationFrame(this.frameIds[frameId]);\n      this.frameIds[frameId] = requestAnimationFrame(function () {\n        setTransformStyle(modalState.innerElement, \"translate3d(0, \".concat(percent, \"%, 0)\"));\n\n        if (modalState.type === ModalType.PAGE && modalState.footerElement) {\n          var footerHeight = modalState.footerElement.offsetHeight;\n          var factor = modalState.innerElement.offsetHeight * (percent / 100);\n          setTransformStyle(modalState.footerElement, \"translateY(calc(\".concat(footerHeight, \"px * -\").concat(factor / footerHeight, \"))\"));\n        }\n      });\n    }\n    /* Устанавливает прозрачность для полупрозрачной подложки */\n\n  }, {\n    key: \"setMaskOpacity\",\n    value: function setMaskOpacity(modalState) {\n      var _this6 = this;\n\n      var forceOpacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (forceOpacity === null && this.state.history[0] !== modalState.id) {\n        return;\n      }\n\n      cancelAnimationFrame(this.maskAnimationFrame);\n      this.maskAnimationFrame = requestAnimationFrame(function () {\n        if (_this6.maskElementRef.current) {\n          var translateY = modalState.translateY,\n              translateYCurrent = modalState.translateYCurrent;\n          var opacity = forceOpacity === null ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0 : forceOpacity;\n          _this6.maskElementRef.current.style.opacity = Math.max(0, Math.min(100, opacity)).toString();\n        }\n      });\n    }\n    /**\n     * Закрывает текущую модалку\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var _this$state4 = this.state,\n          prevModal = _this$state4.prevModal,\n          activeModal = _this$state4.activeModal,\n          nextModal = _this$state4.nextModal,\n          visibleModals = _this$state4.visibleModals,\n          animated = _this$state4.animated,\n          touchDown = _this$state4.touchDown,\n          dragging = _this$state4.dragging,\n          switching = _this$state4.switching;\n\n      if (!activeModal && !prevModal && !nextModal && !animated) {\n        return null;\n      }\n\n      return createScopedElement(TouchRootContext.Provider, {\n        value: true\n      }, createScopedElement(ModalRootContext.Provider, {\n        value: this.modalRootContext\n      }, createScopedElement(Touch, {\n        vkuiClass: classNames(getClassName('ModalRoot', this.props.platform), {\n          'ModalRoot--vkapps': this.props.configProvider.webviewType === WebviewType.VKAPPS,\n          'ModalRoot--touched': touchDown,\n          'ModalRoot--switching': switching\n        }),\n        onMove: this.onTouchMove,\n        onEnd: this.onTouchEnd,\n        onScroll: this.onScroll\n      }, createScopedElement(\"div\", {\n        vkuiClass: \"ModalRoot__mask\",\n        onClick: this.triggerActiveModalClose,\n        ref: this.maskElementRef\n      }), createScopedElement(\"div\", {\n        vkuiClass: \"ModalRoot__viewport\",\n        ref: this.viewportRef\n      }, this.getModals().map(function (Modal) {\n        var modalId = getNavId(Modal.props, warn);\n\n        if (!visibleModals.includes(modalId)) {\n          return null;\n        }\n\n        var modalState = _objectSpread({}, _this7.modalsState[modalId]);\n\n        var isPage = modalState.type === ModalType.PAGE;\n        var key = \"modal-\".concat(modalId);\n        return createScopedElement(\"div\", {\n          key: key,\n          ref: function ref(e) {\n            return _this7.modalsState[modalId].modalElement = e;\n          },\n          vkuiClass: classNames('ModalRoot__modal', {\n            'ModalRoot__modal--active': modalId === activeModal,\n            'ModalRoot__modal--prev': modalId === prevModal,\n            'ModalRoot__modal--next': modalId === nextModal,\n            'ModalRoot__modal--dragging': dragging,\n            'ModalRoot__modal--expandable': isPage && modalState.expandable,\n            'ModalRoot__modal--expanded': isPage && modalState.expanded,\n            'ModalRoot__modal--collapsed': isPage && modalState.collapsed\n          })\n        }, Modal);\n      })))));\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.props.document;\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.props.window;\n    }\n  }]);\n\n  return ModalRootTouchComponent;\n}(Component);\n\nexport var ModalRootTouch = withContext(withPlatform(withDOM(ModalRootTouchComponent)), ConfigProviderContext, 'configProvider');","map":{"version":3,"sources":["../../../src/components/ModalRoot/ModalRoot.tsx"],"names":["warn","warnOnce","IS_DEV","process","number","range","Math","ModalRootTouchComponent","Component","activeModal","props","prevModal","nextModal","visibleModals","animated","switching","history","isBack","inited","touchDown","dragging","React","updateModalHeight","registerModal","id","data","Object","onClose","isInsideModal","createRef","modalProps","Modal","state","getNavId","dynamicContentHeight","acc","prevProps","prevState","requestAnimationFrame","enabled","passive","event","modalState","ModalType","contentElement","contentHeight","prevTranslateY","collapsed","expanded","translateYFrom","shiftHalf","visiblePart","expandedRange","collapsedRange","hiddenRange","translateY","headerHeight","height","modalId","prevModalState","currentModalState","needAnimate","shiftY","startT","originalEvent","target","expandable","contentScrolled","shiftYPercent","shiftYCurrent","rubber","rangeTranslate","startY","shiftYEndPercent","expectTranslateY","Date","numberInRange","setStateCallback","e","clearTimeout","eventHandler","transitionEvent","onceHandler","setTimeout","nextModalState","prevIsPage","prevIsCard","nextIsPage","nextIsCard","newState","percent","frameId","cancelAnimationFrame","setTransformStyle","footerHeight","factor","forceOpacity","translateYCurrent","opacity","activeModalState","isFunction","modalRootContext","classNames","getClassName","WebviewType","onScroll","maskElementRef","viewportRef","isPage","key","ModalRootTouch","withContext","withPlatform","withDOM"],"mappings":";;;;;;;;;;AAAA,OAAA,KAAA,IAAA,SAAA,EAAA,SAAA,QAAA,OAAA;AACA,OAAA,KAAA,MAAA,gBAAA;AACA,OAAA,gBAAA,MAAA,uBAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,UAAA,QAAA,sBAAA;AACA,SAAA,iBAAA,QAAA,kBAAA;AACA,SAAA,MAAA,QAAA,iBAAA;AACA,SAAA,UAAA,QAAA,iBAAA;AACA,SAAA,OAAA,EAAA,GAAA,EAAA,KAAA,QAAA,oBAAA;AACA,SAAA,eAAA,QAAA,yBAAA;AAEA,SAAA,YAAA,QAAA,wBAAA;AACA,SAAA,WAAA,QAAA,uBAAA;AACA,OAAA,gBAAA,MAAA,oBAAA;AACA,SAAA,qBAAA,EAAA,WAAA,QAAA,yCAAA;AAKA,SAAA,SAAA,QAAA,SAAA;AACA,SAAA,iCAAA,QAAA,aAAA;AACA,SAAA,OAAA,QAAA,eAAA;AACA,SAAA,QAAA,QAAA,oBAAA;AACA,SAAA,QAAA,QAAA,oBAAA;AAEA,IAAMA,IAAI,GAAGC,QAAQ,CAArB,WAAqB,CAArB;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAf,aAAA;;AAEA,SAAA,aAAA,CAAA,MAAA,EAAA,KAAA,EAA8D;AAC5D,SAAOC,MAAM,IAAIC,KAAK,CAAfD,CAAe,CAAfA,IAAsBA,MAAM,IAAIC,KAAK,CAA5C,CAA4C,CAA5C;AACD;;AAED,SAAA,cAAA,CAAA,MAAA,EAAwC;AACtC,SAAOC,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYA,IAAI,CAAJA,GAAAA,CAAAA,EAAAA,EAAnB,MAAmBA,CAAZA,CAAP;AACD;;IA6BKC,uB;;;;;AACJ,WAAA,uBAAA,CAAA,KAAA,EAAmC;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,uBAAA,CAAA;;AACjC,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;AADiC,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,mBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,mBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,gBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,aAAA,EAAA,aAsCJsB,SAtCI,EAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,oBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,kBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,cAAA,EA4JpB,UAAA,KAAA,EAAgB;AAC7B,UAAI,CAAJ,KAAA,EAAY;AACV,eAAA,KAAA;AACD;;AACD,aAAOY,KAAK,CAAZ,aAAA,EAA4B;AAC1BA,QAAAA,KAAK,GAAGA,KAAK,CAAbA,aAAAA;AACD;;AACD,UAAIA,KAAK,CAAT,cAAA,EAA0B;AACxBA,QAAAA,KAAK,CAALA,cAAAA;AACD;;AACD,aAAA,KAAA;AAtKiC,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,sBAAA,EA2MZ,YAAM;AAC3B,UAAMhC,WAAW,GAAG,KAAA,CAAA,KAAA,CAAA,WAAA,IAA0B,KAAA,CAAA,KAAA,CAA9C,SAAA;;AACA,UAAI,CAAJ,WAAA,EAAkB;AAChB;AACD;;AAED,UAAMiC,UAAU,GAAG,KAAA,CAAA,WAAA,CAAnB,WAAmB,CAAnB;;AACA,MAAA,KAAA,CAAA,gBAAA,CAAA,UAAA,EAAkCA,UAAU,CAA5C,UAAA;AAlNiC,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,mBAAA,EA0Sf,YAAM;AAAA,UAAA,WAAA,GACW,KAAA,CADX,KAAA;AAAA,UAChBjC,WADgB,GAAA,WAAA,CAAA,WAAA;AAAA,UACHG,SADG,GAAA,WAAA,CAAA,SAAA;AAGxB,UAAM8C,OAAO,GAAGjD,WAAW,IAA3B,SAAA;AACA,UAAMiC,UAAU,GAAGgB,OAAO,GAAG,KAAA,CAAA,WAAA,CAAH,OAAG,CAAH,GAA1B,SAAA;;AAEA,UAAIhB,UAAU,IAAIA,UAAU,CAAVA,IAAAA,KAAoBC,SAAS,CAA3CD,IAAAA,IAAoDA,UAAU,CAAlE,oBAAA,EAAyF;AACvF,YAAI,KAAA,CAAA,KAAA,CAAJ,SAAA,EAA0B;AACxB,UAAA,KAAA,CAAA,oBAAA,CAAA,UAAA,EAAsC,YAAM;AAC1CJ,YAAAA,qBAAqB,CAAC,YAAA;AAAA,qBAAM,KAAA,CAAN,sBAAM,EAAN;AAAtBA,aAAqB,CAArBA;AADF,WAAA;AADF,SAAA,MAIO;AACLA,UAAAA,qBAAqB,CAAC,YAAA;AAAA,mBAAM,KAAA,CAAN,sBAAM,EAAN;AAAtBA,WAAqB,CAArBA;AACD;AACF;AAxTgC,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,aAAA,EA+UrB,UAAA,CAAA,EAAmB;AAC/B,UAAI,KAAA,CAAA,KAAA,CAAJ,SAAA,EAA0B;AACxB;AACD;;AACD,UAAM7B,WAAW,GAAG,KAAA,CAAA,KAAA,CAAA,WAAA,IAA0B,KAAA,CAAA,KAAA,CAA9C,SAAA;;AACA,UAAI,CAAJ,WAAA,EAAkB;AAChB;AACD;;AAED,UAAMiC,UAAU,GAAG,KAAA,CAAA,WAAA,CAAnB,WAAmB,CAAnB;;AAEA,UAAIA,UAAU,CAAVA,IAAAA,KAAoBC,SAAS,CAAjC,IAAA,EAAwC;AACtC,eAAO,KAAA,CAAA,eAAA,CAAA,CAAA,EAAP,UAAO,CAAP;AACD;;AAED,UAAID,UAAU,CAAVA,IAAAA,KAAoBC,SAAS,CAAjC,IAAA,EAAwC;AACtC,eAAO,KAAA,CAAA,eAAA,CAAA,CAAA,EAAP,UAAO,CAAP;AACD;AAhWgC,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,YAAA,EAibtB,UAAA,CAAA,EAAmB;AAC9B,UAAMlC,WAAW,GAAG,KAAA,CAAA,KAAA,CAAA,WAAA,IAA0B,KAAA,CAAA,KAAA,CAA9C,SAAA;;AACA,UAAI,CAAJ,WAAA,EAAkB;AAChB;AACD;;AACD,UAAMiC,UAAU,GAAG,KAAA,CAAA,WAAA,CAAnB,WAAmB,CAAnB;;AAEA,UAAIA,UAAU,CAAVA,IAAAA,KAAoBC,SAAS,CAAjC,IAAA,EAAwC;AACtC,eAAO,KAAA,CAAA,cAAA,CAAA,CAAA,EAAP,UAAO,CAAP;AACD;;AAED,UAAID,UAAU,CAAVA,IAAAA,KAAoBC,SAAS,CAAjC,IAAA,EAAwC;AACtC,eAAO,KAAA,CAAA,cAAA,CAAP,UAAO,CAAP;AACD;AA9bgC,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,UAAA,EAoiBxB,UAAA,CAAA,EAAuB;AAChC,UAAMlC,WAAW,GAAG,KAAA,CAAA,KAAA,CAApB,WAAA;AAEA,UAAMwD,MAAM,GAAGa,CAAC,CAAhB,MAAA;;AAEA,UAAI,CAAJ,WAAA,EAAkB;AAChB;AACD;;AACD,UAAMpC,UAAU,GAAG,KAAA,CAAA,WAAA,CAAnB,WAAmB,CAAnB;;AACA,UAAIA,UAAU,CAAVA,IAAAA,KAAoBC,SAAS,CAA7BD,IAAAA,IAAsCA,UAAU,CAAVA,cAAAA,CAAAA,QAAAA,CAA1C,MAA0CA,CAA1C,EAAsF;AACpFA,QAAAA,UAAU,CAAVA,eAAAA,GAAAA,IAAAA;AAEAqC,QAAAA,YAAY,CAACrC,UAAU,CAAvBqC,wBAAY,CAAZA;AAEArC,QAAAA,UAAU,CAAVA,wBAAAA,GAAsC,MAAM,CAAN,UAAA,CAAkB,YAAM;AAC5D,cAAIA,UAAU,CAAd,eAAA,EAAgC;AAC9BA,YAAAA,UAAU,CAAVA,eAAAA,GAAAA,KAAAA;AACD;AAHmC,SAAA,EAAtCA,GAAsC,CAAtCA;AAKD;AAvjBgC,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,0BAAA,EAknBR,YAAM;AAC/B,MAAA,KAAA,CAAA,iBAAA,GAAyBpC,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAY,KAAA,CAAA,iBAAA,GAArC,CAAyBA,CAAzB;;AACA,UAAI,KAAA,CAAA,iBAAA,GAAJ,CAAA,EAAgC;AAC9B;AACD;;AAED,UAAMG,WAAW,GAAG,KAAA,CAAA,KAAA,CAApB,SAAA;AAEA,UAAMgF,QAAwB,GAAG;AAC/B9E,QAAAA,SAAS,EADsB,IAAA;AAE/BC,QAAAA,SAAS,EAFsB,IAAA;AAG/BC,QAAAA,aAAa,EAAE,CAHgB,WAGhB,CAHgB;AAI/BJ,QAAAA,WAAW,EAJoB,WAAA;AAK/BK,QAAAA,QAAQ,EALuB,KAAA;AAM/BC,QAAAA,SAAS,EAAE;AANoB,OAAjC;;AASA,UAAI,CAAJ,WAAA,EAAkB;AAChB0E,QAAAA,QAAQ,CAARA,OAAAA,GAAAA,EAAAA;AACD;;AAED,MAAA,KAAA,CAAA,QAAA,CAAA,QAAA;AAvoBiC,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,yBAAA,EAqrBT,YAAM;AAC9B,UAAMU,gBAAgB,GAAG,KAAA,CAAA,WAAA,CAAiB,KAAA,CAAA,KAAA,CAA1C,WAAyB,CAAzB;;AACA,UAAA,gBAAA,EAAsB;AACpB,QAAA,KAAA,CAAA,YAAA,CAAA,gBAAA;AACD;AAzrBgC,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,cAAA,EA4rBH,UAAA,UAAA,EAAkC;AAChE;AACA,MAAA,KAAA,CAAA,QAAA,CAAc;AAAEhF,QAAAA,SAAS,EAAX,KAAA;AAAoBJ,QAAAA,SAAS,EAAE;AAA/B,OAAd;;AAEA,UAAIqF,UAAU,CAAC1D,UAAU,CAAzB,OAAc,CAAd,EAAoC;AAClCA,QAAAA,UAAU,CAAVA,OAAAA;AADF,OAAA,MAEO,IAAI0D,UAAU,CAAC,KAAA,CAAA,KAAA,CAAf,OAAc,CAAd,EAAoC;AACzC,QAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAmB1D,UAAU,CAA7B,EAAA;AADK,OAAA,MAEA,IAAA,MAAA,EAAY;AACjB1C,QAAAA,IAAI,CAAJA,sBAAI,CAAJA;AACD;AAtsBgC,KAAA,CAAA;;AAGjC,QAAMS,YAAW,GAAGC,KAAK,CAAzB,WAAA;AAEA,IAAA,KAAA,CAAA,KAAA,GAAa;AACXD,MAAAA,WAAW,EADA,IAAA;AAEXE,MAAAA,SAAS,EAFE,IAAA;AAGXC,MAAAA,SAAS,EAHE,YAAA;AAIXC,MAAAA,aAAa,EAAEJ,YAAW,GAAG,CAAH,YAAG,CAAH,GAJf,EAAA;AAKXK,MAAAA,QAAQ,EAAE,CAAC,CALA,YAAA;AAMXC,MAAAA,SAAS,EANE,KAAA;AAOXC,MAAAA,OAAO,EAAEP,YAAW,GAAG,CAAH,YAAG,CAAH,GAPT,EAAA;AAQXQ,MAAAA,MAAM,EARK,KAAA;AASXC,MAAAA,MAAM,EATK,KAAA;AAUXC,MAAAA,SAAS,EAVE,KAAA;AAWXC,MAAAA,QAAQ,EAAE;AAXC,KAAb;AAcA,IAAA,KAAA,CAAA,iBAAA,GAAA,CAAA;AACA,IAAA,KAAA,CAAA,cAAA,GAAA,aAAsBC,KAAK,CAA3B,SAAsBA,EAAtB;;AAEA,IAAA,KAAA,CAAA,eAAA;;AAEA,IAAA,KAAA,CAAA,gBAAA,GAAwB;AACtBC,MAAAA,iBAAiB,EAAE,KAAA,CADG,iBAAA;AAEtBC,MAAAA,aAAa,EAAE,SAAA,aAAA,CAAA,IAAA,EAAA;AAAA,YAAGC,EAAH,GAAA,IAAA,CAAA,EAAA;AAAA,YAAUC,IAAV,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,IAAA,CAAA,CAAA;;AAAA,eAAqBC,MAAM,CAANA,MAAAA,CAAc,KAAA,CAAA,WAAA,CAAdA,EAAc,CAAdA,EAArB,IAAqBA,CAArB;AAFO,OAAA;AAGtBC,MAAAA,OAAO,EAAE,KAAA,CAHa,uBAAA;AAItBC,MAAAA,aAAa,EAAE;AAJO,KAAxB;AAOA,IAAA,KAAA,CAAA,QAAA,GAAA,EAAA;AA/BiC,WAAA,KAAA;AAgClC;;;;gCAqBW;AACV,aAAOP,KAAK,CAALA,QAAAA,CAAAA,OAAAA,CAAuB,KAAA,KAAA,CAA9B,QAAOA,CAAP;AACD;;;sCAEiB;AAChB,WAAA,WAAA,GAAmB,KAAA,SAAA,GAAA,MAAA,CAAqC,UAAA,GAAA,EAAA,KAAA,EAAgB;AACtE,YAAMS,UAAU,GAAGC,KAAK,CAAxB,KAAA;AACA,YAAMC,KAAuB,GAAG;AAC9BR,UAAAA,EAAE,EAAES,QAAQ,CAAA,UAAA,EADkB,IAClB,CADkB;AAE9BN,UAAAA,OAAO,EAAEI,KAAK,CAALA,KAAAA,CAFqB,OAAA;AAG9BG,UAAAA,oBAAoB,EAAE,CAAC,CAACJ,UAAU,CAACI;AAHL,SAAhC,CAFsE,CAQtE;;AACA,YAAI,OAAOJ,UAAU,CAAjB,cAAA,KAAJ,QAAA,EAAmD;AACjDE,UAAAA,KAAK,CAALA,cAAAA,GAAuBF,UAAU,CAAjCE,cAAAA;AACD;;AAEDG,QAAAA,GAAG,CAACH,KAAK,CAATG,EAAG,CAAHA,GAAAA,KAAAA;AACA,eAAA,GAAA;AAdiB,OAAA,EAAnB,EAAmB,CAAnB;AAgBD;;;wCAEmB;AAClB,WAAA,eAAA;AACD;;;2CAEsB;AACrB,WAAA,uBAAA,CAAA,IAAA;;AACA,UAAI,KAAA,KAAA,CAAA,QAAA,KAAJ,GAAA,EAAiC;AAC/B,aAAA,MAAA,CAAA,mBAAA,CAAA,QAAA,EAA0C,KAA1C,oBAAA,EAAA,KAAA;AACD;AACF;;;uCAEkBC,S,EAA2BC,S,EAA2B;AAAA,UAAA,MAAA,GAAA,IAAA;;AACvE,UAAI,KAAA,KAAA,CAAA,WAAA,KAA2BD,SAAS,CAApC,WAAA,IAAoD,CAAC,KAAA,KAAA,CAAzD,SAAA,EAA+E;AAC7E,YAAMxB,SAAS,GAAG,KAAA,KAAA,CAAlB,WAAA;AACA,YAAMD,SAAS,GAAGyB,SAAS,CAA3B,WAAA;;AAEA,YAAIlC,MAAM,IAAIU,SAAS,KAAnBV,IAAAA,IAAgC,CAAC,KAAA,WAAA,CAArC,SAAqC,CAArC,EAAkE;AAChE,iBAAOF,IAAI,CAAA,kCAAA,MAAA,CAAA,SAAA,EAAX,YAAW,CAAA,CAAX;AACD;;AAED,YAAIgB,OAAO,GAAA,kBAAA,CAAO,KAAA,KAAA,CAAlB,OAAW,CAAX;;AACA,YAAIC,MAAM,GAAV,KAAA;;AAEA,YAAIL,SAAS,KAAb,IAAA,EAAwB;AACtBI,UAAAA,OAAO,GAAPA,EAAAA;AADF,SAAA,MAEO,IAAIA,OAAO,CAAPA,QAAAA,CAAJ,SAAIA,CAAJ,EAAiC;AACtCA,UAAAA,OAAO,GAAGA,OAAO,CAAPA,MAAAA,CAAAA,CAAAA,EAAkBA,OAAO,CAAPA,OAAAA,CAAAA,SAAAA,IAA5BA,CAAUA,CAAVA;AACAC,UAAAA,MAAM,GAANA,IAAAA;AAFK,SAAA,MAGA;AACLD,UAAAA,OAAO,CAAPA,IAAAA,CAAAA,SAAAA;AACD;;AAED,eAAO,KAAA,QAAA,CAAc;AACnBP,UAAAA,WAAW,EADQ,IAAA;AAEnBG,UAAAA,SAAS,EAFU,SAAA;AAGnBD,UAAAA,SAAS,EAHU,SAAA;AAInBE,UAAAA,aAAa,EAAE,CAAA,SAAA,EAJI,SAIJ,CAJI;AAKnBG,UAAAA,OAAO,EALY,OAAA;AAMnBC,UAAAA,MAAM,EANa,MAAA;AAOnBH,UAAAA,QAAQ,EAPW,IAAA;AAQnBI,UAAAA,MAAM,EARa,KAAA;AASnBH,UAAAA,SAAS,EAAE;AATQ,SAAd,EAUJ,YAAM;AACP,cAAIH,SAAS,KAAb,IAAA,EAAwB;AACtB,YAAA,MAAI,CAAJ,gBAAA;AADF,WAAA,MAEO;AACL,YAAA,MAAI,CAAJ,eAAA;AACD;AAfH,SAAO,CAAP;AAiBD;;AAED,UAAI,KAAA,KAAA,CAAA,SAAA,IAAwB,CAACyB,SAAS,CAAtC,SAAA,EAAkD;AAChDC,QAAAA,qBAAqB,CAAC,YAAA;AAAA,iBAAM,MAAI,CAAV,cAAM,EAAN;AAAtBA,SAAqB,CAArBA;AACD;;AAED,UAAI,CAAC,KAAA,KAAA,CAAD,WAAA,IAA2B,CAAC,KAAA,KAAA,CAA5B,SAAA,IAAoD,CAAC,KAAA,KAAA,CAAzD,SAAA,EAA+E;AAC7E,aAAA,uBAAA,CAAA,IAAA;AADF,OAAA,MAEO;AACL,aAAA,uBAAA,CAAA,KAAA;AACD;AACF;AAED;;;;4CACwBC,O,EAAkB;AACxC,UAAI,KAAA,iBAAA,KAAJ,OAAA,EAAwC;AACtC;AACD;;AACD,WAAA,iBAAA,GAAA,OAAA;;AAEA,UAAA,OAAA,EAAa;AACX;AACA;AACA;AACA;AACA,aAAA,MAAA,CAAA,mBAAA,CAAA,WAAA,EAA6C,KAA7C,YAAA,EAAgE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAhE;AALF,OAAA,MAMO;AACL,aAAA,MAAA,CAAA,gBAAA,CAAA,WAAA,EAA0C,KAA1C,YAAA,EAA6D;AAAEA,UAAAA,OAAO,EAAE;AAAX,SAA7D;AACD;AACF;;;;AAeD;;;sCAGkB;AAChB,UAAM/B,WAAW,GAAG,KAAA,KAAA,CAAA,WAAA,IAA0B,KAAA,KAAA,CAA9C,SAAA;;AACA,UAAI,CAAJ,WAAA,EAAkB;AAChB;AACD;;AAED,UAAMiC,UAAU,GAAG,KAAA,WAAA,CANH,WAMG,CAAnB,CANgB,CAOhB;;AACA,UAAI,KAAA,KAAA,CAAA,QAAA,KAAJ,GAAA,EAAiC;AAC/B,aAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,EAAuC,KAAvC,oBAAA,EAAA,KAAA;AACD;;AAED,cAAQA,UAAU,CAAlB,IAAA;AACE,aAAKC,SAAS,CAAd,IAAA;AACED,UAAAA,UAAU,CAAVA,cAAAA,GAA4BA,UAAU,CAAVA,cAAAA,IAA5BA,iCAAAA;AACA,eAAA,aAAA,CAAA,UAAA;AACA;;AAEF,aAAKC,SAAS,CAAd,IAAA;AACE,eAAA,aAAA,CAAA,UAAA;AACA;;AAEF;AACE,cAAA,MAAA,EAAY;AACV3C,YAAAA,IAAI,CAAJA,8CAAI,CAAJA;AACD;;AAbL;;AAgBA,WAAA,QAAA,CAAc;AAAEkB,QAAAA,MAAM,EAAR,IAAA;AAAgBH,QAAAA,SAAS,EAAE;AAA3B,OAAd;AACD;;;kCAYa2B,U,EAA8B;AAAA,UAClCE,cADkC,GACfF,UADe,CAAA,cAAA;AAE1C,UAAMG,aAAa,GAAID,cAAc,CAAf,iBAACA,CAAvB,YAAA;AAEA,UAAIE,cAAc,GAAGJ,UAAU,CAA/B,UAAA;AAEAA,MAAAA,UAAU,CAAVA,UAAAA,GAAwBG,aAAa,GAAGD,cAAc,CAA9BC,YAAAA,IAA+CH,UAAU,CAAVA,cAAAA,KAAvEA,GAAAA;AAEA,UAAIK,SAAS,GAAb,KAAA;AACA,UAAIC,QAAQ,GAAZ,KAAA;AACA,UAAA,cAAA;AACA,UAAA,UAAA;AACA,UAAA,aAAA;AACA,UAAA,cAAA;AACA,UAAA,WAAA;;AAEA,UAAIN,UAAU,CAAd,UAAA,EAA2B;AACzBO,QAAAA,cAAc,GAAG,MAAMP,UAAU,CAAjCO,cAAAA;AAEA,YAAMC,SAAS,GAAGD,cAAc,GAAhC,CAAA;AACA,YAAME,WAAW,GAAG,MAApB,cAAA;AAEAC,QAAAA,aAAa,GAAG,CAAA,CAAA,EAAhBA,SAAgB,CAAhBA;AACAC,QAAAA,cAAc,GAAG,CAAA,SAAA,EAAYJ,cAAc,GAAGE,WAAW,GAAzDE,CAAiB,CAAjBA;AACAC,QAAAA,WAAW,GAAG,CAACL,cAAc,GAAGE,WAAW,GAA7B,CAAA,EAAdG,GAAc,CAAdA;AAEAP,QAAAA,SAAS,GAAGE,cAAc,GAA1BF,CAAAA;AACAC,QAAAA,QAAQ,GAAGC,cAAc,IAAzBD,CAAAA;AACAO,QAAAA,UAAU,GAAVA,cAAAA;AAZF,OAAA,MAaO;AACL,YAAMC,YAAY,GAAGd,UAAU,CAAVA,aAAAA,CAArB,YAAA;AACA,YAAMe,MAAM,GAAGZ,aAAa,GAA5B,YAAA;AAEAI,QAAAA,cAAc,GAAG,MAAMQ,MAAM,GAAGf,UAAU,CAAVA,YAAAA,CAAAA,aAAAA,CAATe,YAAAA,GAAvBR,GAAAA;AACAM,QAAAA,UAAU,GAAVA,cAAAA;AAEAH,QAAAA,aAAa,GAAG,CAAA,UAAA,EAAaG,UAAU,GAAvCH,EAAgB,CAAhBA;AACAC,QAAAA,cAAc,GAAG,CAACE,UAAU,GAAX,EAAA,EAAkBA,UAAU,GAA7CF,EAAiB,CAAjBA;AACAC,QAAAA,WAAW,GAAG,CAACC,UAAU,GAAX,EAAA,EAAkBA,UAAU,GAA1CD,GAAc,CAAdA;AAtCwC,OAAA,CAyC1C;;;AACA,UAAIZ,UAAU,CAAVA,UAAAA,IAAyBa,UAAU,GAAnCb,cAAAA,IAAwDA,UAAU,CAAVA,cAAAA,KAA5D,GAAA,EAA+F;AAC7Fa,QAAAA,UAAU,GAAVA,CAAAA;AACD;;AAEDb,MAAAA,UAAU,CAAVA,aAAAA,GAAAA,aAAAA;AACAA,MAAAA,UAAU,CAAVA,cAAAA,GAAAA,cAAAA;AACAA,MAAAA,UAAU,CAAVA,WAAAA,GAAAA,WAAAA;AACAA,MAAAA,UAAU,CAAVA,UAAAA,GAAAA,UAAAA;AACAA,MAAAA,UAAU,CAAVA,cAAAA,GAAAA,cAAAA;AACAA,MAAAA,UAAU,CAAVA,SAAAA,GAAAA,SAAAA;AACAA,MAAAA,UAAU,CAAVA,QAAAA,GAAAA,QAAAA;AACD;;;kCAEaA,U,EAA8B;AAC1CA,MAAAA,UAAU,CAAVA,UAAAA,GAAAA,CAAAA;AACD;;;6CAEwB;AAAA,UAAA,YAAA,GACY,KADZ,KAAA;AAAA,UACfjC,WADe,GAAA,YAAA,CAAA,WAAA;AAAA,UACFG,SADE,GAAA,YAAA,CAAA,SAAA;AAEvB,UAAM8C,OAAO,GAAGjD,WAAW,IAA3B,SAAA;AAEA,UAAMiC,UAAU,GAAG,KAAA,WAAA,CAAnB,OAAmB,CAAnB;;AACA,UAAI,CAAA,UAAU,KAAV,IAAA,IAAA,UAAU,KAAA,KAAV,CAAA,GAAA,KAAA,CAAA,GAAA,UAAU,CAAV,IAAA,MAAqBC,SAAS,CAA9B,IAAA,KAAuCD,UAAvC,KAAA,IAAuCA,IAAAA,UAAvC,KAAA,KAAA,CAAuCA,GAAvC,KAAA,CAAuCA,GAAAA,UAAU,CAArD,YAAI,CAAJ,EAAqE;AACnE,YAAMiB,cAAc,GAAA,aAAA,CAAA,EAAA,EAApB,UAAoB,CAApB;;AACA,aAAA,aAAA,CAAA,UAAA;;AACA,YAAMC,iBAAiB,GAAA,aAAA,CAAA,EAAA,EAAvB,UAAuB,CAAvB;;AAEA,YAAIC,WAAW,GAAf,KAAA;;AAEA,YAAIF,cAAc,CAAdA,UAAAA,KAA8BC,iBAAiB,CAAnD,UAAA,EAAgE;AAC9D,cAAID,cAAc,CAAdA,cAAAA,KAAkCC,iBAAiB,CAAvD,cAAA,EAAwE;AACtEC,YAAAA,WAAW,GAAXA,IAAAA;AACD;AAHH,SAAA,MAIO;AACLA,UAAAA,WAAW,GAAXA,IAAAA;AACD;;AAED,YAAA,WAAA,EAAiB;AACf,eAAA,gBAAA,CAAA,UAAA,EAAkCnB,UAAU,CAA5C,UAAA;AACD;AACF;AACF;;;uCAmBkB;AACjB;AACA,WAAA,QAAA,CAAc;AAAEvB,QAAAA,SAAS,EAAX,KAAA;AAAoBJ,QAAAA,SAAS,EAAE;AAA/B,OAAd;;AAEA,UAAI,KAAA,KAAA,CAAA,QAAA,KAAJ,GAAA,EAAiC;AAC/B,aAAA,MAAA,CAAA,mBAAA,CAAA,QAAA,EAA0C,KAA1C,oBAAA,EAAA,KAAA;AACD;;AANgB,UAQTJ,SARS,GAQK,KARL,KAQK,CARL,SAAA;;AASjB,UAAI,CAAJ,SAAA,EAAgB;AACd,eAAOX,IAAI,CAAA,mCAAA,MAAA,CAAX,SAAW,CAAA,CAAX;AACD;;AAED,UAAM2D,cAAc,GAAG,KAAA,WAAA,CAAvB,SAAuB,CAAvB;AAEA,WAAA,oBAAA,CAAA,cAAA,EAA0C,KAA1C,wBAAA;AACA,WAAA,gBAAA,CAAA,cAAA,EAAA,GAAA;AACA,WAAA,cAAA,CAAA,cAAA,EAAA,CAAA;AACD;;;oCAsBelB,K,EAAmBC,U,EAA8B;AAAA,UACvDoB,MADuD,GACrBrB,KADqB,CAAA,MAAA;AAAA,UAC/CsB,MAD+C,GACrBtB,KADqB,CAAA,MAAA;AAAA,UACvCuB,aADuC,GACrBvB,KADqB,CAAA,aAAA;AAE/D,UAAMwB,MAAM,GAAGD,aAAa,CAA5B,MAAA;;AAEA,UAAI,CAACvB,KAAK,CAAV,GAAA,EAAgB;AACd,YAAI,KAAA,WAAA,CAAA,OAAA,CAAA,QAAA,CAAJ,MAAI,CAAJ,EAA+C;AAC7CuB,UAAAA,aAAa,CAAbA,cAAAA;AACD;;AACD;AACD;;AAED,UAAI,CAACtB,UAAU,CAAVA,YAAAA,CAAAA,QAAAA,CAAL,MAAKA,CAAL,EAA+C;AAC7C,eAAOsB,aAAa,CAApB,cAAOA,EAAP;AACD;;AAEDA,MAAAA,aAAa,CAAbA,eAAAA;AAf+D,UAiBvDE,UAjBuD,GAiBFxB,UAjBE,CAAA,UAAA;AAAA,UAiB3CyB,eAjB2C,GAiBFzB,UAjBE,CAAA,eAAA;AAAA,UAiB1BK,SAjB0B,GAiBFL,UAjBE,CAAA,SAAA;AAAA,UAiBfM,QAjBe,GAiBFN,UAjBE,CAAA,QAAA;;AAmB/D,UAAI,CAAC,KAAA,KAAA,CAAL,SAAA,EAA2B;AACzBA,QAAAA,UAAU,CAAVA,cAAAA,GAAAA,MAAAA;AACAA,QAAAA,UAAU,CAAVA,0BAAAA,GAAwCA,UAAU,CAAVA,cAAAA,CAAxCA,SAAAA;AACA,aAAA,QAAA,CAAc;AAAEvB,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD;;AAED,UAAA,eAAA,EAAqB;AACnB;AACD;;AAED,UAAIuB,UAAU,CAAVA,iBAAAA,KAAJ,IAAA,EAA2C;AACzCA,QAAAA,UAAU,CAAVA,iBAAAA,GAA+BoB,MAAM,GAArCpB,CAAAA;AACD;;AAED,UACE,CAACA,UAAU,CAAX,UAAA,IAAA,SAAA,IAEAM,QAAQ,IAAIN,UAAU,CAAtBM,iBAAAA,IAA4CN,UAAU,CAAVA,0BAAAA,KAF5C,CAAA,IAGAA,UAAU,CAAVA,aAAAA,CAAAA,QAAAA,CAJF,MAIEA,CAJF,EAKE;AACAsB,QAAAA,aAAa,CAAbA,cAAAA;;AAEA,YAAI,CAAA,UAAA,IAAeF,MAAM,GAAzB,CAAA,EAA+B;AAC7B;AACD;;AAED,SAAC,KAAA,KAAA,CAAD,QAAA,IAAwB,KAAA,QAAA,CAAc;AAAE1C,UAAAA,QAAQ,EAAE;AAAZ,SAAd,CAAxB;AAEA,YAAMgD,aAAa,GAAGN,MAAM,GAAG,KAAA,MAAA,CAATA,WAAAA,GAAtB,GAAA;AACA,YAAMO,aAAa,GAAGC,MAAM,CAAA,aAAA,EAAA,EAAA,EAAA,GAAA,EAAyB,KAAA,KAAA,CAAA,QAAA,KAAA,OAAA,IAAmC,KAAA,KAAA,CAAA,QAAA,KAAxF,KAA4B,CAA5B;AAEA5B,QAAAA,UAAU,CAAVA,kBAAAA,GAAAA,aAAAA;AACAA,QAAAA,UAAU,CAAVA,iBAAAA,GAA+B6B,cAAc,CAAC7B,UAAU,CAAVA,UAAAA,GAA9CA,aAA6C,CAA7CA;AAEA,aAAA,gBAAA,CAAA,UAAA,EAAkCA,UAAU,CAA5C,iBAAA;AACA,aAAA,cAAA,CAAA,UAAA;AACD;AACF;;;oCAEeD,K,EAAmBC,U,EAA8B;AAAA,UACvDsB,aADuD,GACrBvB,KADqB,CAAA,aAAA;AAAA,UACxCqB,MADwC,GACrBrB,KADqB,CAAA,MAAA;AAAA,UAChCsB,MADgC,GACrBtB,KADqB,CAAA,MAAA;AAE/D,UAAMwB,MAAM,GAAGD,aAAa,CAA5B,MAAA;;AACA,UAAItB,UAAU,CAAVA,YAAAA,CAAAA,QAAAA,CAAJ,MAAIA,CAAJ,EAA8C;AAC5C,YAAI,CAAC,KAAA,KAAA,CAAL,SAAA,EAA2B;AACzBA,UAAAA,UAAU,CAAVA,cAAAA,GAAAA,MAAAA;AACA,eAAA,QAAA,CAAc;AAAEvB,YAAAA,SAAS,EAAX,IAAA;AAAmBC,YAAAA,QAAQ,EAAE;AAA7B,WAAd;AACD;;AAED,YAAMgD,aAAa,GAAGN,MAAM,GAAGpB,UAAU,CAAVA,YAAAA,CAAToB,YAAAA,GAAtB,GAAA;AACA,YAAMO,aAAa,GAAGC,MAAM,CAAA,aAAA,EAAA,EAAA,EAAA,GAAA,EAAyB,KAAA,KAAA,CAAA,QAAA,KAAA,OAAA,IAAmC,KAAA,KAAA,CAAA,QAAA,KAAxF,KAA4B,CAA5B;AAEA5B,QAAAA,UAAU,CAAVA,kBAAAA,GAAAA,aAAAA;AACAA,QAAAA,UAAU,CAAVA,iBAAAA,GAA+BpC,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYoC,UAAU,CAAVA,UAAAA,GAA3CA,aAA+BpC,CAA/BoC;AAEA,aAAA,gBAAA,CAAA,UAAA,EAAkCA,UAAU,CAA5C,iBAAA;AACA,aAAA,cAAA,CAAA,UAAA;AACD;AACF;;;mCAkBcD,K,EAAmBC,U,EAA8B;AAAA,UAAA,MAAA,GAAA,IAAA;;AAAA,UACtD8B,MADsD,GACnC/B,KADmC,CAAA,MAAA;AAAA,UAC9CqB,MAD8C,GACnCrB,KADmC,CAAA,MAAA;AAG9DC,MAAAA,UAAU,CAAVA,eAAAA,GAAAA,KAAAA;AACAA,MAAAA,UAAU,CAAVA,iBAAAA,GAAAA,IAAAA;AAEA,UAAA,gBAAA;;AAEA,UAAI,KAAA,KAAA,CAAJ,QAAA,EAAyB;AACvB,YAAM+B,gBAAgB,GAAG,CAACD,MAAM,GAAP,MAAA,IAAoB,KAAA,MAAA,CAApB,WAAA,GAAzB,GAAA;AAEA,YAAIjB,UAAU,GAAGb,UAAU,CAA3B,iBAAA;AACA,YAAMgC,gBAAgB,GAAGnB,UAAU,IAAIoB,IAAI,CAAJA,GAAAA,KAAajC,UAAU,CAAVA,cAAAA,CAA3Ba,OAA2Bb,EAAjB,CAAVa,GAAAA,GAAAA,GAAAA,GAAAA,IAA+Eb,UAAU,CAAVA,kBAAAA,GAAAA,CAAAA,GAAoC,CAApCA,CAAAA,GAAxG,CAAyBa,CAAzB;AACAA,QAAAA,UAAU,GAAGgB,cAAc,CAAChB,UAAU,GAAtCA,gBAA2B,CAA3BA;;AAEA,YAAIb,UAAU,CAAVA,cAAAA,KAAJ,GAAA,EAAuC;AACrC,cAAIkC,aAAa,CAAA,UAAA,EAAalC,UAAU,CAAxC,aAAiB,CAAjB,EAAyD;AACvDa,YAAAA,UAAU,GAAGb,UAAU,CAAVA,aAAAA,CAAba,CAAab,CAAba;AADF,WAAA,MAEO,IAAIqB,aAAa,CAAA,UAAA,EAAalC,UAAU,CAAxC,cAAiB,CAAjB,EAA0D;AAC/Da,YAAAA,UAAU,GAAGb,UAAU,CAAvBa,cAAAA;AADK,WAAA,MAEA,IAAIqB,aAAa,CAAA,UAAA,EAAalC,UAAU,CAAxC,WAAiB,CAAjB,EAAuD;AAC5Da,YAAAA,UAAU,GAAVA,GAAAA;AADK,WAAA,MAEA;AACLA,YAAAA,UAAU,GAAGb,UAAU,CAAvBa,cAAAA;AACD;AATH,SAAA,MAUO;AACL,cAAIqB,aAAa,CAAA,UAAA,EAAa,CAAA,CAAA,EAA9B,EAA8B,CAAb,CAAjB,EAAwC;AACtCrB,YAAAA,UAAU,GAAVA,CAAAA;AADF,WAAA,MAEO;AACLA,YAAAA,UAAU,GAAVA,GAAAA;AACD;AACF;;AAED,YAAIA,UAAU,KAAVA,GAAAA,IAAsBkB,gBAAgB,IAA1C,EAAA,EAAkD;AAChDlB,UAAAA,UAAU,GAAVA,GAAAA;AACD;;AAEDb,QAAAA,UAAU,CAAVA,UAAAA,GAAAA,UAAAA;AACAA,QAAAA,UAAU,CAAVA,iBAAAA,GAAAA,UAAAA;AACAA,QAAAA,UAAU,CAAVA,SAAAA,GAAuBa,UAAU,GAAVA,CAAAA,IAAkBA,UAAU,GAAnDb,gBAAAA;AACAA,QAAAA,UAAU,CAAVA,QAAAA,GAAsBa,UAAU,KAAhCb,CAAAA;AACAA,QAAAA,UAAU,CAAVA,MAAAA,GAAoBa,UAAU,KAA9Bb,GAAAA;;AAEA,YAAIA,UAAU,CAAd,MAAA,EAAuB;AACrB,eAAA,YAAA,CAAA,UAAA;AACD;;AAEDmC,QAAAA,gBAAgB,GAAG,SAAA,gBAAA,GAAM;AACvB,cAAI,CAACnC,UAAU,CAAf,MAAA,EAAwB;AACtB,YAAA,MAAI,CAAJ,gBAAA,CAAA,UAAA,EAAkCA,UAAU,CAA5C,UAAA;AACD;;AAED,UAAA,MAAI,CAAJ,cAAA,CAAA,UAAA;AALFmC,SAAAA;AAOD;;AAED,WAAA,QAAA,CAAc;AACZ1D,QAAAA,SAAS,EADG,KAAA;AAEZC,QAAAA,QAAQ,EAAE;AAFE,OAAd,EAAA,gBAAA;AAID;;;mCAEcsB,U,EAA8B;AAAA,UAAA,MAAA,GAAA,IAAA;;AAC3C,UAAA,gBAAA;;AAEA,UAAI,KAAA,KAAA,CAAJ,QAAA,EAAyB;AACvB,YAAIa,UAAU,GAAGb,UAAU,CAA3B,iBAAA;AAEA,YAAMgC,gBAAgB,GAAGnB,UAAU,IAAIoB,IAAI,CAAJA,GAAAA,KAAajC,UAAU,CAAVA,cAAAA,CAA3Ba,OAA2Bb,EAAjB,CAAVa,GAAAA,GAAAA,GAAAA,GAAAA,IAA+Eb,UAAU,CAAVA,kBAAAA,GAAAA,CAAAA,GAAoC,CAApCA,CAAAA,GAAxG,CAAyBa,CAAzB;AACAA,QAAAA,UAAU,GAAGjD,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYiD,UAAU,GAAnCA,gBAAajD,CAAbiD;;AAEA,YAAIA,UAAU,IAAd,EAAA,EAAsB;AACpBA,UAAAA,UAAU,GAAVA,GAAAA;AADF,SAAA,MAEO;AACLA,UAAAA,UAAU,GAAVA,CAAAA;AACD;;AAEDb,QAAAA,UAAU,CAAVA,UAAAA,GAAAA,UAAAA;AACAA,QAAAA,UAAU,CAAVA,MAAAA,GAAoBa,UAAU,KAA9Bb,GAAAA;;AAEA,YAAIA,UAAU,CAAd,MAAA,EAAuB;AACrB,eAAA,YAAA,CAAA,UAAA;AACD;;AAEDmC,QAAAA,gBAAgB,GAAG,SAAA,gBAAA,GAAM;AACvB,cAAI,CAACnC,UAAU,CAAf,MAAA,EAAwB;AACtB,YAAA,MAAI,CAAJ,gBAAA,CAAA,UAAA,EAAkCA,UAAU,CAA5C,UAAA;AACD;;AAED,UAAA,MAAI,CAAJ,cAAA,CAAA,UAAA;AALFmC,SAAAA;AAOD;;AAED,WAAA,QAAA,CAAc;AACZ1D,QAAAA,SAAS,EADG,KAAA;AAEZC,QAAAA,QAAQ,EAAE;AAFE,OAAd,EAAA,gBAAA;AAID;;;yCAwBoBsB,U,EAA8BsC,Y,EAA0B;AAC3E,UAAIC,eAAe,CAAnB,SAAA,EAA+B;AAC7B,YAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBxC,UAAAA,UAAU,CAAVA,YAAAA,CAAAA,mBAAAA,CAA4CuC,eAAe,CAA3DvC,IAAAA,EAAAA,WAAAA;AACAsC,UAAAA,YAAY;AAFd,SAAA;;AAKAtC,QAAAA,UAAU,CAAVA,YAAAA,CAAAA,gBAAAA,CAAyCuC,eAAe,CAAxDvC,IAAAA,EAAAA,WAAAA;AANF,OAAA,MAOO;AACLyC,QAAAA,UAAU,CAAA,YAAA,EAAe,KAAA,KAAA,CAAA,QAAA,KAAA,OAAA,IAAmC,KAAA,KAAA,CAAA,QAAA,KAAnC,KAAA,GAAA,GAAA,GAAzBA,GAAU,CAAVA;AACD;AACF;;;qCAEgB;AAAA,UAAA,MAAA,GAAA,IAAA;;AAAA,UAAA,YAAA,GACkB,KADlB,KAAA;AAAA,UACPxE,SADO,GAAA,YAAA,CAAA,SAAA;AAAA,UACIC,SADJ,GAAA,YAAA,CAAA,SAAA;AAGf,UAAM+C,cAAc,GAAG,KAAA,WAAA,CAAvB,SAAuB,CAAvB;AACA,UAAMyB,cAAc,GAAG,KAAA,WAAA,CAAvB,SAAuB,CAAvB;;AAEA,UAAIlF,MAAM,IAAI,CAAVA,cAAAA,IAA6B,CAAjC,cAAA,EAAkD;AAChD,eAAOF,IAAI,CAAA,iCAAA,MAAA,CAAA,SAAA,EAAA,iBAAA,EAAA,MAAA,CAAX,SAAW,CAAA,CAAX;AACD;;AAED,UAAMqF,UAAU,GAAG,CAAC,CAAD,cAAA,IAAoB1B,cAAc,CAAdA,IAAAA,KAAwBhB,SAAS,CAAxE,IAAA;AACA,UAAM2C,UAAU,GAAG,CAAC,CAAD,cAAA,IAAoB3B,cAAc,CAAdA,IAAAA,KAAwBhB,SAAS,CAAxE,IAAA;AAEA,UAAM4C,UAAU,GAAG,CAAC,CAAD,cAAA,IAAoBH,cAAc,CAAdA,IAAAA,KAAwBzC,SAAS,CAAxE,IAAA;AACA,UAAM6C,UAAU,GAAG,CAAC,CAAD,cAAA,IAAoBJ,cAAc,CAAdA,IAAAA,KAAwBzC,SAAS,CAdzD,IAcf,CAde,CAgBf;;AACA,UAAIgB,cAAc,KAAK6B,UAAU,IAAIF,UAAU,IAA/C,UAAkB,CAAlB,EAAgE;AAC9D,aAAA,oBAAA,CAAA,cAAA,EAA0C,YAAM;AAC9C,UAAA,MAAI,CAAJ,iBAAA,IAAA,CAAA;;AACA,UAAA,MAAI,CAAJ,oBAAA,CAAA,cAAA,EAA0C,MAAI,CAA9C,wBAAA;;AACA,UAAA,MAAI,CAAJ,gBAAA,CAAA,cAAA,EAAsCF,cAAc,CAApD,UAAA;AAHF,SAAA;AAMA,eAAO,KAAA,gBAAA,CAAA,cAAA,EAAP,GAAO,CAAP;AACD;;AAED,UAAIzB,cAAc,IAAlB,UAAA,EAAkC;AAChC,aAAA,iBAAA,IAAA,CAAA;AACA,aAAA,oBAAA,CAAA,cAAA,EAA0C,KAA1C,wBAAA;;AAEA,YAAI0B,UAAU,IAAI1B,cAAc,CAAdA,UAAAA,IAA6ByB,cAAc,CAAzDC,cAAAA,IAA4E,CAAC,KAAA,KAAA,CAAjF,MAAA,EAAoG;AAClG,eAAA,gBAAA,CAAA,cAAA,EAAsCD,cAAc,CAAdA,cAAAA,GAAtC,EAAA;AADF,SAAA,MAEO;AACL,eAAA,gBAAA,CAAA,cAAA,EAAA,GAAA;AACD;AACF;;AAED,WAAA,iBAAA,IAAA,CAAA;AACA,WAAA,oBAAA,CAAA,cAAA,EAA0C,KAA1C,wBAAA;AACA,WAAA,gBAAA,CAAA,cAAA,EAAsCA,cAAc,CAApD,UAAA;AACD;;;;AA0BD;;;;;;qCAMiB1C,U,EAA8BgD,O,EAAiB;AAC9D,UAAMC,OAAO,GAAA,wBAAA,MAAA,CAA2BjD,UAAU,CAAlD,EAAa,CAAb;AAEAkD,MAAAA,oBAAoB,CAAC,KAAA,QAAA,CAArBA,OAAqB,CAAD,CAApBA;AAEA,WAAA,QAAA,CAAA,OAAA,IAAyBtD,qBAAqB,CAAC,YAAM;AACnDuD,QAAAA,iBAAiB,CAACnD,UAAU,CAAX,YAAA,EAAA,kBAAA,MAAA,CAAA,OAAA,EAAjBmD,OAAiB,CAAA,CAAjBA;;AAEA,YAAInD,UAAU,CAAVA,IAAAA,KAAoBC,SAAS,CAA7BD,IAAAA,IAAsCA,UAAU,CAApD,aAAA,EAAoE;AAClE,cAAMoD,YAAY,GAAGpD,UAAU,CAAVA,aAAAA,CAArB,YAAA;AACA,cAAMqD,MAAM,GAAGrD,UAAU,CAAVA,YAAAA,CAAAA,YAAAA,IAAwCgD,OAAO,GAA9D,GAAehD,CAAf;AAEAmD,UAAAA,iBAAiB,CAACnD,UAAU,CAAX,aAAA,EAAA,mBAAA,MAAA,CAAA,YAAA,EAAA,QAAA,EAAA,MAAA,CAAmEqD,MAAM,GAAzE,YAAA,EAAjBF,IAAiB,CAAA,CAAjBA;AACD;AARH,OAA8C,CAA9C;AAUD;AAED;;;;mCACenD,U,EAA2D;AAAA,UAAA,MAAA,GAAA,IAAA;;AAAA,UAA7BsD,YAA6B,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAN,IAAM;;AACxE,UAAIA,YAAY,KAAZA,IAAAA,IAAyB,KAAA,KAAA,CAAA,OAAA,CAAA,CAAA,MAA0BtD,UAAU,CAAjE,EAAA,EAAsE;AACpE;AACD;;AAEDkD,MAAAA,oBAAoB,CAAC,KAArBA,kBAAoB,CAApBA;AACA,WAAA,kBAAA,GAA0BtD,qBAAqB,CAAC,YAAM;AACpD,YAAI,MAAI,CAAJ,cAAA,CAAJ,OAAA,EAAiC;AAAA,cACvBiB,UADuB,GACWb,UADX,CAAA,UAAA;AAAA,cACXuD,iBADW,GACWvD,UADX,CAAA,iBAAA;AAG/B,cAAMwD,OAAO,GAAGF,YAAY,KAAZA,IAAAA,GAAwB,IAAI,CAACC,iBAAiB,GAAlB,UAAA,KAAoC,MAAxC,UAAI,CAAJ,IAAxBD,CAAAA,GAAhB,YAAA;AACA,UAAA,MAAI,CAAJ,cAAA,CAAA,OAAA,CAAA,KAAA,CAAA,OAAA,GAA4C1F,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYA,IAAI,CAAJA,GAAAA,CAAAA,GAAAA,EAAZA,OAAYA,CAAZA,EAA5C,QAA4CA,EAA5C;AACD;AANH,OAA+C,CAA/C;AAQD;AAED;;;;;;6BAuBS;AAAA,UAAA,MAAA,GAAA,IAAA;;AAAA,UAAA,YAAA,GACgG,KADhG,KAAA;AAAA,UACCK,SADD,GAAA,YAAA,CAAA,SAAA;AAAA,UACYF,WADZ,GAAA,YAAA,CAAA,WAAA;AAAA,UACyBG,SADzB,GAAA,YAAA,CAAA,SAAA;AAAA,UACoCC,aADpC,GAAA,YAAA,CAAA,aAAA;AAAA,UACmDC,QADnD,GAAA,YAAA,CAAA,QAAA;AAAA,UAC6DK,SAD7D,GAAA,YAAA,CAAA,SAAA;AAAA,UACwEC,QADxE,GAAA,YAAA,CAAA,QAAA;AAAA,UACkFL,SADlF,GAAA,YAAA,CAAA,SAAA;;AAGP,UAAI,CAAA,WAAA,IAAgB,CAAhB,SAAA,IAA8B,CAA9B,SAAA,IAA4C,CAAhD,QAAA,EAA2D;AACzD,eAAA,IAAA;AACD;;AAED,aACE,mBAAA,CAAC,gBAAD,CAAA,QAAA,EAAA;AAA2B,QAAA,KAAK,EAAE;AAAlC,OAAA,EACE,mBAAA,CAAC,gBAAD,CAAA,QAAA,EAAA;AAA2B,QAAA,KAAK,EAAE,KAAKsF;AAAvC,OAAA,EACE,mBAAA,CAAA,KAAA,EAAA;AACE,QAAA,SAAS,EAAEC,UAAU,CAACC,YAAY,CAAA,WAAA,EAAc,KAAA,KAAA,CAA3B,QAAa,CAAb,EAAiD;AACpE,+BAAqB,KAAA,KAAA,CAAA,cAAA,CAAA,WAAA,KAA0CC,WAAW,CADN,MAAA;AAEpE,gCAFoE,SAAA;AAGpE,kCAAwBzF;AAH4C,SAAjD,CADvB;AAME,QAAA,MAAM,EAAE,KANV,WAAA;AAOE,QAAA,KAAK,EAAE,KAPT,UAAA;AAQE,QAAA,QAAQ,EAAE,KAAK0F;AARjB,OAAA,EAUE,mBAAA,CAAA,KAAA,EAAA;AACE,QAAA,SAAS,EADX,iBAAA;AAEE,QAAA,OAAO,EAAE,KAFX,uBAAA;AAGE,QAAA,GAAG,EAAE,KAAKC;AAHZ,OAAA,CAVF,EAeE,mBAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAd,qBAAA;AAAqC,QAAA,GAAG,EAAE,KAAKC;AAA/C,OAAA,EACG,KAAA,SAAA,GAAA,GAAA,CAAqB,UAAA,KAAA,EAAW;AAC/B,YAAMjD,OAAO,GAAGzB,QAAQ,CAACF,KAAK,CAAN,KAAA,EAAxB,IAAwB,CAAxB;;AACA,YAAI,CAAClB,aAAa,CAAbA,QAAAA,CAAL,OAAKA,CAAL,EAAsC;AACpC,iBAAA,IAAA;AACD;;AACD,YAAM6B,UAAU,GAAA,aAAA,CAAA,EAAA,EAAQ,MAAI,CAAJ,WAAA,CAAxB,OAAwB,CAAR,CAAhB;;AAEA,YAAMkE,MAAM,GAAGlE,UAAU,CAAVA,IAAAA,KAAoBC,SAAS,CAA5C,IAAA;AACA,YAAMkE,GAAG,GAAA,SAAA,MAAA,CAAT,OAAS,CAAT;AAEA,eACE,mBAAA,CAAA,KAAA,EAAA;AACE,UAAA,GAAG,EADL,GAAA;AAEE,UAAA,GAAG,EAAE,SAAA,GAAA,CAAA,CAAA,EAAA;AAAA,mBAAO,MAAI,CAAJ,WAAA,CAAA,OAAA,EAAA,YAAA,GAAP,CAAA;AAFP,WAAA;AAGE,UAAA,SAAS,EAAEP,UAAU,CAAA,kBAAA,EAAqB;AACxC,wCAA4B5C,OAAO,KADK,WAAA;AAExC,sCAA0BA,OAAO,KAFO,SAAA;AAGxC,sCAA0BA,OAAO,KAHO,SAAA;AAKxC,0CALwC,QAAA;AAOxC,4CAAgCkD,MAAM,IAAIlE,UAAU,CAPZ,UAAA;AAQxC,0CAA8BkE,MAAM,IAAIlE,UAAU,CARV,QAAA;AASxC,2CAA+BkE,MAAM,IAAIlE,UAAU,CAACK;AATZ,WAArB;AAHvB,SAAA,EADF,KACE,CADF;AA7BZ,OAmBW,CADH,CAfF,CADF,CADF,CADF;AAoDD;;;wBAvtBwB;AACvB,aAAO,KAAA,KAAA,CAAP,QAAA;AACD;;;wBAEoB;AACnB,aAAO,KAAA,KAAA,CAAP,MAAA;AACD;;;;EApDmCvC,S;;AAwwBtC,OAAO,IAAMsG,cAAc,GAAGC,WAAW,CAACC,YAAY,CAACC,OAAO,CAArB,uBAAqB,CAAR,CAAb,EAAA,qBAAA,EAAlC,gBAAkC,CAAlC","sourcesContent":["import React, { Component, createRef, ReactElement, SyntheticEvent } from 'react';\nimport Touch, { TouchEvent } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { setTransformStyle } from '../../lib/styles';\nimport { rubber } from '../../lib/touch';\nimport { isFunction } from '../../lib/utils';\nimport { ANDROID, IOS, VKCOM } from '../../lib/platform';\nimport { transitionEvent } from '../../lib/supportEvents';\nimport { HasPlatform } from '../../types';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { withContext } from '../../hoc/withContext';\nimport ModalRootContext, { ModalRootContextInterface } from './ModalRootContext';\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n  WebviewType,\n} from '../ConfigProvider/ConfigProviderContext';\nimport { ModalsState, ModalsStateEntry, ModalType, TranslateRange } from './types';\nimport { MODAL_PAGE_DEFAULT_PERCENT_HEIGHT } from './constants';\nimport { DOMProps, withDOM } from '../../lib/dom';\nimport { getNavId } from '../../lib/getNavId';\nimport { warnOnce } from '../../lib/warnOnce';\n\nconst warn = warnOnce('ModalRoot');\nconst IS_DEV = process.env.NODE_ENV === 'development';\n\nfunction numberInRange(number: number, range: TranslateRange) {\n  return number >= range[0] && number <= range[1];\n}\n\nfunction rangeTranslate(number: number) {\n  return Math.max(0, Math.min(98, number));\n}\n\nexport interface ModalRootProps extends HasPlatform {\n  activeModal?: string | null;\n\n  /**\n   * Будет вызвано при закрытии активной модалки с её id\n   */\n  onClose?(modalId: string): void;\n  /**\n   * @ignore\n   */\n  configProvider?: ConfigProviderContextInterface;\n}\n\ninterface ModalRootState {\n  activeModal?: string;\n  prevModal?: string;\n  nextModal?: string;\n  visibleModals?: string[];\n  animated?: boolean;\n  switching?: boolean;\n  history?: string[];\n  isBack?: boolean;\n  inited?: boolean;\n  touchDown?: boolean;\n  dragging?: boolean;\n}\n\nclass ModalRootTouchComponent extends Component<ModalRootProps & DOMProps, ModalRootState> {\n  constructor(props: ModalRootProps) {\n    super(props);\n\n    const activeModal = props.activeModal;\n\n    this.state = {\n      activeModal: null,\n      prevModal: null,\n      nextModal: activeModal,\n      visibleModals: activeModal ? [activeModal] : [],\n      animated: !!activeModal,\n      switching: false,\n      history: activeModal ? [activeModal] : [],\n      isBack: false,\n      inited: false,\n      touchDown: false,\n      dragging: false,\n    };\n\n    this.activeTransitions = 0;\n    this.maskElementRef = React.createRef();\n\n    this.initModalsState();\n\n    this.modalRootContext = {\n      updateModalHeight: this.updateModalHeight,\n      registerModal: ({ id, ...data }) => Object.assign(this.modalsState[id], data),\n      onClose: this.triggerActiveModalClose,\n      isInsideModal: true,\n    };\n\n    this.frameIds = {};\n  }\n\n  private modalsState: ModalsState;\n  private documentScrolling: boolean;\n  private activeTransitions: number;\n  private readonly maskElementRef: React.RefObject<HTMLDivElement>;\n  private readonly viewportRef = createRef<HTMLDivElement>();\n  private maskAnimationFrame: number;\n  private readonly modalRootContext: ModalRootContextInterface;\n  private readonly frameIds: {\n    [index: string]: number;\n  };\n\n  get document(): Document {\n    return this.props.document;\n  }\n\n  get window(): Window {\n    return this.props.window;\n  }\n\n  getModals() {\n    return React.Children.toArray(this.props.children) as ReactElement[];\n  }\n\n  initModalsState() {\n    this.modalsState = this.getModals().reduce<ModalsState>((acc, Modal) => {\n      const modalProps = Modal.props;\n      const state: ModalsStateEntry = {\n        id: getNavId(modalProps, warn),\n        onClose: Modal.props.onClose,\n        dynamicContentHeight: !!modalProps.dynamicContentHeight,\n      };\n\n      // ModalPage props\n      if (typeof modalProps.settlingHeight === 'number') {\n        state.settlingHeight = modalProps.settlingHeight;\n      }\n\n      acc[state.id] = state;\n      return acc;\n    }, {});\n  }\n\n  componentDidMount() {\n    this.initActiveModal();\n  }\n\n  componentWillUnmount() {\n    this.toggleDocumentScrolling(true);\n    if (this.props.platform === IOS) {\n      this.window.removeEventListener('resize', this.updateModalTranslate, false);\n    }\n  }\n\n  componentDidUpdate(prevProps: ModalRootProps, prevState: ModalRootState) {\n    if (this.props.activeModal !== prevProps.activeModal && !this.state.switching) {\n      const nextModal = this.props.activeModal;\n      const prevModal = prevProps.activeModal;\n\n      if (IS_DEV && nextModal !== null && !this.modalsState[nextModal]) {\n        return warn(`[componentDidUpdate] nextModal ${nextModal} not found`);\n      }\n\n      let history = [...this.state.history];\n      let isBack = false;\n\n      if (nextModal === null) {\n        history = [];\n      } else if (history.includes(nextModal)) {\n        history = history.splice(0, history.indexOf(nextModal) + 1);\n        isBack = true;\n      } else {\n        history.push(nextModal);\n      }\n\n      return this.setState({\n        activeModal: null,\n        nextModal,\n        prevModal,\n        visibleModals: [nextModal, prevModal],\n        history,\n        isBack,\n        animated: true,\n        inited: false,\n        switching: false,\n      }, () => {\n        if (nextModal === null) {\n          this.closeActiveModal();\n        } else {\n          this.initActiveModal();\n        }\n      });\n    }\n\n    if (this.state.switching && !prevState.switching) {\n      requestAnimationFrame(() => this.switchPrevNext());\n    }\n\n    if (!this.state.activeModal && !this.state.prevModal && !this.state.nextModal) {\n      this.toggleDocumentScrolling(true);\n    } else {\n      this.toggleDocumentScrolling(false);\n    }\n  }\n\n  /* Отключает скролл документа */\n  toggleDocumentScrolling(enabled: boolean) {\n    if (this.documentScrolling === enabled) {\n      return;\n    }\n    this.documentScrolling = enabled;\n\n    if (enabled) {\n      // Здесь нужен последний аргумент с такими же параметрами, потому что\n      // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n      // https://github.com/VKCOM/VKUI/issues/444\n      // @ts-ignore (В интерфейсе EventListenerOptions нет поля passive)\n      this.window.removeEventListener('touchmove', this.preventTouch, { passive: false });\n    } else {\n      this.window.addEventListener('touchmove', this.preventTouch, { passive: false });\n    }\n  }\n\n  preventTouch = (event: any) => {\n    if (!event) {\n      return false;\n    }\n    while (event.originalEvent) {\n      event = event.originalEvent;\n    }\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    return false;\n  };\n\n  /**\n   * Инициализирует модалку перед анимацией открытия\n   */\n  initActiveModal() {\n    const activeModal = this.state.activeModal || this.state.nextModal;\n    if (!activeModal) {\n      return;\n    }\n\n    const modalState = this.modalsState[activeModal];\n    // Отслеживаем изменение размеров viewport (Необходимо для iOS)\n    if (this.props.platform === IOS) {\n      this.window.addEventListener('resize', this.updateModalTranslate, false);\n    }\n\n    switch (modalState.type) {\n      case ModalType.PAGE:\n        modalState.settlingHeight = modalState.settlingHeight || MODAL_PAGE_DEFAULT_PERCENT_HEIGHT;\n        this.initPageModal(modalState);\n        break;\n\n      case ModalType.CARD:\n        this.initCardModal(modalState);\n        break;\n\n      default:\n        if (IS_DEV) {\n          warn('[initActiveModal] modalState.type is unknown');\n        }\n    }\n\n    this.setState({ inited: true, switching: true });\n  }\n\n  updateModalTranslate = () => {\n    const activeModal = this.state.activeModal || this.state.nextModal;\n    if (!activeModal) {\n      return;\n    }\n\n    const modalState = this.modalsState[activeModal];\n    this.animateTranslate(modalState, modalState.translateY);\n  };\n\n  initPageModal(modalState: ModalsStateEntry) {\n    const { contentElement } = modalState;\n    const contentHeight = (contentElement.firstElementChild as HTMLElement).offsetHeight;\n\n    let prevTranslateY = modalState.translateY;\n\n    modalState.expandable = contentHeight > contentElement.clientHeight || modalState.settlingHeight === 100;\n\n    let collapsed = false;\n    let expanded = false;\n    let translateYFrom;\n    let translateY;\n    let expandedRange: TranslateRange;\n    let collapsedRange: TranslateRange;\n    let hiddenRange: TranslateRange;\n\n    if (modalState.expandable) {\n      translateYFrom = 100 - modalState.settlingHeight;\n\n      const shiftHalf = translateYFrom / 2;\n      const visiblePart = 100 - translateYFrom;\n\n      expandedRange = [0, shiftHalf];\n      collapsedRange = [shiftHalf, translateYFrom + visiblePart / 4];\n      hiddenRange = [translateYFrom + visiblePart / 4, 100];\n\n      collapsed = translateYFrom > 0;\n      expanded = translateYFrom <= 0;\n      translateY = translateYFrom;\n    } else {\n      const headerHeight = modalState.headerElement.offsetHeight;\n      const height = contentHeight + headerHeight;\n\n      translateYFrom = 100 - height / modalState.innerElement.parentElement.offsetHeight * 100;\n      translateY = translateYFrom;\n\n      expandedRange = [translateY, translateY + 25];\n      collapsedRange = [translateY + 25, translateY + 25];\n      hiddenRange = [translateY + 25, translateY + 100];\n    }\n\n    // Если модалка может открываться на весь экран, и новый сдвиг больше предыдущего, то откроем её на весь экран\n    if (modalState.expandable && translateY > prevTranslateY || modalState.settlingHeight === 100) {\n      translateY = 0;\n    }\n\n    modalState.expandedRange = expandedRange;\n    modalState.collapsedRange = collapsedRange;\n    modalState.hiddenRange = hiddenRange;\n    modalState.translateY = translateY;\n    modalState.translateYFrom = translateYFrom;\n    modalState.collapsed = collapsed;\n    modalState.expanded = expanded;\n  }\n\n  initCardModal(modalState: ModalsStateEntry) {\n    modalState.translateY = 0;\n  }\n\n  checkPageContentHeight() {\n    const { activeModal, nextModal } = this.state;\n    const modalId = activeModal || nextModal;\n\n    const modalState = this.modalsState[modalId];\n    if (modalState?.type === ModalType.PAGE && modalState?.modalElement) {\n      const prevModalState = { ...modalState };\n      this.initPageModal(modalState);\n      const currentModalState = { ...modalState };\n\n      let needAnimate = false;\n\n      if (prevModalState.expandable === currentModalState.expandable) {\n        if (prevModalState.translateYFrom !== currentModalState.translateYFrom) {\n          needAnimate = true;\n        }\n      } else {\n        needAnimate = true;\n      }\n\n      if (needAnimate) {\n        this.animateTranslate(modalState, modalState.translateY);\n      }\n    }\n  }\n\n  updateModalHeight = () => {\n    const { activeModal, nextModal } = this.state;\n\n    const modalId = activeModal || nextModal;\n    const modalState = modalId ? this.modalsState[modalId] : undefined;\n\n    if (modalState && modalState.type === ModalType.PAGE && modalState.dynamicContentHeight) {\n      if (this.state.switching) {\n        this.waitTransitionFinish(modalState, () => {\n          requestAnimationFrame(() => this.checkPageContentHeight());\n        });\n      } else {\n        requestAnimationFrame(() => this.checkPageContentHeight());\n      }\n    }\n  };\n\n  closeActiveModal() {\n    // Сбрасываем состояния, которые могут помешать закрытию модального окна\n    this.setState({ touchDown: false, switching: false });\n\n    if (this.props.platform === IOS) {\n      this.window.removeEventListener('resize', this.updateModalTranslate, false);\n    }\n\n    const { prevModal } = this.state;\n    if (!prevModal) {\n      return warn(`[closeActiveModal] prevModal is ${prevModal}`);\n    }\n\n    const prevModalState = this.modalsState[prevModal];\n\n    this.waitTransitionFinish(prevModalState, this.prevNextSwitchEndHandler);\n    this.animateTranslate(prevModalState, 100);\n    this.setMaskOpacity(prevModalState, 0);\n  }\n\n  onTouchMove = (e: TouchEvent) => {\n    if (this.state.switching) {\n      return;\n    }\n    const activeModal = this.state.activeModal || this.state.nextModal;\n    if (!activeModal) {\n      return;\n    }\n\n    const modalState = this.modalsState[activeModal];\n\n    if (modalState.type === ModalType.PAGE) {\n      return this.onPageTouchMove(e, modalState);\n    }\n\n    if (modalState.type === ModalType.CARD) {\n      return this.onCardTouchMove(e, modalState);\n    }\n  };\n\n  onPageTouchMove(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { shiftY, startT, originalEvent } = event;\n    const target = originalEvent.target as HTMLElement;\n\n    if (!event.isY) {\n      if (this.viewportRef.current.contains(target)) {\n        originalEvent.preventDefault();\n      }\n      return;\n    }\n\n    if (!modalState.innerElement.contains(target)) {\n      return originalEvent.preventDefault();\n    }\n\n    originalEvent.stopPropagation();\n\n    const { expandable, contentScrolled, collapsed, expanded } = modalState;\n\n    if (!this.state.touchDown) {\n      modalState.touchStartTime = startT;\n      modalState.touchStartContentScrollTop = modalState.contentElement.scrollTop;\n      this.setState({ touchDown: true });\n    }\n\n    if (contentScrolled) {\n      return;\n    }\n\n    if (modalState.touchMovePositive === null) {\n      modalState.touchMovePositive = shiftY > 0;\n    }\n\n    if (\n      !modalState.expandable ||\n      collapsed ||\n      expanded && modalState.touchMovePositive && modalState.touchStartContentScrollTop === 0 ||\n      modalState.headerElement.contains(target)\n    ) {\n      originalEvent.preventDefault();\n\n      if (!expandable && shiftY < 0) {\n        return;\n      }\n\n      !this.state.dragging && this.setState({ dragging: true });\n\n      const shiftYPercent = shiftY / this.window.innerHeight * 100;\n      const shiftYCurrent = rubber(shiftYPercent, 72, 0.8, this.props.platform === ANDROID || this.props.platform === VKCOM);\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = rangeTranslate(modalState.translateY + shiftYCurrent);\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onCardTouchMove(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { originalEvent, shiftY, startT } = event;\n    const target = originalEvent.target as HTMLElement;\n    if (modalState.innerElement.contains(target)) {\n      if (!this.state.touchDown) {\n        modalState.touchStartTime = startT;\n        this.setState({ touchDown: true, dragging: true });\n      }\n\n      const shiftYPercent = shiftY / modalState.innerElement.offsetHeight * 100;\n      const shiftYCurrent = rubber(shiftYPercent, 72, 1.2, this.props.platform === ANDROID || this.props.platform === VKCOM);\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = Math.max(0, modalState.translateY + shiftYCurrent);\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onTouchEnd = (e: TouchEvent) => {\n    const activeModal = this.state.activeModal || this.state.nextModal;\n    if (!activeModal) {\n      return;\n    }\n    const modalState = this.modalsState[activeModal];\n\n    if (modalState.type === ModalType.PAGE) {\n      return this.onPageTouchEnd(e, modalState);\n    }\n\n    if (modalState.type === ModalType.CARD) {\n      return this.onCardTouchEnd(modalState);\n    }\n  };\n\n  onPageTouchEnd(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { startY, shiftY } = event;\n\n    modalState.contentScrolled = false;\n    modalState.touchMovePositive = null;\n\n    let setStateCallback;\n\n    if (this.state.dragging) {\n      const shiftYEndPercent = (startY + shiftY) / this.window.innerHeight * 100;\n\n      let translateY = modalState.translateYCurrent;\n      const expectTranslateY = translateY / (Date.now() - modalState.touchStartTime.getTime()) * 240 * 0.6 * (modalState.touchShiftYPercent < 0 ? -1 : 1);\n      translateY = rangeTranslate(translateY + expectTranslateY);\n\n      if (modalState.settlingHeight !== 100) {\n        if (numberInRange(translateY, modalState.expandedRange)) {\n          translateY = modalState.expandedRange[0];\n        } else if (numberInRange(translateY, modalState.collapsedRange)) {\n          translateY = modalState.translateYFrom;\n        } else if (numberInRange(translateY, modalState.hiddenRange)) {\n          translateY = 100;\n        } else {\n          translateY = modalState.translateYFrom;\n        }\n      } else {\n        if (numberInRange(translateY, [0, 25])) {\n          translateY = 0;\n        } else {\n          translateY = 100;\n        }\n      }\n\n      if (translateY !== 100 && shiftYEndPercent >= 75) {\n        translateY = 100;\n      }\n\n      modalState.translateY = translateY;\n      modalState.translateYCurrent = translateY;\n      modalState.collapsed = translateY > 0 && translateY < shiftYEndPercent;\n      modalState.expanded = translateY === 0;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        this.doCloseModal(modalState);\n      }\n\n      setStateCallback = () => {\n        if (!modalState.hidden) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState({\n      touchDown: false,\n      dragging: false,\n    }, setStateCallback);\n  }\n\n  onCardTouchEnd(modalState: ModalsStateEntry) {\n    let setStateCallback;\n\n    if (this.state.dragging) {\n      let translateY = modalState.translateYCurrent;\n\n      const expectTranslateY = translateY / (Date.now() - modalState.touchStartTime.getTime()) * 240 * 0.6 * (modalState.touchShiftYPercent < 0 ? -1 : 1);\n      translateY = Math.max(0, translateY + expectTranslateY);\n\n      if (translateY >= 30) {\n        translateY = 100;\n      } else {\n        translateY = 0;\n      }\n\n      modalState.translateY = translateY;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        this.doCloseModal(modalState);\n      }\n\n      setStateCallback = () => {\n        if (!modalState.hidden) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState({\n      touchDown: false,\n      dragging: false,\n    }, setStateCallback);\n  }\n\n  onScroll = (e: SyntheticEvent) => {\n    const activeModal = this.state.activeModal;\n\n    const target = e.target as HTMLElement;\n\n    if (!activeModal) {\n      return;\n    }\n    const modalState = this.modalsState[activeModal];\n    if (modalState.type === ModalType.PAGE && modalState.contentElement.contains(target)) {\n      modalState.contentScrolled = true;\n\n      clearTimeout(modalState.contentScrollStopTimeout);\n\n      modalState.contentScrollStopTimeout = window.setTimeout(() => {\n        if (modalState.contentScrolled) {\n          modalState.contentScrolled = false;\n        }\n      }, 250);\n    }\n  };\n\n  waitTransitionFinish(modalState: ModalsStateEntry, eventHandler: () => void) {\n    if (transitionEvent.supported) {\n      const onceHandler = () => {\n        modalState.innerElement.removeEventListener(transitionEvent.name, onceHandler);\n        eventHandler();\n      };\n\n      modalState.innerElement.addEventListener(transitionEvent.name, onceHandler);\n    } else {\n      setTimeout(eventHandler, this.props.platform === ANDROID || this.props.platform === VKCOM ? 320 : 400);\n    }\n  }\n\n  switchPrevNext() {\n    const { prevModal, nextModal } = this.state;\n\n    const prevModalState = this.modalsState[prevModal];\n    const nextModalState = this.modalsState[nextModal];\n\n    if (IS_DEV && !prevModalState && !nextModalState) {\n      return warn(`[switchPrevNext] prevModal is ${prevModal}, nextModal is ${nextModal}`);\n    }\n\n    const prevIsPage = !!prevModalState && prevModalState.type === ModalType.PAGE;\n    const prevIsCard = !!prevModalState && prevModalState.type === ModalType.CARD;\n\n    const nextIsPage = !!nextModalState && nextModalState.type === ModalType.PAGE;\n    const nextIsCard = !!nextModalState && nextModalState.type === ModalType.CARD;\n\n    // Ждём полного скрытия предыдущей модалки\n    if (prevModalState && (nextIsCard || prevIsCard && nextIsPage)) {\n      this.waitTransitionFinish(prevModalState, () => {\n        this.activeTransitions += 1;\n        this.waitTransitionFinish(nextModalState, this.prevNextSwitchEndHandler);\n        this.animateTranslate(nextModalState, nextModalState.translateY);\n      });\n\n      return this.animateTranslate(prevModalState, 100);\n    }\n\n    if (prevModalState && nextIsPage) {\n      this.activeTransitions += 1;\n      this.waitTransitionFinish(prevModalState, this.prevNextSwitchEndHandler);\n\n      if (prevIsPage && prevModalState.translateY <= nextModalState.translateYFrom && !this.state.isBack) {\n        this.animateTranslate(prevModalState, nextModalState.translateYFrom + 10);\n      } else {\n        this.animateTranslate(prevModalState, 100);\n      }\n    }\n\n    this.activeTransitions += 1;\n    this.waitTransitionFinish(nextModalState, this.prevNextSwitchEndHandler);\n    this.animateTranslate(nextModalState, nextModalState.translateY);\n  }\n\n  prevNextSwitchEndHandler = () => {\n    this.activeTransitions = Math.max(0, this.activeTransitions - 1);\n    if (this.activeTransitions > 0) {\n      return;\n    }\n\n    const activeModal = this.state.nextModal;\n\n    const newState: ModalRootState = {\n      prevModal: null,\n      nextModal: null,\n      visibleModals: [activeModal],\n      activeModal: activeModal,\n      animated: false,\n      switching: false,\n    };\n\n    if (!activeModal) {\n      newState.history = [];\n    }\n\n    this.setState(newState);\n  };\n\n  /**\n   * Анимирует сдвиг модалки\n   *\n   * @param {ModalsStateEntry} modalState\n   * @param {number} percent Процент сдвига: 0 – полностью открыта, 100 – полностью закрыта\n   */\n  animateTranslate(modalState: ModalsStateEntry, percent: number) {\n    const frameId = `animateTranslateFrame${modalState.id}`;\n\n    cancelAnimationFrame(this.frameIds[frameId]);\n\n    this.frameIds[frameId] = requestAnimationFrame(() => {\n      setTransformStyle(modalState.innerElement, `translate3d(0, ${percent}%, 0)`);\n\n      if (modalState.type === ModalType.PAGE && modalState.footerElement) {\n        const footerHeight = modalState.footerElement.offsetHeight;\n        const factor = modalState.innerElement.offsetHeight * (percent / 100);\n\n        setTransformStyle(modalState.footerElement, `translateY(calc(${footerHeight}px * -${factor / footerHeight}))`);\n      }\n    });\n  }\n\n  /* Устанавливает прозрачность для полупрозрачной подложки */\n  setMaskOpacity(modalState: ModalsStateEntry, forceOpacity: number = null) {\n    if (forceOpacity === null && this.state.history[0] !== modalState.id) {\n      return;\n    }\n\n    cancelAnimationFrame(this.maskAnimationFrame);\n    this.maskAnimationFrame = requestAnimationFrame(() => {\n      if (this.maskElementRef.current) {\n        const { translateY, translateYCurrent } = modalState;\n\n        const opacity = forceOpacity === null ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0 : forceOpacity;\n        this.maskElementRef.current.style.opacity = Math.max(0, Math.min(100, opacity)).toString();\n      }\n    });\n  }\n\n  /**\n   * Закрывает текущую модалку\n   */\n  triggerActiveModalClose = () => {\n    const activeModalState = this.modalsState[this.state.activeModal];\n    if (activeModalState) {\n      this.doCloseModal(activeModalState);\n    }\n  };\n\n  private readonly doCloseModal = (modalState: ModalsStateEntry) => {\n    // Сбрасываем состояния, которые могут помешать закрытию модального окна\n    this.setState({ touchDown: false, switching: false });\n\n    if (isFunction(modalState.onClose)) {\n      modalState.onClose();\n    } else if (isFunction(this.props.onClose)) {\n      this.props.onClose(modalState.id);\n    } else if (IS_DEV) {\n      warn('onClose is undefined');\n    }\n  };\n\n  render() {\n    const { prevModal, activeModal, nextModal, visibleModals, animated, touchDown, dragging, switching } = this.state;\n\n    if (!activeModal && !prevModal && !nextModal && !animated) {\n      return null;\n    }\n\n    return (\n      <TouchRootContext.Provider value={true}>\n        <ModalRootContext.Provider value={this.modalRootContext}>\n          <Touch\n            vkuiClass={classNames(getClassName('ModalRoot', this.props.platform), {\n              'ModalRoot--vkapps': this.props.configProvider.webviewType === WebviewType.VKAPPS,\n              'ModalRoot--touched': touchDown,\n              'ModalRoot--switching': switching,\n            })}\n            onMove={this.onTouchMove}\n            onEnd={this.onTouchEnd}\n            onScroll={this.onScroll}\n          >\n            <div\n              vkuiClass=\"ModalRoot__mask\"\n              onClick={this.triggerActiveModalClose}\n              ref={this.maskElementRef}\n            />\n            <div vkuiClass=\"ModalRoot__viewport\" ref={this.viewportRef}>\n              {this.getModals().map((Modal) => {\n                const modalId = getNavId(Modal.props, warn);\n                if (!visibleModals.includes(modalId)) {\n                  return null;\n                }\n                const modalState = { ...this.modalsState[modalId] };\n\n                const isPage = modalState.type === ModalType.PAGE;\n                const key = `modal-${modalId}`;\n\n                return (\n                  <div\n                    key={key}\n                    ref={(e) => this.modalsState[modalId].modalElement = e}\n                    vkuiClass={classNames('ModalRoot__modal', {\n                      'ModalRoot__modal--active': modalId === activeModal,\n                      'ModalRoot__modal--prev': modalId === prevModal,\n                      'ModalRoot__modal--next': modalId === nextModal,\n\n                      'ModalRoot__modal--dragging': dragging,\n\n                      'ModalRoot__modal--expandable': isPage && modalState.expandable,\n                      'ModalRoot__modal--expanded': isPage && modalState.expanded,\n                      'ModalRoot__modal--collapsed': isPage && modalState.collapsed,\n                    })}\n                  >{Modal}</div>\n                );\n              })}\n            </div>\n          </Touch>\n        </ModalRootContext.Provider>\n      </TouchRootContext.Provider>\n    );\n  }\n}\n\nexport const ModalRootTouch = withContext(withPlatform(withDOM<ModalRootProps>(ModalRootTouchComponent)), ConfigProviderContext, 'configProvider');\n"]},"metadata":{},"sourceType":"module"}