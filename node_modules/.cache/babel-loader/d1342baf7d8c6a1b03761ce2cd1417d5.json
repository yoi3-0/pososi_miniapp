{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport Caption from \"../Typography/Caption/Caption\";\nimport Tappable from \"../Tappable/Tappable\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport Avatar from \"../Avatar/Avatar\";\n\nvar CellTypography = function CellTypography(_ref) {\n  var size = _ref.size,\n      children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, [\"size\", \"children\"]);\n\n  return size === 's' ? createScopedElement(Caption, _extends({\n    level: \"2\",\n    weight: \"regular\"\n  }, restProps), children) : createScopedElement(Subhead, _extends({\n    weight: \"regular\"\n  }, restProps), children);\n};\n\nexport var HorizontalCell = function HorizontalCell(_ref2) {\n  var className = _ref2.className,\n      header = _ref2.header,\n      style = _ref2.style,\n      subtitle = _ref2.subtitle,\n      _ref2$size = _ref2.size,\n      size = _ref2$size === void 0 ? 's' : _ref2$size,\n      _ref2$children = _ref2.children,\n      children = _ref2$children === void 0 ? createScopedElement(Avatar, {\n    size: 56\n  }) : _ref2$children,\n      getRootRef = _ref2.getRootRef,\n      getRef = _ref2.getRef,\n      restProps = _objectWithoutProperties(_ref2, [\"className\", \"header\", \"style\", \"subtitle\", \"size\", \"children\", \"getRootRef\", \"getRef\"]);\n\n  var platform = usePlatform();\n  return createScopedElement(\"div\", {\n    vkuiClass: classNames(getClassName('HorizontalCell', platform), \"HorizontalCell--\".concat(size)),\n    ref: getRootRef,\n    style: style,\n    className: className\n  }, createScopedElement(Tappable, _extends({\n    vkuiClass: \"HorizontalCell__body\",\n    getRootRef: getRef\n  }, restProps), hasReactNode(children) && createScopedElement(\"div\", {\n    vkuiClass: \"HorizontalCell__image\"\n  }, children), createScopedElement(\"div\", {\n    vkuiClass: \"HorizontalCell__content\"\n  }, hasReactNode(header) && createScopedElement(CellTypography, {\n    size: size,\n    vkuiClass: \"HorizontalCell__title\"\n  }, header), hasReactNode(subtitle) && createScopedElement(Caption, {\n    weight: \"regular\",\n    level: \"1\",\n    vkuiClass: \"HorizontalCell__subtitle\"\n  }, subtitle))));\n};","map":{"version":3,"sources":["../../../src/components/HorizontalCell/HorizontalCell.tsx"],"names":["CellTypography","size","children","restProps","HorizontalCell","className","header","style","subtitle","getRootRef","getRef","platform","usePlatform","classNames","getClassName","hasReactNode"],"mappings":"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","sourcesContent":["import { AnchorHTMLAttributes, ElementType, FC, HTMLAttributes, ReactNode } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { hasReactNode } from '../../lib/utils';\nimport Caption from '../Typography/Caption/Caption';\nimport Tappable from '../Tappable/Tappable';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport Avatar from '../Avatar/Avatar';\nimport { HasRef, HasRootRef } from '../../types';\n\ninterface CellTypographyProps extends HTMLAttributes<HTMLDivElement> {\n  size: HorizontalCellProps['size'];\n}\n\nconst CellTypography: FC<CellTypographyProps> = ({ size, children, ...restProps }: CellTypographyProps) => {\n  return size === 's'\n    ? <Caption level=\"2\" weight=\"regular\" {...restProps}>{children}</Caption>\n    : <Subhead weight=\"regular\" {...restProps}>{children}</Subhead>;\n};\n\nexport interface HorizontalCellProps extends\n  AnchorHTMLAttributes<HTMLElement>,\n  HasRootRef<HTMLDivElement>,\n  HasRef<HTMLDivElement> {\n  Component?: ElementType;\n  size?: 's' | 'm' | 'l';\n  header?: ReactNode;\n  subtitle?: ReactNode;\n  disabled?: boolean;\n}\n\nexport const HorizontalCell: FC<HorizontalCellProps> = ({\n  className,\n  header,\n  style,\n  subtitle,\n  size = 's',\n  children = <Avatar size={56} />,\n  getRootRef,\n  getRef,\n  ...restProps\n}: HorizontalCellProps) => {\n  const platform = usePlatform();\n\n  return (\n    <div\n      vkuiClass={classNames(getClassName('HorizontalCell', platform), `HorizontalCell--${size}`)}\n      ref={getRootRef}\n      style={style}\n      className={className}\n    >\n      <Tappable\n        vkuiClass=\"HorizontalCell__body\"\n        getRootRef={getRef}\n        {...restProps}\n      >\n        {hasReactNode(children) && <div vkuiClass=\"HorizontalCell__image\">{children}</div>}\n        <div vkuiClass=\"HorizontalCell__content\">\n          {hasReactNode(header) && (\n            <CellTypography size={size} vkuiClass=\"HorizontalCell__title\">{header}</CellTypography>\n          )}\n          {hasReactNode(subtitle) && <Caption weight=\"regular\" level=\"1\" vkuiClass=\"HorizontalCell__subtitle\">{subtitle}</Caption>}\n        </div>\n      </Tappable>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}