{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { useCallback, useState } from 'react';\nimport Input from \"../Input/Input\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { leadingZero } from \"../../lib/utils\";\nimport CustomSelect from \"../CustomSelect/CustomSelect\";\nvar DefaultMonths = ['Января', 'Февраля', 'Марта', 'Апреля', 'Мая', 'Июня', 'Июля', 'Августа', 'Сентября', 'Октября', 'Ноября', 'Декабря']; // Переводим state к формату гг-мм-дд\n\nfunction convertToInputFormat(_ref) {\n  var day = _ref.day,\n      month = _ref.month,\n      year = _ref.year;\n  return \"\".concat(year, \"-\").concat(leadingZero(month), \"-\").concat(leadingZero(day));\n} // Переводим дату формата гг-мм-дд к объекту\n\n\nfunction parseInputDate(date) {\n  var splited = date.split('-');\n  return {\n    day: Number(splited[2]),\n    month: Number(splited[1]),\n    year: Number(splited[0])\n  };\n}\n\nfunction getMonthMaxDay(month, year) {\n  return month ? new Date(year || 2016, month, 0).getDate() : 31;\n}\n\nvar range = function range(start, end) {\n  var swap = start > end;\n  var arr = [];\n\n  for (var i = Math.min(start, end); i <= Math.max(start, end); i++) {\n    arr.push(i);\n  }\n\n  return swap ? arr.reverse() : arr;\n};\n\nvar DatePickerCustom = function DatePickerCustom(_ref2) {\n  var name = _ref2.name,\n      min = _ref2.min,\n      max = _ref2.max,\n      dayPlaceholder = _ref2.dayPlaceholder,\n      monthPlaceholder = _ref2.monthPlaceholder,\n      yearPlaceholder = _ref2.yearPlaceholder,\n      popupDirection = _ref2.popupDirection,\n      defaultValue = _ref2.defaultValue,\n      hasMouse = _ref2.hasMouse,\n      monthNames = _ref2.monthNames,\n      day = _ref2.day,\n      month = _ref2.month,\n      year = _ref2.year,\n      onDateChange = _ref2.onDateChange,\n      disabled = _ref2.disabled,\n      restProps = _objectWithoutProperties(_ref2, [\"name\", \"min\", \"max\", \"dayPlaceholder\", \"monthPlaceholder\", \"yearPlaceholder\", \"popupDirection\", \"defaultValue\", \"hasMouse\", \"monthNames\", \"day\", \"month\", \"year\", \"onDateChange\", \"disabled\"]);\n\n  var onSelectChange = function onSelectChange(e) {\n    onDateChange(_defineProperty({\n      day: day,\n      month: month,\n      year: year\n    }, e.target.name, Number(e.target.value)));\n  };\n\n  var dayOptions = range(1, getMonthMaxDay(month, year)).map(function (value) {\n    return {\n      label: String(value),\n      value: value\n    };\n  });\n  var monthOptions = (monthNames || DefaultMonths).map(function (name, index) {\n    return {\n      label: name,\n      value: index + 1\n    };\n  });\n  var yearOptions = range(max.year, min.year).map(function (value) {\n    return {\n      label: String(value),\n      value: value\n    };\n  });\n  return createScopedElement(\"div\", _extends({\n    vkuiClass: \"DatePicker\"\n  }, restProps), createScopedElement(\"div\", {\n    vkuiClass: \"DatePicker__container\"\n  }, createScopedElement(\"div\", {\n    vkuiClass: \"DatePicker__day\"\n  }, createScopedElement(CustomSelect, {\n    name: \"day\",\n    value: day,\n    options: dayOptions,\n    placeholder: dayPlaceholder,\n    popupDirection: popupDirection,\n    onChange: onSelectChange,\n    disabled: disabled\n  })), createScopedElement(\"div\", {\n    vkuiClass: \"DatePicker__month\"\n  }, createScopedElement(CustomSelect, {\n    name: \"month\",\n    value: month,\n    options: monthOptions,\n    placeholder: monthPlaceholder,\n    popupDirection: popupDirection,\n    onChange: onSelectChange,\n    disabled: disabled\n  })), createScopedElement(\"div\", {\n    vkuiClass: \"DatePicker__year\"\n  }, createScopedElement(CustomSelect, {\n    name: \"year\",\n    value: year,\n    options: yearOptions,\n    placeholder: yearPlaceholder,\n    popupDirection: popupDirection,\n    onChange: onSelectChange,\n    disabled: disabled\n  }))), createScopedElement(\"input\", {\n    type: \"hidden\",\n    name: name,\n    value: convertToInputFormat({\n      day: day,\n      month: month,\n      year: year\n    })\n  }));\n};\n\nvar DatePickerNative = function DatePickerNative(_ref3) {\n  var min = _ref3.min,\n      max = _ref3.max,\n      dayPlaceholder = _ref3.dayPlaceholder,\n      monthPlaceholder = _ref3.monthPlaceholder,\n      yearPlaceholder = _ref3.yearPlaceholder,\n      popupDirection = _ref3.popupDirection,\n      defaultValue = _ref3.defaultValue,\n      hasMouse = _ref3.hasMouse,\n      day = _ref3.day,\n      month = _ref3.month,\n      year = _ref3.year,\n      onDateChange = _ref3.onDateChange,\n      restProps = _objectWithoutProperties(_ref3, [\"min\", \"max\", \"dayPlaceholder\", \"monthPlaceholder\", \"yearPlaceholder\", \"popupDirection\", \"defaultValue\", \"hasMouse\", \"day\", \"month\", \"year\", \"onDateChange\"]);\n\n  var defProps = day && month && year ? {\n    defaultValue: convertToInputFormat({\n      day: day,\n      month: month,\n      year: year\n    })\n  } : {};\n  var onStringChange = useCallback(function (e) {\n    onDateChange(parseInputDate(e.currentTarget.value));\n  }, [onDateChange]);\n  return createScopedElement(Input, _extends({}, restProps, {\n    type: \"date\",\n    onChange: onStringChange,\n    min: convertToInputFormat(min),\n    max: convertToInputFormat(max)\n  }, defProps));\n};\n\nvar DatePicker = function DatePicker(_ref4) {\n  var hasMouse = _ref4.hasMouse,\n      defaultValue = _ref4.defaultValue,\n      props = _objectWithoutProperties(_ref4, [\"hasMouse\", \"defaultValue\"]);\n\n  var _useState = useState(defaultValue || {\n    day: 0,\n    month: 0,\n    year: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var onDateChange = useCallback(function (update) {\n    setValue(update);\n    props.onDateChange && props.onDateChange(_objectSpread({}, update));\n  }, [props.onDateChange]);\n  var Cmp = hasMouse ? DatePickerCustom : DatePickerNative;\n  return createScopedElement(Cmp, _extends({}, props, value, {\n    onDateChange: onDateChange\n  }));\n};\n\nDatePicker.defaultProps = {\n  min: {\n    day: 0,\n    month: 0,\n    year: 0\n  },\n  max: {\n    day: 31,\n    month: 12,\n    year: 2100\n  }\n};\nexport default withAdaptivity(DatePicker, {\n  hasMouse: true\n});","map":{"version":3,"sources":["../../../src/components/DatePicker/DatePicker.tsx"],"names":["DefaultMonths","day","month","year","leadingZero","splited","date","Number","range","swap","start","arr","i","Math","DatePickerCustom","name","min","max","dayPlaceholder","monthPlaceholder","yearPlaceholder","popupDirection","defaultValue","hasMouse","monthNames","onDateChange","disabled","restProps","onSelectChange","e","dayOptions","getMonthMaxDay","label","String","value","monthOptions","index","yearOptions","convertToInputFormat","DatePickerNative","defProps","onStringChange","useCallback","parseInputDate","DatePicker","props","setValue","useState","Cmp","withAdaptivity"],"mappings":"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","sourcesContent":["import {\n  ChangeEventHandler,\n  HTMLAttributes,\n  FC,\n  useCallback,\n  useState,\n} from 'react';\nimport Input from '../Input/Input';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport { HasPlatform } from '../../types';\nimport { leadingZero } from '../../lib/utils';\nimport CustomSelect from '../CustomSelect/CustomSelect';\n\nconst DefaultMonths: string[] = [\n  'Января', 'Февраля', 'Марта', 'Апреля', 'Мая', 'Июня', 'Июля', 'Августа', 'Сентября', 'Октября', 'Ноября', 'Декабря',\n];\n\nexport type DatePickerDateFormat = {\n  day: number;\n  month: number;\n  year: number;\n};\n\nexport interface DatePickerProps extends Omit<HTMLAttributes<HTMLDivElement>, 'defaultValue' | 'min' | 'max'>, HasPlatform, AdaptivityProps {\n  min?: DatePickerDateFormat;\n  max?: DatePickerDateFormat;\n  name?: string;\n  defaultValue?: DatePickerDateFormat;\n  popupDirection?: 'top' | 'bottom';\n  monthNames?: string[];\n  dayPlaceholder?: string;\n  monthPlaceholder?: string;\n  yearPlaceholder?: string;\n  onDateChange?: (value: DatePickerDateFormat) => void;\n  disabled?: boolean;\n}\n\n// Переводим state к формату гг-мм-дд\nfunction convertToInputFormat({ day, month, year }: Partial<DatePickerDateFormat>) {\n  return `${year}-${leadingZero(month)}-${leadingZero(day)}`;\n}\n\n// Переводим дату формата гг-мм-дд к объекту\nfunction parseInputDate(date: string): DatePickerDateFormat {\n  const splited = date.split('-');\n\n  return {\n    day: Number(splited[2]),\n    month: Number(splited[1]),\n    year: Number(splited[0]),\n  };\n}\n\nfunction getMonthMaxDay(month?: number, year?: number) {\n  return month ? new Date(year || 2016, month, 0).getDate() : 31;\n}\n\nconst range = (start: number, end: number) => {\n  const swap = start > end;\n  const arr = [];\n  for (let i = Math.min(start, end); i <= Math.max(start, end); i++) {\n    arr.push(i);\n  }\n  return swap ? arr.reverse() : arr;\n};\n\nconst DatePickerCustom: FC<DatePickerProps & Partial<DatePickerDateFormat>> = ({\n  name, min, max,\n  dayPlaceholder, monthPlaceholder, yearPlaceholder,\n  popupDirection,\n  defaultValue,\n  hasMouse,\n  monthNames,\n  day, month, year,\n  onDateChange,\n  disabled,\n  ...restProps\n}) => {\n  const onSelectChange: ChangeEventHandler<HTMLSelectElement> = (e) => {\n    onDateChange({\n      day,\n      month,\n      year,\n      [e.target.name]: Number(e.target.value),\n    });\n  };\n  const dayOptions = range(1, getMonthMaxDay(month, year)).map((value) => ({\n    label: String(value),\n    value,\n  }));\n  const monthOptions = (monthNames || DefaultMonths).map((name, index) => ({\n    label: name,\n    value: index + 1,\n  }));\n  const yearOptions = range(max.year, min.year).map((value) => ({\n    label: String(value),\n    value: value,\n  }));\n  return (\n    <div vkuiClass=\"DatePicker\" {...restProps}>\n      <div vkuiClass=\"DatePicker__container\">\n        <div vkuiClass=\"DatePicker__day\">\n          <CustomSelect\n            name=\"day\"\n            value={day}\n            options={dayOptions}\n            placeholder={dayPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div vkuiClass=\"DatePicker__month\">\n          <CustomSelect\n            name=\"month\"\n            value={month}\n            options={monthOptions}\n            placeholder={monthPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n        <div vkuiClass=\"DatePicker__year\">\n          <CustomSelect\n            name=\"year\"\n            value={year}\n            options={yearOptions}\n            placeholder={yearPlaceholder}\n            popupDirection={popupDirection}\n            onChange={onSelectChange}\n            disabled={disabled}\n          />\n        </div>\n      </div>\n      <input type=\"hidden\" name={name} value={convertToInputFormat({ day, month, year })} />\n    </div>\n  );\n};\n\nconst DatePickerNative: FC<DatePickerProps & Partial<DatePickerDateFormat>> = ({\n  min, max,\n  dayPlaceholder, monthPlaceholder, yearPlaceholder,\n  popupDirection,\n  defaultValue,\n  hasMouse,\n  day, month, year,\n  onDateChange,\n  ...restProps\n}) => {\n  const defProps = day && month && year\n    ? { defaultValue: convertToInputFormat({ day, month, year }) }\n    : {};\n  const onStringChange: ChangeEventHandler<HTMLInputElement> = useCallback((e) => {\n    onDateChange(parseInputDate(e.currentTarget.value));\n  }, [onDateChange]);\n  return (\n    <Input\n      {...restProps}\n      type=\"date\"\n      onChange={onStringChange}\n      min={convertToInputFormat(min)}\n      max={convertToInputFormat(max)}\n      {...defProps}\n    />\n  );\n};\n\nconst DatePicker: FC<DatePickerProps> = ({ hasMouse, defaultValue, ...props }) => {\n  const [value, setValue] = useState<Partial<DatePickerDateFormat>>(defaultValue || {\n    day: 0,\n    month: 0,\n    year: 0,\n  });\n\n  const onDateChange = useCallback((update: DatePickerDateFormat) => {\n    setValue(update);\n    props.onDateChange && props.onDateChange({ ...update });\n  }, [props.onDateChange]);\n\n  const Cmp = hasMouse ? DatePickerCustom : DatePickerNative;\n  return <Cmp {...props} {...value} onDateChange={onDateChange} />;\n};\n\nDatePicker.defaultProps = {\n  min: { day: 0, month: 0, year: 0 },\n  max: { day: 31, month: 12, year: 2100 },\n};\n\nexport default withAdaptivity(DatePicker, {\n  hasMouse: true,\n});\n"]},"metadata":{},"sourceType":"module"}