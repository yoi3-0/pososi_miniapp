{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 20 20';\nvar id = 'education_outline_20';\nvar content = '<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" id=\"education_outline_20\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h20v20H0z\" /><path d=\"M17.5 9.063l-1.5.822V13c0 2.8-2.717 5-6 5s-6-2.2-6-5V9.885L1.649 8.596a1.25 1.25 0 010-2.192l7.75-4.25a1.25 1.25 0 011.202 0l7.75 4.25c.424.232.66.674.649 1.125v5.221a.75.75 0 11-1.5 0V9.063zm-3 1.645l-3.899 2.138a1.25 1.25 0 01-1.202 0L5.5 10.708V13c0 1.894 1.984 3.5 4.5 3.5s4.5-1.606 4.5-3.5v-2.292zM10 3.535L2.77 7.5 10 11.465 17.23 7.5 10 3.535z\" fill=\"currentColor\" fill-rule=\"nonzero\" /></g></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon20EducationOutline = function Icon20EducationOutline(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 20,\n    height: !isNaN(props.height) ? +props.height : 20\n  }));\n};\n\nIcon20EducationOutline.mountIcon = mountIcon;\nexport default Icon20EducationOutline;","map":{"version":3,"sources":["../../../tmp/20/education_outline.ts"],"names":["viewBox","id","content","isMounted","addSpriteSymbol","Icon20EducationOutline","useIsomorphicLayoutEffect","mountIcon","assign","width","isNaN","props","height"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA,C,CACA;;AACA,OAAA,aAAA,MAAA,kCAAA,C,CACA;;AACA,SAAA,MAAA,QAAA,mBAAA;AACA,SAAA,eAAA,EAAA,yBAAA,QAAA,WAAA;AACA,SAAA,OAAA,QAAA,YAAA;AAEA,IAAMA,OAAO,GAAb,WAAA;AACA,IAAMC,EAAE,GAAR,sBAAA;AACA,IAAMC,OAAO,GAAb,wjBAAA;AAEA,IAAIC,SAAS,GAAb,KAAA;;AACA,SAAA,SAAA,GAAqB;AACnB,MAAI,CAAJ,SAAA,EAAgB;AACdC,IAAAA,eAAe,CAAC,IAAA,aAAA,CAAkB;AAChCH,MAAAA,EAAE,EAD8B,EAAA;AAEhCD,MAAAA,OAAO,EAFyB,OAAA;AAGhCE,MAAAA,OAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfE;AAMAD,IAAAA,SAAS,GAATA,IAAAA;AACD;AACF;;AASD,IAAME,sBAAuD,GAAG,SAA1DA,sBAA0D,CAAA,KAAA,EAAW;AACzEC,EAAAA,yBAAyB,CAAC,YAAM;AAC9BC,IAAAA,SAAS;AADc,GAAA,EAAzBD,EAAyB,CAAzBA;AAIA,SAAA,aAAO,KAAK,CAAL,aAAA,CAAA,OAAA,EAA6BE,MAAM,CAAA,EAAA,EAAA,KAAA,EAAY;AACpDR,IAAAA,OAAO,EAD6C,OAAA;AAEpDC,IAAAA,EAAE,EAFkD,EAAA;AAGpDQ,IAAAA,KAAK,EAAE,CAACC,KAAK,CAACC,KAAK,CAAZ,KAAM,CAAN,GAAsB,CAACA,KAAK,CAA5B,KAAA,GAH6C,EAAA;AAIpDC,IAAAA,MAAM,EAAE,CAACF,KAAK,CAACC,KAAK,CAAZ,MAAM,CAAN,GAAuB,CAACA,KAAK,CAA7B,MAAA,GAAuC;AAJK,GAAZ,CAAnC,CAAP;AALF,CAAA;;AAaCN,sBAAD,CAAA,SAACA,GAAD,SAACA;AAED,eAAA,sBAAA","sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 20 20';\nconst id = 'education_outline_20';\nconst content = '<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" id=\"education_outline_20\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h20v20H0z\" /><path d=\"M17.5 9.063l-1.5.822V13c0 2.8-2.717 5-6 5s-6-2.2-6-5V9.885L1.649 8.596a1.25 1.25 0 010-2.192l7.75-4.25a1.25 1.25 0 011.202 0l7.75 4.25c.424.232.66.674.649 1.125v5.221a.75.75 0 11-1.5 0V9.063zm-3 1.645l-3.899 2.138a1.25 1.25 0 01-1.202 0L5.5 10.708V13c0 1.894 1.984 3.5 4.5 3.5s4.5-1.606 4.5-3.5v-2.292zM10 3.535L2.77 7.5 10 11.465 17.23 7.5 10 3.535z\" fill=\"currentColor\" fill-rule=\"nonzero\" /></g></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon20EducationOutlineProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon20EducationOutline: FC<Icon20EducationOutlineProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 20,\n    height: !isNaN(props.height) ? +props.height : 20,\n  }));\n};\n\n(Icon20EducationOutline as any).mountIcon = mountIcon;\n\nexport default Icon20EducationOutline;\n"]},"metadata":{},"sourceType":"module"}