{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useState } from 'react';\nimport { useDOM } from \"../lib/dom\";\nimport { useGlobalEventListener } from \"./useGlobalEventListener\";\nexport function useKeyboardInputTracker() {\n  var _useDOM = useDOM(),\n      document = _useDOM.document;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isKeyboardInputActive = _useState2[0],\n      toggleKeyboardInput = _useState2[1];\n\n  var enableKeyboardInput = useCallback(function (_ref) {\n    var key = _ref.key;\n\n    if (key.toUpperCase() === 'TAB') {\n      toggleKeyboardInput(true);\n    }\n  }, []);\n  var disableKeyboardInput = useCallback(function () {\n    toggleKeyboardInput(false);\n  }, []);\n  var eventOptions = {\n    passive: true,\n    capture: true\n  };\n  useGlobalEventListener(document, 'keydown', enableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, 'mousedown', disableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, 'touchstart', disableKeyboardInput, eventOptions);\n  return isKeyboardInputActive;\n}","map":{"version":3,"sources":["../../src/hooks/useKeyboardInputTracker.ts"],"names":["document","useDOM","isKeyboardInputActive","toggleKeyboardInput","useState","enableKeyboardInput","useCallback","key","disableKeyboardInput","eventOptions","passive","capture","useGlobalEventListener"],"mappings":";AAAA,SAAA,WAAA,EAAA,QAAA,QAAA,OAAA;AACA,SAAA,MAAA,QAAA,YAAA;AACA,SAAA,sBAAA,QAAA,0BAAA;AAEA,OAAO,SAAA,uBAAA,GAA4C;AAAA,MAAA,OAAA,GAC5BC,MAD4B,EAAA;AAAA,MACzCD,QADyC,GAAA,OAAA,CAAA,QAAA;;AAAA,MAAA,SAAA,GAGII,QAAQ,CAHZ,IAGY,CAHZ;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MAG1CF,qBAH0C,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAGnBC,mBAHmB,GAAA,UAAA,CAAA,CAAA,CAAA;;AAKjD,MAAME,mBAAmB,GAAGC,WAAW,CAAC,UAAA,IAAA,EAA4B;AAAA,QAAzBC,GAAyB,GAAA,IAAA,CAAzBA,GAAyB;;AAClE,QAAIA,GAAG,CAAHA,WAAAA,OAAJ,KAAA,EAAiC;AAC/BJ,MAAAA,mBAAmB,CAAnBA,IAAmB,CAAnBA;AACD;AAHoC,GAAA,EAAvC,EAAuC,CAAvC;AAMA,MAAMK,oBAAoB,GAAGF,WAAW,CAAC,YAAM;AAC7CH,IAAAA,mBAAmB,CAAnBA,KAAmB,CAAnBA;AADsC,GAAA,EAAxC,EAAwC,CAAxC;AAIA,MAAMM,YAAY,GAAG;AACnBC,IAAAA,OAAO,EADY,IAAA;AAEnBC,IAAAA,OAAO,EAAE;AAFU,GAArB;AAKAC,EAAAA,sBAAsB,CAAA,QAAA,EAAA,SAAA,EAAA,mBAAA,EAAtBA,YAAsB,CAAtBA;AACAA,EAAAA,sBAAsB,CAAA,QAAA,EAAA,WAAA,EAAA,oBAAA,EAAtBA,YAAsB,CAAtBA;AACAA,EAAAA,sBAAsB,CAAA,QAAA,EAAA,YAAA,EAAA,oBAAA,EAAtBA,YAAsB,CAAtBA;AAEA,SAAA,qBAAA;AACD","sourcesContent":["import { useCallback, useState } from 'react';\nimport { useDOM } from '../lib/dom';\nimport { useGlobalEventListener } from './useGlobalEventListener';\n\nexport function useKeyboardInputTracker(): boolean {\n  const { document } = useDOM();\n\n  const [isKeyboardInputActive, toggleKeyboardInput] = useState<boolean>(true);\n\n  const enableKeyboardInput = useCallback(({ key }: KeyboardEvent) => {\n    if (key.toUpperCase() === 'TAB') {\n      toggleKeyboardInput(true);\n    }\n  }, []);\n\n  const disableKeyboardInput = useCallback(() => {\n    toggleKeyboardInput(false);\n  }, []);\n\n  const eventOptions = {\n    passive: true,\n    capture: true,\n  };\n\n  useGlobalEventListener(document, 'keydown', enableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, 'mousedown', disableKeyboardInput, eventOptions);\n  useGlobalEventListener(document, 'touchstart', disableKeyboardInput, eventOptions);\n\n  return isKeyboardInputActive;\n}\n"]},"metadata":{},"sourceType":"module"}