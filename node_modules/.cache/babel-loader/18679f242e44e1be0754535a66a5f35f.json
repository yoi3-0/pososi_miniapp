{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport React, { Component } from 'react';\nimport Touch from \"../Touch/Touch\";\nimport TouchRootContext from \"../Touch/TouchContext\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { ANDROID } from \"../../lib/platform\";\nimport { getOffsetRect } from \"../../lib/offset\";\nimport { coordX, coordY } from \"../../lib/touch\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { hasHover } from '@vkontakte/vkjs';\nimport { setRef } from \"../../lib/utils\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { shouldTriggerClickOnEnterOrSpace } from \"../../lib/accessibility\";\n\nvar ts = function ts() {\n  return +Date.now();\n};\n\nexport var ACTIVE_DELAY = 70;\nexport var ACTIVE_EFFECT_DELAY = 600;\nvar storage = {};\n/*\n * Очищает таймауты и хранилище для всех экземпляров компонента, кроме переданного\n */\n\nfunction deactivateOtherInstances(exclude) {\n  Object.keys(storage).filter(function (id) {\n    return id !== exclude;\n  }).forEach(function (id) {\n    clearTimeout(storage[id].activeTimeout);\n    clearTimeout(storage[id].timeout);\n    storage[id].stop();\n    delete storage[id];\n  });\n}\n\nvar TappableContext = /*#__PURE__*/React.createContext({\n  insideTappable: false\n});\n\nvar Tappable = /*#__PURE__*/function (_Component) {\n  _inherits(Tappable, _Component);\n\n  var _super = _createSuper(Tappable);\n\n  function Tappable(props) {\n    var _this;\n\n    _classCallCheck(this, Tappable);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"id\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"isSlide\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"insideTouchRoot\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"timeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"wavesTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyDown\", function (e) {\n      var onKeyDown = _this.props.onKeyDown;\n\n      if (shouldTriggerClickOnEnterOrSpace(e)) {\n        e.preventDefault();\n\n        _this.container.click();\n      }\n\n      {\n        if (typeof onKeyDown === 'function') {\n          return onKeyDown(e);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onStart\", function (_ref) {\n      var originalEvent = _ref.originalEvent;\n      !_this.insideTouchRoot && _this.props.stopPropagation && originalEvent.stopPropagation();\n\n      if (_this.state.hasActive) {\n        if (originalEvent.touches && originalEvent.touches.length > 1) {\n          deactivateOtherInstances();\n          return;\n        }\n\n        if (_this.props.platform === ANDROID) {\n          _this.onDown(originalEvent);\n        }\n\n        storage[_this.id] = {\n          stop: _this.stop,\n          activeTimeout: window.setTimeout(_this.start, ACTIVE_DELAY)\n        };\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMove\", function (_ref2) {\n      var originalEvent = _ref2.originalEvent,\n          shiftXAbs = _ref2.shiftXAbs,\n          shiftYAbs = _ref2.shiftYAbs;\n      !_this.insideTouchRoot && _this.props.stopPropagation && originalEvent.stopPropagation();\n\n      if (shiftXAbs > 20 || shiftYAbs > 20) {\n        _this.isSlide = true;\n\n        _this.stop();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnd\", function (_ref3) {\n      var originalEvent = _ref3.originalEvent;\n      !_this.insideTouchRoot && _this.props.stopPropagation && originalEvent.stopPropagation();\n      var now = ts();\n\n      if (originalEvent.touches && originalEvent.touches.length > 0) {\n        _this.isSlide = false;\n\n        _this.stop();\n\n        return;\n      }\n\n      if (_this.state.active) {\n        if (now - _this.state.ts >= 100) {\n          // Долгий тап, выключаем подсветку\n          _this.stop();\n        } else {\n          // Короткий тап, оставляем подсветку\n          var timeout = window.setTimeout(_this.stop, _this.props.activeEffectDelay - now + _this.state.ts);\n\n          var store = _this.getStorage();\n\n          if (store) {\n            store.timeout = timeout;\n          }\n        }\n      } else if (!_this.isSlide) {\n        // Очень короткий тап, включаем подсветку\n        _this.start();\n\n        var _timeout = window.setTimeout(_this.stop, _this.props.activeEffectDelay);\n\n        if (_this.getStorage()) {\n          clearTimeout(_this.getStorage().activeTimeout);\n          _this.getStorage().timeout = _timeout;\n        } else {\n          _this.timeout = _timeout;\n        }\n      }\n\n      _this.isSlide = false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDown\", function (e) {\n      if (_this.props.platform === ANDROID) {\n        var _getOffsetRect = getOffsetRect(_this.container),\n            top = _getOffsetRect.top,\n            left = _getOffsetRect.left;\n\n        var x = coordX(e) - left;\n        var y = coordY(e) - top;\n        var key = 'wave' + Date.now().toString();\n\n        _this.setState(function (state) {\n          return {\n            clicks: _objectSpread(_objectSpread({}, state.clicks), {}, _defineProperty({}, key, {\n              x: x,\n              y: y\n            }))\n          };\n        });\n\n        _this.wavesTimeout = window.setTimeout(function () {\n          _this.setState(function (state) {\n            var clicks = _objectSpread({}, state.clicks);\n\n            delete clicks[key];\n            return {\n              clicks: clicks\n            };\n          });\n        }, 225);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnter\", function () {\n      _this.setState({\n        hovered: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onLeave\", function () {\n      _this.setState({\n        hovered: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"start\", function () {\n      if (!_this.state.active && _this.state.hasActive) {\n        _this.setState({\n          active: true,\n          ts: ts()\n        });\n      }\n\n      deactivateOtherInstances(_this.id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stop\", function () {\n      if (_this.state.active) {\n        _this.setState({\n          active: false,\n          ts: null\n        });\n      }\n\n      if (_this.getStorage()) {\n        clearTimeout(_this.getStorage().activeTimeout);\n        delete storage[_this.id];\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getStorage\", function () {\n      return storage[_this.id];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRef\", function (container) {\n      _this.container = container;\n      setRef(container, _this.props.getRootRef);\n    });\n\n    _this.id = Math.round(Math.random() * 1e8).toString(16);\n    _this.state = {\n      clicks: {},\n      active: false,\n      ts: null,\n      hasHover: props.hasHover,\n      hasActive: props.hasActive\n    };\n    _this.isSlide = false;\n    return _this;\n  }\n\n  _createClass(Tappable, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (storage[this.id]) {\n        clearTimeout(storage[this.id].timeout);\n        clearTimeout(storage[this.id].activeTimeout);\n        delete storage[this.id];\n      }\n\n      clearTimeout(this.wavesTimeout);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.hasHover !== this.props.hasHover || prevProps.hasActive !== this.props.hasActive) {\n        this.setState({\n          hasHover: this.props.hasHover,\n          hasActive: this.props.hasActive\n        });\n      }\n\n      if (!prevProps.disabled && this.props.disabled) {\n        this.setState({\n          hovered: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames,\n          _this2 = this;\n\n      var _this$state = this.state,\n          clicks = _this$state.clicks,\n          active = _this$state.active,\n          hovered = _this$state.hovered,\n          hasHover = _this$state.hasHover,\n          hasActive = _this$state.hasActive;\n      var defaultComponent = this.props.href ? 'a' : 'div';\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          _this$props$Component = _this$props.Component,\n          Component = _this$props$Component === void 0 ? defaultComponent : _this$props$Component,\n          onClick = _this$props.onClick,\n          onKeyDown = _this$props.onKeyDown,\n          activeEffectDelay = _this$props.activeEffectDelay,\n          stopPropagation = _this$props.stopPropagation,\n          getRootRef = _this$props.getRootRef,\n          platform = _this$props.platform,\n          sizeX = _this$props.sizeX,\n          hasMouse = _this$props.hasMouse,\n          propsHasHover = _this$props.hasHover,\n          hoverMode = _this$props.hoverMode,\n          propsHasActive = _this$props.hasActive,\n          activeMode = _this$props.activeMode,\n          hasFocusVisible = _this$props.hasFocusVisible,\n          restProps = _objectWithoutProperties(_this$props, [\"children\", \"Component\", \"onClick\", \"onKeyDown\", \"activeEffectDelay\", \"stopPropagation\", \"getRootRef\", \"platform\", \"sizeX\", \"hasMouse\", \"hasHover\", \"hoverMode\", \"hasActive\", \"activeMode\", \"hasFocusVisible\"]);\n\n      var isCustomElement = Component !== 'a' && Component !== 'button' && !restProps.contentEditable;\n      var isPresetHoverMode = ['opacity', 'background'].includes(hoverMode);\n      var isPresetActiveMode = ['opacity', 'background'].includes(activeMode);\n      var classes = classNames(getClassName('Tappable', platform), \"Tappable--sizeX-\".concat(sizeX), (_classNames = {\n        'Tappable--active': hasActive && active,\n        'Tappable--inactive': !active,\n        'Tappable--mouse': hasMouse\n      }, _defineProperty(_classNames, \"Tappable--hover-\".concat(hoverMode), hasHover && hovered && isPresetHoverMode), _defineProperty(_classNames, \"Tappable--active-\".concat(activeMode), hasActive && active && isPresetActiveMode), _defineProperty(_classNames, 'Tappable--focus-visible', hasFocusVisible), _defineProperty(_classNames, hoverMode, hasHover && hovered && !isPresetHoverMode), _defineProperty(_classNames, activeMode, hasActive && active && !isPresetActiveMode), _classNames));\n      var RootComponent = restProps.disabled ? Component : Touch;\n      var props = {};\n\n      if (!restProps.disabled) {\n        props.Component = Component;\n        /* eslint-disable */\n\n        props.onStart = this.onStart;\n        props.onMove = this.onMove;\n        props.onEnd = this.onEnd;\n        props.onClick = onClick;\n        props.onKeyDown = isCustomElement ? this.onKeyDown : onKeyDown;\n        /* eslint-enable */\n\n        props.getRootRef = this.getRef;\n      } else {\n        props.ref = this.getRef;\n      }\n\n      if (isCustomElement) {\n        props['aria-disabled'] = restProps.disabled;\n      }\n\n      var role = restProps.href ? 'link' : 'button';\n      return createScopedElement(TappableContext.Consumer, null, function (_ref4) {\n        var insideTappable = _ref4.insideTappable,\n            _onEnter = _ref4.onEnter,\n            _onLeave = _ref4.onLeave;\n        return createScopedElement(TouchRootContext.Consumer, null, function (insideTouchRoot) {\n          _this2.insideTouchRoot = insideTouchRoot;\n          var touchProps = restProps.disabled ? {} : {\n            onEnter: function onEnter() {\n              insideTappable && _onEnter();\n              !restProps.disabled && _this2.onEnter();\n            },\n            onLeave: function onLeave() {\n              insideTappable && _onLeave();\n              !restProps.disabled && _this2.onLeave();\n            }\n          };\n          return createScopedElement(RootComponent, _extends({}, touchProps, {\n            type: Component === 'button' ? 'button' : undefined,\n            tabIndex: isCustomElement && !restProps.disabled ? 0 : undefined,\n            role: isCustomElement ? role : undefined\n          }, restProps, {\n            vkuiClass: classes\n          }, props), createScopedElement(TappableContext.Provider, {\n            value: {\n              insideTappable: true,\n              onEnter: function onEnter() {\n                return _this2.setState({\n                  hasHover: false,\n                  hasActive: false\n                });\n              },\n              onLeave: function onLeave() {\n                return _this2.setState({\n                  hasHover: propsHasHover,\n                  hasActive: propsHasActive\n                });\n              }\n            }\n          }, children), platform === ANDROID && !hasMouse && hasActive && activeMode === 'background' && createScopedElement(\"span\", {\n            \"aria-hidden\": \"true\",\n            vkuiClass: \"Tappable__waves\"\n          }, Object.keys(clicks).map(function (k) {\n            return createScopedElement(\"span\", {\n              vkuiClass: \"Tappable__wave\",\n              style: {\n                top: clicks[k].y,\n                left: clicks[k].x\n              },\n              key: k\n            });\n          })), hasHover && createScopedElement(\"span\", {\n            \"aria-hidden\": \"true\",\n            vkuiClass: \"Tappable__hoverShadow\"\n          }));\n        });\n      });\n    }\n  }]);\n\n  return Tappable;\n}(Component);\n\n_defineProperty(Tappable, \"defaultProps\", {\n  stopPropagation: false,\n  disabled: false,\n  hasFocusVisible: false,\n  hasHover: hasHover,\n  hoverMode: 'background',\n  hasActive: true,\n  activeMode: 'background',\n  activeEffectDelay: ACTIVE_EFFECT_DELAY\n});\n\nexport default withAdaptivity(withPlatform(Tappable), {\n  sizeX: true,\n  hasMouse: true\n});","map":{"version":3,"sources":["../../../src/components/Tappable/Tappable.tsx"],"names":["ts","Date","ACTIVE_DELAY","ACTIVE_EFFECT_DELAY","storage","Object","id","clearTimeout","TappableContext","insideTappable","Tappable","Component","Math","clicks","active","hasHover","props","hasActive","stopPropagation","disabled","hasFocusVisible","hoverMode","activeMode","activeEffectDelay","onKeyDown","shouldTriggerClickOnEnterOrSpace","e","originalEvent","deactivateOtherInstances","stop","activeTimeout","window","shiftXAbs","shiftYAbs","now","timeout","store","top","left","getOffsetRect","x","coordX","y","coordY","key","state","hovered","setRef","prevProps","defaultComponent","children","onClick","getRootRef","platform","sizeX","hasMouse","propsHasHover","propsHasActive","restProps","isCustomElement","isPresetHoverMode","isPresetActiveMode","classes","classNames","getClassName","RootComponent","role","onEnter","onLeave","touchProps","undefined","k","withAdaptivity","withPlatform"],"mappings":"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","sourcesContent":["import React, {\n  AllHTMLAttributes,\n  Component,\n  ElementType,\n  KeyboardEventHandler,\n  KeyboardEvent,\n  RefCallback,\n} from 'react';\nimport Touch, { TouchEvent, TouchEventHandler, TouchProps } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport { classNames } from '../../lib/classNames';\nimport { getClassName } from '../../helpers/getClassName';\nimport { ANDROID } from '../../lib/platform';\nimport { getOffsetRect } from '../../lib/offset';\nimport { coordX, coordY, VKUITouchEvent, VKUITouchEventHander } from '../../lib/touch';\nimport { HasPlatform, HasRootRef, Ref } from '../../types';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { hasHover } from '@vkontakte/vkjs';\nimport { setRef } from '../../lib/utils';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport { shouldTriggerClickOnEnterOrSpace } from '../../lib/accessibility';\n\nexport interface TappableProps extends AllHTMLAttributes<HTMLElement>, HasRootRef<HTMLElement>, HasPlatform, AdaptivityProps {\n  Component?: ElementType;\n  /**\n   * Длительность показа active-состояния\n   */\n  activeEffectDelay?: number;\n  stopPropagation?: boolean;\n  /**\n   * Указывает, должен ли компонент реагировать на hover-состояние\n   */\n  hasHover?: boolean;\n  /**\n   * Указывает, должен ли компонент реагировать на active-состояние\n   */\n  hasActive?: boolean;\n  /**\n   * Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active\n   */\n  activeMode?: 'opacity' | 'background' | string;\n  /**\n   * Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover\n   */\n  hoverMode?: 'opacity' | 'background' | string;\n  /**\n   * @ignore Временное свойство для работы над доступностью. Указывает, должен ли компонент показывать focus ring при навигации с клавиатуры.\n   * Исчезнет после того, как мы адаптируем отображение всех компонентов на базе Tappable.\n   */\n  hasFocusVisible?: boolean;\n}\n\nexport interface TappableState {\n  clicks?: {\n    [index: string]: {\n      x: number;\n      y: number;\n    };\n  };\n  hovered?: boolean;\n  active?: boolean;\n  ts?: number;\n  hasHover?: boolean;\n  hasActive?: boolean;\n}\n\nexport interface RootComponentProps extends TouchProps {\n  ref?: Ref<HTMLElement>;\n}\n\nexport interface StorageItem {\n  activeTimeout: number;\n  timeout?: number;\n  stop(): void;\n}\n\nexport interface Storage {\n  [index: string]: StorageItem;\n}\n\nexport type GetStorage = () => StorageItem;\n\nconst ts = () => +Date.now();\n\nexport const ACTIVE_DELAY = 70;\nexport const ACTIVE_EFFECT_DELAY = 600;\n\nlet storage: Storage = {};\n\n/*\n * Очищает таймауты и хранилище для всех экземпляров компонента, кроме переданного\n */\nfunction deactivateOtherInstances(exclude?: string) {\n  Object.keys(storage).filter((id: string) => id !== exclude).forEach((id: string) => {\n    clearTimeout(storage[id].activeTimeout);\n    clearTimeout(storage[id].timeout);\n    storage[id].stop();\n\n    delete storage[id];\n  });\n}\n\nconst TappableContext = React.createContext<{ insideTappable?: boolean; onEnter?: VoidFunction; onLeave?: VoidFunction }>({ insideTappable: false });\n\nclass Tappable extends Component<TappableProps, TappableState> {\n  constructor(props: TappableProps) {\n    super(props);\n    this.id = Math.round(Math.random() * 1e8).toString(16);\n    this.state = {\n      clicks: {},\n      active: false,\n      ts: null,\n      hasHover: props.hasHover,\n      hasActive: props.hasActive,\n    };\n    this.isSlide = false;\n  }\n\n  id: string;\n\n  isSlide: boolean;\n\n  insideTouchRoot: boolean;\n\n  container: HTMLElement;\n\n  timeout: number;\n\n  wavesTimeout: number;\n\n  static defaultProps = {\n    stopPropagation: false,\n    disabled: false,\n    hasFocusVisible: false,\n    hasHover,\n    hoverMode: 'background',\n    hasActive: true,\n    activeMode: 'background',\n    activeEffectDelay: ACTIVE_EFFECT_DELAY,\n  };\n\n  /*\n   * [a11y]\n   * Обрабатывает событие onkeydown\n   * для кастомных доступных элементов:\n   * - role=\"link\" (активация по Enter)\n   * - role=\"button\" (активация по Space и Enter)\n   */\n  onKeyDown: KeyboardEventHandler = (e: KeyboardEvent<HTMLElement>) => {\n    const { onKeyDown } = this.props;\n\n    if (shouldTriggerClickOnEnterOrSpace(e)) {\n      e.preventDefault();\n      this.container.click();\n    }\n\n    {\n      if (typeof onKeyDown === 'function') {\n        return onKeyDown(e);\n      }\n    }\n  };\n\n  /*\n   * Обрабатывает событие touchstart\n   */\n  onStart: TouchEventHandler = ({ originalEvent }: TouchEvent) => {\n    !this.insideTouchRoot && this.props.stopPropagation && originalEvent.stopPropagation();\n\n    if (this.state.hasActive) {\n      if (originalEvent.touches && originalEvent.touches.length > 1) {\n        deactivateOtherInstances();\n        return;\n      }\n\n      if (this.props.platform === ANDROID) {\n        this.onDown(originalEvent);\n      }\n\n      storage[this.id] = {\n        stop: this.stop,\n        activeTimeout: window.setTimeout(this.start, ACTIVE_DELAY),\n      };\n    }\n  };\n\n  /*\n   * Обрабатывает событие touchmove\n   */\n  onMove: TouchEventHandler = ({ originalEvent, shiftXAbs, shiftYAbs }: TouchEvent) => {\n    !this.insideTouchRoot && this.props.stopPropagation && originalEvent.stopPropagation();\n    if (shiftXAbs > 20 || shiftYAbs > 20) {\n      this.isSlide = true;\n      this.stop();\n    }\n  };\n\n  /*\n   * Обрабатывает событие touchend\n   */\n  onEnd: TouchEventHandler = ({ originalEvent }: TouchEvent) => {\n    !this.insideTouchRoot && this.props.stopPropagation && originalEvent.stopPropagation();\n    const now = ts();\n\n    if (originalEvent.touches && originalEvent.touches.length > 0) {\n      this.isSlide = false;\n      this.stop();\n      return;\n    }\n\n    if (this.state.active) {\n      if (now - this.state.ts >= 100) {\n        // Долгий тап, выключаем подсветку\n        this.stop();\n      } else {\n        // Короткий тап, оставляем подсветку\n        const timeout = window.setTimeout(this.stop, this.props.activeEffectDelay - now + this.state.ts);\n        const store = this.getStorage();\n\n        if (store) {\n          store.timeout = timeout;\n        }\n      }\n    } else if (!this.isSlide) {\n      // Очень короткий тап, включаем подсветку\n      this.start();\n\n      const timeout = window.setTimeout(this.stop, this.props.activeEffectDelay);\n\n      if (this.getStorage()) {\n        clearTimeout(this.getStorage().activeTimeout);\n        this.getStorage().timeout = timeout;\n      } else {\n        this.timeout = timeout;\n      }\n    }\n\n    this.isSlide = false;\n  };\n\n  /*\n   * Реализует эффект при тапе для Андроида\n   */\n  onDown: VKUITouchEventHander = (e: VKUITouchEvent) => {\n    if (this.props.platform === ANDROID) {\n      const { top, left } = getOffsetRect(this.container);\n      const x = coordX(e) - left;\n      const y = coordY(e) - top;\n      const key = 'wave' + Date.now().toString();\n\n      this.setState((state: TappableState): TappableState => {\n        return {\n          clicks: {\n            ...state.clicks,\n            [key]: {\n              x,\n              y,\n            },\n          },\n        };\n      });\n\n      this.wavesTimeout = window.setTimeout(() => {\n        this.setState((state: TappableState): TappableState => {\n          let clicks = { ...state.clicks };\n          delete clicks[key];\n          return { clicks };\n        });\n      }, 225);\n    }\n  };\n\n  onEnter = () => {\n    this.setState({ hovered: true });\n  };\n\n  onLeave = () => {\n    this.setState({ hovered: false });\n  };\n\n  /*\n   * Устанавливает активное выделение\n   */\n  start: VoidFunction = () => {\n    if (!this.state.active && this.state.hasActive) {\n      this.setState({\n        active: true,\n        ts: ts(),\n      });\n    }\n    deactivateOtherInstances(this.id);\n  };\n\n  /*\n   * Снимает активное выделение\n   */\n  stop: VoidFunction = () => {\n    if (this.state.active) {\n      this.setState({\n        active: false,\n        ts: null,\n      });\n    }\n    if (this.getStorage()) {\n      clearTimeout(this.getStorage().activeTimeout);\n      delete storage[this.id];\n    }\n  };\n\n  /*\n   * Возвращает хранилище для экземпляра компонента\n   */\n  getStorage: GetStorage = () => {\n    return storage[this.id];\n  };\n\n  /*\n   * Берет ref на DOM-ноду из экземпляра Touch\n   */\n  getRef: RefCallback<HTMLElement> = (container) => {\n    this.container = container;\n    setRef(container, this.props.getRootRef);\n  };\n\n  componentWillUnmount() {\n    if (storage[this.id]) {\n      clearTimeout(storage[this.id].timeout);\n      clearTimeout(storage[this.id].activeTimeout);\n\n      delete storage[this.id];\n    }\n\n    clearTimeout(this.wavesTimeout);\n  }\n\n  componentDidUpdate(prevProps: TappableProps) {\n    if (prevProps.hasHover !== this.props.hasHover || prevProps.hasActive !== this.props.hasActive) {\n      this.setState({ hasHover: this.props.hasHover, hasActive: this.props.hasActive });\n    }\n    if (!prevProps.disabled && this.props.disabled) {\n      this.setState({ hovered: false });\n    }\n  }\n\n  render() {\n    const { clicks, active, hovered, hasHover, hasActive } = this.state;\n\n    const defaultComponent: ElementType = this.props.href ? 'a' : 'div';\n\n    const {\n      children,\n      Component = defaultComponent,\n      onClick,\n      onKeyDown,\n      activeEffectDelay,\n      stopPropagation,\n      getRootRef,\n      platform,\n      sizeX,\n      hasMouse,\n      hasHover: propsHasHover,\n      hoverMode,\n      hasActive: propsHasActive,\n      activeMode,\n      hasFocusVisible,\n      ...restProps\n    } = this.props;\n\n    const isCustomElement: boolean = Component !== 'a' && Component !== 'button' && !restProps.contentEditable;\n\n    const isPresetHoverMode = ['opacity', 'background'].includes(hoverMode);\n    const isPresetActiveMode = ['opacity', 'background'].includes(activeMode);\n\n    const classes = classNames(\n      getClassName('Tappable', platform),\n      `Tappable--sizeX-${sizeX}`,\n      {\n        'Tappable--active': hasActive && active,\n        'Tappable--inactive': !active,\n        'Tappable--mouse': hasMouse,\n        [`Tappable--hover-${hoverMode}`]: hasHover && hovered && isPresetHoverMode,\n        [`Tappable--active-${activeMode}`]: hasActive && active && isPresetActiveMode,\n        'Tappable--focus-visible': hasFocusVisible,\n        [hoverMode]: hasHover && hovered && !isPresetHoverMode,\n        [activeMode]: hasActive && active && !isPresetActiveMode,\n      });\n\n    const RootComponent = restProps.disabled\n      ? Component\n      : Touch;\n\n    let props: RootComponentProps = {};\n    if (!restProps.disabled) {\n      props.Component = Component;\n      /* eslint-disable */\n      props.onStart = this.onStart;\n      props.onMove = this.onMove;\n      props.onEnd = this.onEnd;\n      props.onClick = onClick;\n      props.onKeyDown = isCustomElement ? this.onKeyDown : onKeyDown;\n      /* eslint-enable */\n      props.getRootRef = this.getRef;\n    } else {\n      props.ref = this.getRef;\n    }\n\n    if (isCustomElement) {\n      props['aria-disabled'] = restProps.disabled;\n    }\n\n    const role: string = restProps.href ? 'link' : 'button';\n\n    return (\n      <TappableContext.Consumer>\n        {({ insideTappable, onEnter, onLeave }) => {\n          return (\n            <TouchRootContext.Consumer>\n              {(insideTouchRoot: boolean) => {\n                this.insideTouchRoot = insideTouchRoot;\n                const touchProps = restProps.disabled ? {} : {\n                  onEnter: () => {\n                    insideTappable && onEnter();\n                    !restProps.disabled && this.onEnter();\n                  },\n                  onLeave: () => {\n                    insideTappable && onLeave();\n                    !restProps.disabled && this.onLeave();\n                  },\n                };\n                return (\n                  <RootComponent\n                    {...touchProps}\n                    type={Component === 'button' ? 'button' : undefined}\n                    tabIndex={isCustomElement && !restProps.disabled ? 0 : undefined}\n                    role={isCustomElement ? role : undefined}\n                    {...restProps}\n                    vkuiClass={classes}\n                    {...props}>\n                    <TappableContext.Provider\n                      value={{\n                        insideTappable: true,\n                        onEnter: () => this.setState({ hasHover: false, hasActive: false }),\n                        onLeave: () => this.setState({ hasHover: propsHasHover, hasActive: propsHasActive }),\n                      }}\n                    >\n                      {children}\n                    </TappableContext.Provider>\n                    {platform === ANDROID && !hasMouse && hasActive && activeMode === 'background' && (\n                      <span aria-hidden=\"true\" vkuiClass=\"Tappable__waves\">\n                        {Object.keys(clicks).map((k: string) => (\n                          <span vkuiClass=\"Tappable__wave\" style={{ top: clicks[k].y, left: clicks[k].x }} key={k} />\n                        ))}\n                      </span>\n                    )}\n                    {hasHover && <span aria-hidden=\"true\" vkuiClass=\"Tappable__hoverShadow\" />}\n                  </RootComponent>\n                );\n              }}\n            </TouchRootContext.Consumer>\n          );\n        }}\n      </TappableContext.Consumer>\n    );\n  }\n}\n\nexport default withAdaptivity(withPlatform(Tappable), { sizeX: true, hasMouse: true });\n"]},"metadata":{},"sourceType":"module"}