{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport React, { Children, Component } from 'react';\nimport { classNames } from \"../../lib/classNames\";\nimport { isFunction } from \"../../lib/utils\";\nimport { transitionEvent } from \"../../lib/supportEvents\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { withContext } from \"../../hoc/withContext\";\nimport ModalRootContext from \"./ModalRootContext\";\nimport { ConfigProviderContext, WebviewType } from \"../ConfigProvider/ConfigProviderContext\";\nimport { ModalType } from \"./types\";\nimport { ANDROID, VKCOM } from \"../../lib/platform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { withDOM } from \"../../lib/dom\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nvar warn = warnOnce('ModalRoot');\nvar IS_DEV = process.env.NODE_ENV === 'development';\n\nvar ModalRootDesktopComponent = /*#__PURE__*/function (_Component) {\n  _inherits(ModalRootDesktopComponent, _Component);\n\n  var _super = _createSuper(ModalRootDesktopComponent);\n\n  function ModalRootDesktopComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ModalRootDesktopComponent);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"modalsState\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maskElementRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maskAnimationFrame\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"modalRootContext\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"activeTransitions\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDownEsc\", function (e) {\n      if (e.key === 'Escape') {\n        _this.triggerActiveModalClose();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentWillUnmount\", function () {\n      document.removeEventListener('keydown', _this.handleKeyDownEsc);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"prevNextSwitchEndHandler\", function () {\n      _this.activeTransitions = Math.max(0, _this.activeTransitions - 1);\n\n      if (_this.activeTransitions > 0) {\n        return;\n      }\n\n      var activeModal = _this.state.nextModal;\n      var newState = {\n        prevModal: null,\n        nextModal: null,\n        visibleModals: [activeModal],\n        activeModal: activeModal,\n        animated: false,\n        switching: false\n      };\n\n      if (!activeModal) {\n        newState.history = [];\n      }\n\n      _this.setState(newState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerActiveModalClose\", function () {\n      var activeModalState = _this.modalsState[_this.state.activeModal];\n\n      if (activeModalState) {\n        _this.doCloseModal(activeModalState);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"doCloseModal\", function (modalState) {\n      if (isFunction(modalState.onClose)) {\n        modalState.onClose();\n      } else if (isFunction(_this.props.onClose)) {\n        _this.props.onClose(modalState.id);\n      } else if (IS_DEV) {\n        warn('onClose is undefined');\n      }\n    });\n\n    var _activeModal = props.activeModal;\n    _this.state = {\n      activeModal: null,\n      prevModal: null,\n      nextModal: _activeModal,\n      visibleModals: _activeModal ? [_activeModal] : [],\n      animated: !!_activeModal,\n      switching: false,\n      history: _activeModal ? [_activeModal] : [],\n      isBack: false,\n      inited: false\n    };\n    _this.maskElementRef = /*#__PURE__*/React.createRef();\n    _this.activeTransitions = 0;\n\n    _this.initModalsState();\n\n    _this.modalRootContext = {\n      updateModalHeight: function updateModalHeight() {\n        return undefined;\n      },\n      registerModal: function registerModal(_ref) {\n        var id = _ref.id,\n            data = _objectWithoutProperties(_ref, [\"id\"]);\n\n        return Object.assign(_this.modalsState[id], data);\n      },\n      onClose: _this.triggerActiveModalClose,\n      isInsideModal: true\n    };\n    return _this;\n  }\n\n  _createClass(ModalRootDesktopComponent, [{\n    key: \"initModalsState\",\n    value: function initModalsState() {\n      this.modalsState = this.modals.reduce(function (acc, Modal) {\n        var modalProps = Modal.props;\n        var state = {\n          id: getNavId(Modal.props, warn),\n          onClose: Modal.props.onClose,\n          dynamicContentHeight: !!modalProps.dynamicContentHeight\n        }; // ModalPage props\n\n        if (typeof modalProps.settlingHeight === 'number') {\n          state.settlingHeight = modalProps.settlingHeight;\n        }\n\n        acc[state.id] = state;\n        return acc;\n      }, {});\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initActiveModal();\n      document.addEventListener('keydown', this.handleKeyDownEsc);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      if (this.props.activeModal !== prevProps.activeModal) {\n        var nextModal = this.props.activeModal;\n        var prevModal = prevProps.activeModal;\n\n        if (IS_DEV && nextModal !== null && !this.modalsState[nextModal]) {\n          return warn(\"[ModalRoot.componentDidUpdate] nextModal \".concat(nextModal, \" not found\"));\n        }\n\n        var history = _toConsumableArray(this.state.history);\n\n        var isBack = false;\n\n        if (nextModal === null) {\n          history = [];\n        } else if (history.includes(nextModal)) {\n          history = history.splice(0, history.indexOf(nextModal) + 1);\n          isBack = true;\n        } else {\n          history.push(nextModal);\n        }\n\n        return this.setState({\n          activeModal: null,\n          nextModal: nextModal,\n          prevModal: prevModal,\n          visibleModals: [nextModal, prevModal],\n          history: history,\n          isBack: isBack,\n          animated: true,\n          inited: false,\n          switching: false\n        }, function () {\n          if (nextModal === null) {\n            _this2.closeActiveModal();\n          } else {\n            _this2.initActiveModal();\n          }\n        });\n      }\n\n      if (this.state.switching && !prevState.switching) {\n        requestAnimationFrame(function () {\n          return _this2.switchPrevNext();\n        });\n      }\n    }\n    /**\n     * Инициализирует модалку перед анимацией открытия\n     */\n\n  }, {\n    key: \"initActiveModal\",\n    value: function initActiveModal() {\n      var activeModal = this.state.activeModal || this.state.nextModal;\n\n      if (!activeModal) {\n        return;\n      }\n\n      var modalState = this.modalsState[activeModal];\n\n      switch (modalState.type) {\n        case ModalType.PAGE:\n          modalState.settlingHeight = modalState.settlingHeight || 75;\n          break;\n\n        case ModalType.CARD:\n          break;\n\n        default:\n          if (IS_DEV) {\n            warn('[initActiveModal] modalState.type is unknown');\n          }\n\n      }\n\n      this.setState({\n        inited: true,\n        switching: true\n      });\n    }\n  }, {\n    key: \"closeActiveModal\",\n    value: function closeActiveModal() {\n      var prevModal = this.state.prevModal;\n\n      if (IS_DEV && !prevModal) {\n        return warn(\"[closeActiveModal] prevModal is \".concat(prevModal));\n      }\n\n      var prevModalState = this.modalsState[prevModal];\n      this.waitTransitionFinish(prevModalState, this.prevNextSwitchEndHandler);\n      this.animateModalOpacity(prevModalState, false);\n      this.setMaskOpacity(prevModalState, 0);\n    }\n  }, {\n    key: \"waitTransitionFinish\",\n    value: function waitTransitionFinish(modalState, eventHandler) {\n      if (transitionEvent.supported) {\n        var onceHandler = function onceHandler() {\n          modalState.innerElement.removeEventListener(transitionEvent.name, onceHandler);\n          eventHandler();\n        };\n\n        modalState.innerElement.addEventListener(transitionEvent.name, onceHandler);\n      } else {\n        setTimeout(eventHandler, this.props.platform === ANDROID || this.props.platform === VKCOM ? 320 : 400);\n      }\n    }\n  }, {\n    key: \"switchPrevNext\",\n    value: function switchPrevNext() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          prevModal = _this$state.prevModal,\n          nextModal = _this$state.nextModal;\n      var prevModalState = this.modalsState[prevModal];\n      var nextModalState = this.modalsState[nextModal];\n\n      if (IS_DEV && !prevModalState && !nextModalState) {\n        return warn(\"[switchPrevNext] prevModal is \".concat(prevModal, \", nextModal is \").concat(nextModal));\n      }\n\n      var prevIsCard = !!prevModalState && prevModalState.type === ModalType.CARD;\n      var nextIsPage = !!nextModalState && nextModalState.type === ModalType.PAGE;\n      var nextIsCard = !!nextModalState && nextModalState.type === ModalType.CARD; // Ждём полного скрытия предыдущей модалки\n\n      if (prevModalState && (nextIsCard || prevIsCard && nextIsPage)) {\n        this.activeTransitions += 1;\n        this.waitTransitionFinish(prevModalState, function () {\n          _this3.waitTransitionFinish(nextModalState, _this3.prevNextSwitchEndHandler);\n\n          _this3.animateModalOpacity(nextModalState, true);\n        });\n        requestAnimationFrame(function () {\n          _this3.animateModalOpacity(prevModalState, false);\n        });\n        return;\n      }\n\n      if (prevModalState && nextIsPage) {\n        this.activeTransitions += 1;\n        this.waitTransitionFinish(prevModalState, this.prevNextSwitchEndHandler);\n        requestAnimationFrame(function () {\n          _this3.animateModalOpacity(prevModalState, false);\n        });\n      }\n\n      this.activeTransitions += 1;\n      this.waitTransitionFinish(nextModalState, this.prevNextSwitchEndHandler);\n      requestAnimationFrame(function () {\n        _this3.animateModalOpacity(nextModalState, true);\n      });\n    }\n  }, {\n    key: \"animateModalOpacity\",\n\n    /* Анимирует сдивг модалки */\n    value: function animateModalOpacity(modalState, display) {\n      modalState.innerElement.style.opacity = display ? '1' : '0';\n    }\n    /* Устанавливает прозрачность для полупрозрачной подложки */\n\n  }, {\n    key: \"setMaskOpacity\",\n    value: function setMaskOpacity(modalState) {\n      var _this4 = this;\n\n      var forceOpacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      if (forceOpacity === null && this.state.history[0] !== modalState.id) {\n        return;\n      }\n\n      cancelAnimationFrame(this.maskAnimationFrame);\n      this.maskAnimationFrame = requestAnimationFrame(function () {\n        if (_this4.maskElementRef.current) {\n          var translateY = modalState.translateY,\n              translateYCurrent = modalState.translateYCurrent;\n          var opacity = forceOpacity === null ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0 : forceOpacity;\n          _this4.maskElementRef.current.style.opacity = Math.max(0, Math.min(100, opacity)).toString();\n        }\n      });\n    }\n    /**\n     * Закрывает текущую модалку\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          prevModal = _this$state2.prevModal,\n          activeModal = _this$state2.activeModal,\n          nextModal = _this$state2.nextModal,\n          visibleModals = _this$state2.visibleModals,\n          animated = _this$state2.animated;\n\n      if (!activeModal && !prevModal && !nextModal && !animated) {\n        return null;\n      }\n\n      return createScopedElement(ModalRootContext.Provider, {\n        value: this.modalRootContext\n      }, createScopedElement(\"div\", {\n        vkuiClass: classNames(getClassName('ModalRoot', this.props.platform), {\n          'ModalRoot--vkapps': this.props.configProvider.webviewType === WebviewType.VKAPPS\n        }, 'ModalRoot--desktop')\n      }, createScopedElement(\"div\", {\n        vkuiClass: \"ModalRoot__mask\",\n        onClick: this.triggerActiveModalClose,\n        ref: this.maskElementRef\n      }), createScopedElement(\"div\", {\n        vkuiClass: \"ModalRoot__viewport\"\n      }, this.modals.map(function (Modal) {\n        var modalId = getNavId(Modal.props, warn);\n\n        if (!visibleModals.includes(modalId)) {\n          return null;\n        }\n\n        var key = \"modal-\".concat(modalId);\n        return createScopedElement(\"div\", {\n          key: key,\n          vkuiClass: classNames('ModalRoot__modal', {\n            'ModalRoot__modal--active': modalId === activeModal,\n            'ModalRoot__modal--prev': modalId === prevModal,\n            'ModalRoot__modal--next': modalId === nextModal\n          })\n        }, Modal);\n      }))));\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.props.document;\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.props.window;\n    }\n  }, {\n    key: \"modals\",\n    get: function get() {\n      return Children.toArray(this.props.children);\n    }\n  }]);\n\n  return ModalRootDesktopComponent;\n}(Component);\n\nexport var ModalRootDesktop = withContext(withPlatform(withDOM(ModalRootDesktopComponent)), ConfigProviderContext, 'configProvider');","map":{"version":3,"sources":["../../../src/components/ModalRoot/ModalRootDesktop.tsx"],"names":["warn","warnOnce","IS_DEV","process","ModalRootDesktopComponent","Component","activeModal","props","prevModal","nextModal","visibleModals","animated","switching","history","isBack","inited","React","updateModalHeight","registerModal","id","data","Object","onClose","isInsideModal","Children","modalProps","Modal","state","getNavId","dynamicContentHeight","acc","e","document","prevProps","prevState","requestAnimationFrame","modalState","ModalType","prevModalState","eventHandler","transitionEvent","onceHandler","setTimeout","nextModalState","prevIsCard","nextIsPage","nextIsCard","Math","newState","display","forceOpacity","cancelAnimationFrame","translateY","translateYCurrent","opacity","activeModalState","isFunction","modalRootContext","classNames","getClassName","WebviewType","VKAPPS","maskElementRef","modalId","key","ModalRootDesktop","withContext","withPlatform","withDOM"],"mappings":"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","sourcesContent":["import React, { Children, Component, ReactElement } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { isFunction } from '../../lib/utils';\nimport { transitionEvent } from '../../lib/supportEvents';\nimport { HasPlatform } from '../../types';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { withContext } from '../../hoc/withContext';\nimport ModalRootContext, { ModalRootContextInterface } from './ModalRootContext';\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n  WebviewType,\n} from '../ConfigProvider/ConfigProviderContext';\nimport { ModalsStateEntry, ModalType } from './types';\nimport { ANDROID, VKCOM } from '../../lib/platform';\nimport { getClassName } from '../../helpers/getClassName';\nimport { DOMProps, withDOM } from '../../lib/dom';\nimport { getNavId } from '../../lib/getNavId';\nimport { warnOnce } from '../../lib/warnOnce';\n\nconst warn = warnOnce('ModalRoot');\nconst IS_DEV = process.env.NODE_ENV === 'development';\n\nexport interface ModalRootProps extends HasPlatform {\n  activeModal?: string | null;\n  /**\n   * @ignore\n   */\n  configProvider?: ConfigProviderContextInterface;\n\n  /**\n   * Будет вызвано при закрытии активной модалки с её id\n   */\n  onClose?(modalId: string): void;\n}\n\ninterface ModalRootState {\n  activeModal?: string;\n  prevModal?: string;\n  nextModal?: string;\n  visibleModals?: string[];\n  animated?: boolean;\n  switching?: boolean;\n  history?: string[];\n  isBack?: boolean;\n  inited?: boolean;\n}\n\nclass ModalRootDesktopComponent extends Component<ModalRootProps & DOMProps, ModalRootState> {\n  constructor(props: ModalRootProps) {\n    super(props);\n\n    const activeModal = props.activeModal;\n\n    this.state = {\n      activeModal: null,\n      prevModal: null,\n      nextModal: activeModal,\n      visibleModals: activeModal ? [activeModal] : [],\n      animated: !!activeModal,\n      switching: false,\n      history: activeModal ? [activeModal] : [],\n      isBack: false,\n      inited: false,\n    };\n\n    this.maskElementRef = React.createRef();\n    this.activeTransitions = 0;\n\n    this.initModalsState();\n\n    this.modalRootContext = {\n      updateModalHeight: () => undefined,\n      registerModal: ({ id, ...data }) => Object.assign(this.modalsState[id], data),\n      onClose: this.triggerActiveModalClose,\n      isInsideModal: true,\n    };\n  }\n\n  private modalsState: { [id: string]: ModalsStateEntry };\n  private readonly maskElementRef: React.RefObject<HTMLDivElement>;\n  private maskAnimationFrame: number;\n  private readonly modalRootContext: ModalRootContextInterface;\n\n  activeTransitions: number;\n\n  get document(): Document {\n    return this.props.document;\n  }\n\n  get window(): Window {\n    return this.props.window;\n  }\n\n  get modals() {\n    return Children.toArray(this.props.children) as ReactElement[];\n  }\n\n  initModalsState() {\n    this.modalsState = this.modals.reduce<{ [id: string]: ModalsStateEntry }>((acc, Modal) => {\n      const modalProps = Modal.props;\n      const state: ModalsStateEntry = {\n        id: getNavId(Modal.props, warn),\n        onClose: Modal.props.onClose,\n        dynamicContentHeight: !!modalProps.dynamicContentHeight,\n      };\n\n      // ModalPage props\n      if (typeof modalProps.settlingHeight === 'number') {\n        state.settlingHeight = modalProps.settlingHeight;\n      }\n\n      acc[state.id] = state;\n      return acc;\n    }, {});\n  }\n\n  handleKeyDownEsc = (e: KeyboardEvent): void => {\n    if (e.key === 'Escape') {\n      this.triggerActiveModalClose();\n    }\n  };\n\n  componentDidMount() {\n    this.initActiveModal();\n    document.addEventListener('keydown', this.handleKeyDownEsc);\n  }\n\n  componentWillUnmount = () => {\n    document.removeEventListener('keydown', this.handleKeyDownEsc);\n  };\n\n  componentDidUpdate(prevProps: ModalRootProps, prevState: ModalRootState) {\n    if (this.props.activeModal !== prevProps.activeModal) {\n      const nextModal = this.props.activeModal;\n      const prevModal = prevProps.activeModal;\n\n      if (IS_DEV && nextModal !== null && !this.modalsState[nextModal]) {\n        return warn(`[ModalRoot.componentDidUpdate] nextModal ${nextModal} not found`);\n      }\n\n      let history = [...this.state.history];\n      let isBack = false;\n\n      if (nextModal === null) {\n        history = [];\n      } else if (history.includes(nextModal)) {\n        history = history.splice(0, history.indexOf(nextModal) + 1);\n        isBack = true;\n      } else {\n        history.push(nextModal);\n      }\n\n      return this.setState({\n        activeModal: null,\n        nextModal,\n        prevModal,\n        visibleModals: [nextModal, prevModal],\n        history,\n        isBack,\n        animated: true,\n        inited: false,\n        switching: false,\n      }, () => {\n        if (nextModal === null) {\n          this.closeActiveModal();\n        } else {\n          this.initActiveModal();\n        }\n      });\n    }\n\n    if (this.state.switching && !prevState.switching) {\n      requestAnimationFrame(() => this.switchPrevNext());\n    }\n  }\n\n  /**\n   * Инициализирует модалку перед анимацией открытия\n   */\n  initActiveModal() {\n    const activeModal = this.state.activeModal || this.state.nextModal;\n    if (!activeModal) {\n      return;\n    }\n\n    const modalState = this.modalsState[activeModal];\n\n    switch (modalState.type) {\n      case ModalType.PAGE:\n        modalState.settlingHeight = modalState.settlingHeight || 75;\n        break;\n\n      case ModalType.CARD:\n        break;\n\n      default:\n        if (IS_DEV) {\n          warn('[initActiveModal] modalState.type is unknown');\n        }\n    }\n\n    this.setState({ inited: true, switching: true });\n  }\n\n  closeActiveModal() {\n    const { prevModal } = this.state;\n    if (IS_DEV && !prevModal) {\n      return warn(`[closeActiveModal] prevModal is ${prevModal}`);\n    }\n\n    const prevModalState = this.modalsState[prevModal];\n\n    this.waitTransitionFinish(prevModalState, this.prevNextSwitchEndHandler);\n    this.animateModalOpacity(prevModalState, false);\n    this.setMaskOpacity(prevModalState, 0);\n  }\n\n  waitTransitionFinish(modalState: ModalsStateEntry, eventHandler: () => void) {\n    if (transitionEvent.supported) {\n      const onceHandler = () => {\n        modalState.innerElement.removeEventListener(transitionEvent.name, onceHandler);\n        eventHandler();\n      };\n\n      modalState.innerElement.addEventListener(transitionEvent.name, onceHandler);\n    } else {\n      setTimeout(eventHandler, this.props.platform === ANDROID || this.props.platform === VKCOM ? 320 : 400);\n    }\n  }\n\n  switchPrevNext() {\n    const { prevModal, nextModal } = this.state;\n\n    const prevModalState = this.modalsState[prevModal];\n    const nextModalState = this.modalsState[nextModal];\n\n    if (IS_DEV && !prevModalState && !nextModalState) {\n      return warn(`[switchPrevNext] prevModal is ${prevModal}, nextModal is ${nextModal}`);\n    }\n\n    const prevIsCard = !!prevModalState && prevModalState.type === ModalType.CARD;\n\n    const nextIsPage = !!nextModalState && nextModalState.type === ModalType.PAGE;\n    const nextIsCard = !!nextModalState && nextModalState.type === ModalType.CARD;\n\n    // Ждём полного скрытия предыдущей модалки\n    if (prevModalState && (nextIsCard || prevIsCard && nextIsPage)) {\n      this.activeTransitions += 1;\n      this.waitTransitionFinish(prevModalState, () => {\n        this.waitTransitionFinish(nextModalState, this.prevNextSwitchEndHandler);\n        this.animateModalOpacity(nextModalState, true);\n      });\n\n      requestAnimationFrame(() => {\n        this.animateModalOpacity(prevModalState, false);\n      });\n\n      return;\n    }\n\n    if (prevModalState && nextIsPage) {\n      this.activeTransitions += 1;\n      this.waitTransitionFinish(prevModalState, this.prevNextSwitchEndHandler);\n      requestAnimationFrame(() => {\n        this.animateModalOpacity(prevModalState, false);\n      });\n    }\n\n    this.activeTransitions += 1;\n    this.waitTransitionFinish(nextModalState, this.prevNextSwitchEndHandler);\n    requestAnimationFrame(() => {\n      this.animateModalOpacity(nextModalState, true);\n    });\n  }\n\n  prevNextSwitchEndHandler = () => {\n    this.activeTransitions = Math.max(0, this.activeTransitions - 1);\n    if (this.activeTransitions > 0) {\n      return;\n    }\n\n    const activeModal = this.state.nextModal;\n\n    const newState: ModalRootState = {\n      prevModal: null,\n      nextModal: null,\n      visibleModals: [activeModal],\n      activeModal: activeModal,\n      animated: false,\n      switching: false,\n    };\n\n    if (!activeModal) {\n      newState.history = [];\n    }\n\n    this.setState(newState);\n  };\n\n  /* Анимирует сдивг модалки */\n  animateModalOpacity(modalState: ModalsStateEntry, display: boolean) {\n    modalState.innerElement.style.opacity = display ? '1' : '0';\n  }\n\n  /* Устанавливает прозрачность для полупрозрачной подложки */\n  setMaskOpacity(modalState: ModalsStateEntry, forceOpacity: number = null) {\n    if (forceOpacity === null && this.state.history[0] !== modalState.id) {\n      return;\n    }\n\n    cancelAnimationFrame(this.maskAnimationFrame);\n    this.maskAnimationFrame = requestAnimationFrame(() => {\n      if (this.maskElementRef.current) {\n        const { translateY, translateYCurrent } = modalState;\n\n        const opacity = forceOpacity === null ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0 : forceOpacity;\n        this.maskElementRef.current.style.opacity = Math.max(0, Math.min(100, opacity)).toString();\n      }\n    });\n  }\n\n  /**\n   * Закрывает текущую модалку\n   */\n  triggerActiveModalClose = () => {\n    const activeModalState = this.modalsState[this.state.activeModal];\n    if (activeModalState) {\n      this.doCloseModal(activeModalState);\n    }\n  };\n\n  private readonly doCloseModal = (modalState: ModalsStateEntry) => {\n    if (isFunction(modalState.onClose)) {\n      modalState.onClose();\n    } else if (isFunction(this.props.onClose)) {\n      this.props.onClose(modalState.id);\n    } else if (IS_DEV) {\n      warn('onClose is undefined');\n    }\n  };\n\n  render() {\n    const { prevModal, activeModal, nextModal, visibleModals, animated } = this.state;\n\n    if (!activeModal && !prevModal && !nextModal && !animated) {\n      return null;\n    }\n\n    return (\n      <ModalRootContext.Provider value={this.modalRootContext}>\n        <div\n          vkuiClass={classNames(getClassName('ModalRoot', this.props.platform), {\n            'ModalRoot--vkapps': this.props.configProvider.webviewType === WebviewType.VKAPPS,\n          }, 'ModalRoot--desktop')}\n        >\n          <div\n            vkuiClass=\"ModalRoot__mask\"\n            onClick={this.triggerActiveModalClose}\n            ref={this.maskElementRef}\n          />\n          <div vkuiClass=\"ModalRoot__viewport\">\n            {this.modals.map((Modal: ReactElement) => {\n              const modalId = getNavId(Modal.props, warn);\n              if (!visibleModals.includes(modalId)) {\n                return null;\n              }\n\n              const key = `modal-${modalId}`;\n\n              return (\n                <div\n                  key={key}\n                  vkuiClass={classNames('ModalRoot__modal', {\n                    'ModalRoot__modal--active': modalId === activeModal,\n                    'ModalRoot__modal--prev': modalId === prevModal,\n                    'ModalRoot__modal--next': modalId === nextModal,\n                  })}\n                >{Modal}</div>\n              );\n            })}\n          </div>\n        </div>\n      </ModalRootContext.Provider>\n    );\n  }\n}\n\nexport const ModalRootDesktop = withContext(withPlatform(withDOM<ModalRootProps>(ModalRootDesktopComponent)), ConfigProviderContext, 'configProvider');\n"]},"metadata":{},"sourceType":"module"}