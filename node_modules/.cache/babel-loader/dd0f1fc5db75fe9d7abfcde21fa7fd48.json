{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { createScopedElement } from \"../lib/jsxRuntime\";\nimport { useInsets } from \"../hooks/useInsets\";\nexport function withInsets(Component) {\n  function WithInsets(props) {\n    var insets = useInsets(); // @ts-ignore\n\n    return createScopedElement(Component, _extends({}, props, {\n      insets: insets\n    }));\n  }\n\n  return WithInsets;\n}","map":{"version":3,"sources":["../../src/hoc/withInsets.tsx"],"names":["insets","useInsets"],"mappings":";;AAAA,SAAA,SAAA,QAAA,oBAAA;AAEA,OAAO,SAAA,UAAA,CAAA,SAAA,EAAwC;AAC7C,WAAA,UAAA,CAAA,KAAA,EAA+B;AAC7B,QAAMA,MAAM,GAAGC,SADc,EAC7B,CAD6B,CAE7B;;AACA,WAAO,mBAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAsB,MAAA,MAAM,EAAED;AAA9B,KAAA,CAAA,CAAP;AACD;;AACD,SAAA,UAAA;AACD","sourcesContent":["import { useInsets } from '../hooks/useInsets';\n\nexport function withInsets<T>(Component: T): T {\n  function WithInsets(props: {}) {\n    const insets = useInsets();\n    // @ts-ignore\n    return <Component {...props} insets={insets} />;\n  }\n  return WithInsets as unknown as T;\n}\n"]},"metadata":{},"sourceType":"module"}