{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { useContext } from 'react';\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport Separator from \"../Separator/Separator\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport Caption from \"../Typography/Caption/Caption\";\nimport { withAdaptivity, SizeType } from \"../../hoc/withAdaptivity\";\nimport ModalRootContext from \"../ModalRoot/ModalRootContext\";\n\nvar Group = function Group(props) {\n  var header = props.header,\n      description = props.description,\n      children = props.children,\n      separator = props.separator,\n      getRootRef = props.getRootRef,\n      mode = props.mode,\n      sizeX = props.sizeX,\n      restProps = _objectWithoutProperties(props, [\"header\", \"description\", \"children\", \"separator\", \"getRootRef\", \"mode\", \"sizeX\"]);\n\n  var _useContext = useContext(ModalRootContext),\n      isInsideModal = _useContext.isInsideModal;\n\n  var platform = usePlatform();\n  var computedMode = mode;\n\n  if (!mode) {\n    computedMode = sizeX === SizeType.COMPACT || isInsideModal ? 'plain' : 'card';\n  }\n\n  return createScopedElement(\"section\", _extends({}, restProps, {\n    ref: getRootRef,\n    vkuiClass: classNames(getClassName('Group', platform), \"Group--sizeX-\".concat(sizeX), \"Group--\".concat(computedMode))\n  }), createScopedElement(\"div\", {\n    vkuiClass: \"Group__inner\"\n  }, header, children, hasReactNode(description) && createScopedElement(Caption, {\n    vkuiClass: \"Group__description\",\n    weight: \"regular\",\n    level: \"1\"\n  }, description)), separator !== 'hide' && createScopedElement(Separator, {\n    vkuiClass: classNames('Group__separator', {\n      'Group__separator--force': separator === 'show'\n    }),\n    expanded: computedMode === 'card'\n  }));\n};\n\nGroup.defaultProps = {\n  separator: 'auto'\n};\nexport default withAdaptivity(Group, {\n  sizeX: true\n});","map":{"version":3,"sources":["../../../src/components/Group/Group.tsx"],"names":["Group","header","description","children","separator","getRootRef","mode","sizeX","restProps","props","isInsideModal","useContext","platform","usePlatform","computedMode","SizeType","classNames","getClassName","hasReactNode","withAdaptivity"],"mappings":";;;AAAA,SAAA,UAAA,QAAA,OAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,UAAA,QAAA,sBAAA;AAEA,SAAA,WAAA,QAAA,yBAAA;AACA,OAAA,SAAA,MAAA,wBAAA;AACA,SAAA,YAAA,QAAA,iBAAA;AACA,OAAA,OAAA,MAAA,+BAAA;AACA,SAAA,cAAA,EAAA,QAAA,QAAA,0BAAA;AACA,OAAA,gBAAA,MAAA,+BAAA;;AAoBA,IAAMA,KAAqB,GAAG,SAAxBA,KAAwB,CAAA,KAAA,EAAuB;AAAA,MAC3CC,MAD2C,GACyCQ,KADzC,CAAA,MAAA;AAAA,MACnCP,WADmC,GACyCO,KADzC,CAAA,WAAA;AAAA,MACtBN,QADsB,GACyCM,KADzC,CAAA,QAAA;AAAA,MACZL,SADY,GACyCK,KADzC,CAAA,SAAA;AAAA,MACDJ,UADC,GACyCI,KADzC,CAAA,UAAA;AAAA,MACWH,IADX,GACyCG,KADzC,CAAA,IAAA;AAAA,MACiBF,KADjB,GACyCE,KADzC,CAAA,KAAA;AAAA,MAC2BD,SAD3B,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,WAAA,EAAA,YAAA,EAAA,MAAA,EAAA,OAAA,CAAA,CAAA;;AAAA,MAAA,WAAA,GAEzBG,UAAU,CAFe,gBAEf,CAFe;AAAA,MAE3CD,aAF2C,GAAA,WAAA,CAAA,aAAA;;AAGnD,MAAME,QAAQ,GAAGC,WAAjB,EAAA;AAEA,MAAIC,YAAgC,GAApC,IAAA;;AAEA,MAAI,CAAJ,IAAA,EAAW;AACTA,IAAAA,YAAY,GAAGP,KAAK,KAAKQ,QAAQ,CAAlBR,OAAAA,IAAAA,aAAAA,GAAAA,OAAAA,GAAfO,MAAAA;AACD;;AAED,SACE,mBAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,GAAG,EAFL,UAAA;AAGE,IAAA,SAAS,EAAEE,UAAU,CACnBC,YAAY,CAAA,OAAA,EADO,QACP,CADO,EAAA,gBAAA,MAAA,CAAA,KAAA,CAAA,EAAA,UAAA,MAAA,CAAA,YAAA,CAAA;AAHvB,GAAA,CAAA,EASE,mBAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,MAAA,EAAA,QAAA,EAGGC,YAAY,CAAZA,WAAY,CAAZA,IAA6B,mBAAA,CAAA,OAAA,EAAA;AAAS,IAAA,SAAS,EAAlB,oBAAA;AAAwC,IAAA,MAAM,EAA9C,SAAA;AAAyD,IAAA,KAAK,EAAC;AAA/D,GAAA,EAZlC,WAYkC,CAHhC,CATF,EAeGd,SAAS,KAATA,MAAAA,IACC,mBAAA,CAAA,SAAA,EAAA;AACE,IAAA,SAAS,EAAEY,UAAU,CAAA,kBAAA,EAAqB;AACxC,iCAA2BZ,SAAS,KAAK;AADD,KAArB,CADvB;AAIE,IAAA,QAAQ,EAAEU,YAAY,KAAK;AAJ7B,GAAA,CAhBJ,CADF;AAXF,CAAA;;AAuCAd,KAAK,CAALA,YAAAA,GAAqB;AACnBI,EAAAA,SAAS,EAAE;AADQ,CAArBJ;AAIA,eAAemB,cAAc,CAAA,KAAA,EAAQ;AAAEZ,EAAAA,KAAK,EAAE;AAAT,CAAR,CAA7B","sourcesContent":["import { FC, HTMLAttributes, ReactNode, useContext } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { HasRootRef } from '../../types';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport Separator from '../Separator/Separator';\nimport { hasReactNode } from '../../lib/utils';\nimport Caption from '../Typography/Caption/Caption';\nimport { withAdaptivity, AdaptivityProps, SizeType } from '../../hoc/withAdaptivity';\nimport ModalRootContext from '../ModalRoot/ModalRootContext';\n\nexport interface GroupProps extends HasRootRef<HTMLElement>, HTMLAttributes<HTMLElement>, AdaptivityProps {\n  header?: ReactNode;\n  description?: ReactNode;\n  /**\n    show - разделитель всегда показывается,\n    hide – разделитель всегда спрятан,\n    auto – разделитель рисуется автоматически между соседними группами.\n   */\n  separator?: 'show' | 'hide' | 'auto';\n  /**\n   * Режим отображения. Если установлен 'card', выглядит как карточка c\n   * обводкой и внешними отступами. Если 'plain' — без отступов и обводки.\n   * По умолчанию режим отображения зависит от `sizeX`. В модальных окнах\n   * по умолчанию 'plain'.\n   */\n  mode?: 'plain' | 'card';\n}\n\nconst Group: FC<GroupProps> = (props: GroupProps) => {\n  const { header, description, children, separator, getRootRef, mode, sizeX, ...restProps } = props;\n  const { isInsideModal } = useContext(ModalRootContext);\n  const platform = usePlatform();\n\n  let computedMode: GroupProps['mode'] = mode;\n\n  if (!mode) {\n    computedMode = sizeX === SizeType.COMPACT || isInsideModal ? 'plain' : 'card';\n  }\n\n  return (\n    <section\n      {...restProps}\n      ref={getRootRef}\n      vkuiClass={classNames(\n        getClassName('Group', platform),\n        `Group--sizeX-${sizeX}`,\n        `Group--${computedMode}`,\n      )}\n    >\n      <div vkuiClass=\"Group__inner\">\n        {header}\n        {children}\n        {hasReactNode(description) && <Caption vkuiClass=\"Group__description\" weight=\"regular\" level=\"1\">{description}</Caption>}\n      </div>\n\n      {separator !== 'hide' && (\n        <Separator\n          vkuiClass={classNames('Group__separator', {\n            'Group__separator--force': separator === 'show',\n          })}\n          expanded={computedMode === 'card'}\n        />\n      )}\n    </section>\n  );\n};\n\nGroup.defaultProps = {\n  separator: 'auto',\n};\n\nexport default withAdaptivity(Group, { sizeX: true });\n"]},"metadata":{},"sourceType":"module"}