{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { useEffect, useRef } from 'react';\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { hasReactNode, isFunction } from \"../../lib/utils\";\nimport { getClassName } from \"../../helpers/getClassName\";\nexport var WriteBar = function WriteBar(props) {\n  var platform = usePlatform();\n\n  var className = props.className,\n      style = props.style,\n      before = props.before,\n      inlineAfter = props.inlineAfter,\n      after = props.after,\n      value = props.value,\n      onChange = props.onChange,\n      getRootRef = props.getRootRef,\n      getRef = props.getRef,\n      onHeightChange = props.onHeightChange,\n      restProps = _objectWithoutProperties(props, [\"className\", \"style\", \"before\", \"inlineAfter\", \"after\", \"value\", \"onChange\", \"getRootRef\", \"getRef\", \"onHeightChange\"]);\n\n  var isControlledOutside = value != null;\n  var textareaRef = useExternRef(getRef);\n  var textareaMinHeightRef = useRef(null);\n\n  var resize = function resize() {\n    var textareaEl = textareaRef.current;\n\n    if (!textareaEl) {\n      return;\n    }\n\n    var offsetHeight = textareaEl.offsetHeight,\n        scrollHeight = textareaEl.scrollHeight;\n    var style = window.getComputedStyle(textareaEl);\n    var paddingTop = parseInt(style.paddingTop);\n    var paddingBottom = parseInt(style.paddingBottom);\n\n    if (textareaMinHeightRef.current === null) {\n      textareaMinHeightRef.current = offsetHeight;\n    }\n\n    var diff = paddingTop + paddingBottom + 10;\n\n    if (scrollHeight + diff <= offsetHeight) {\n      diff = 0;\n    }\n\n    textareaEl.style.height = '0px';\n    var height = textareaEl.scrollHeight - diff / 4;\n    textareaEl.style.height = String(Math.max(height, textareaMinHeightRef.current)) + 'px';\n\n    if (isFunction(onHeightChange)) {\n      onHeightChange();\n    }\n  };\n\n  var onTextareaChange = function onTextareaChange(event) {\n    if (isFunction(onChange)) {\n      onChange(event);\n    }\n\n    if (!isControlledOutside) {\n      resize();\n    }\n  };\n\n  useEffect(function () {\n    resize();\n  }, [value]);\n  return createScopedElement(\"div\", {\n    ref: getRootRef,\n    vkuiClass: getClassName('WriteBar', platform),\n    className: className,\n    style: style\n  }, createScopedElement(\"form\", {\n    vkuiClass: \"WriteBar__form\",\n    onSubmit: function onSubmit(e) {\n      return e.preventDefault();\n    }\n  }, hasReactNode(before) && createScopedElement(\"div\", {\n    vkuiClass: \"WriteBar__before\"\n  }, before), createScopedElement(\"div\", {\n    vkuiClass: \"WriteBar__formIn\"\n  }, createScopedElement(\"textarea\", _extends({}, restProps, {\n    vkuiClass: \"WriteBar__textarea\",\n    onChange: onTextareaChange,\n    ref: textareaRef,\n    value: value\n  })), hasReactNode(inlineAfter) && createScopedElement(\"div\", {\n    vkuiClass: \"WriteBar__inlineAfter\"\n  }, inlineAfter)), hasReactNode(after) && createScopedElement(\"div\", {\n    vkuiClass: \"WriteBar__after\"\n  }, after)));\n};","map":{"version":3,"sources":["../../../src/components/WriteBar/WriteBar.tsx"],"names":["WriteBar","platform","usePlatform","className","style","before","inlineAfter","after","value","onChange","getRootRef","getRef","onHeightChange","restProps","props","isControlledOutside","textareaRef","useExternRef","textareaMinHeightRef","useRef","resize","textareaEl","offsetHeight","scrollHeight","window","paddingTop","parseInt","paddingBottom","diff","height","String","Math","isFunction","onTextareaChange","useEffect","getClassName","e","hasReactNode"],"mappings":"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","sourcesContent":["import {\n  ChangeEventHandler,\n  FC,\n  ReactNode,\n  useEffect,\n  useRef,\n  TextareaHTMLAttributes,\n} from 'react';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { hasReactNode, isFunction } from '../../lib/utils';\nimport { getClassName } from '../../helpers/getClassName';\nimport { HasRef, HasRootRef } from '../../types';\n\nexport interface WriteBarProps extends TextareaHTMLAttributes<HTMLTextAreaElement>, HasRootRef<HTMLDivElement>, HasRef<HTMLTextAreaElement> {\n  /**\n   * Содержимое, отображаемое слево от поля ввода.\n   */\n  before?: ReactNode;\n  /**\n   * Содержимое, отображаемое поверх поля ввода (актуально для iOS)\n   */\n  inlineAfter?: ReactNode;\n  /**\n   * Содержимое, отображаемое справа от поля ввода\n   */\n  after?: ReactNode;\n  /**\n   * Вызывается при смене высоты поля ввода\n   */\n  onHeightChange?: VoidFunction;\n\n  children?: never;\n}\n\nexport const WriteBar: FC<WriteBarProps> = (props: WriteBarProps) => {\n  const platform = usePlatform();\n  const {\n    className,\n    style,\n\n    before,\n    inlineAfter,\n    after,\n\n    value,\n    onChange,\n\n    getRootRef,\n    getRef,\n    onHeightChange,\n    ...restProps\n  } = props;\n\n  const isControlledOutside = value != null;\n\n  const textareaRef = useExternRef(getRef);\n  const textareaMinHeightRef = useRef<number | null>(null);\n\n  const resize = () => {\n    const textareaEl = textareaRef.current;\n    if (!textareaEl) {\n      return;\n    }\n\n    const { offsetHeight, scrollHeight } = textareaEl;\n    const style = window.getComputedStyle(textareaEl);\n    const paddingTop = parseInt(style.paddingTop);\n    const paddingBottom = parseInt(style.paddingBottom);\n\n    if (textareaMinHeightRef.current === null) {\n      textareaMinHeightRef.current = offsetHeight;\n    }\n\n    let diff = paddingTop + paddingBottom + 10;\n\n    if (scrollHeight + diff <= offsetHeight) {\n      diff = 0;\n    }\n\n    textareaEl.style.height = '0px';\n\n    const height = textareaEl.scrollHeight - diff / 4;\n    textareaEl.style.height = String(Math.max(height, textareaMinHeightRef.current)) + 'px';\n\n    if (isFunction(onHeightChange)) {\n      onHeightChange();\n    }\n  };\n\n  const onTextareaChange: ChangeEventHandler<HTMLTextAreaElement> = (event) => {\n    if (isFunction(onChange)) {\n      onChange(event);\n    }\n\n    if (!isControlledOutside) {\n      resize();\n    }\n  };\n\n  useEffect(() => {\n    resize();\n  }, [value]);\n\n  return (\n    <div\n      ref={getRootRef}\n      vkuiClass={getClassName('WriteBar', platform)}\n      className={className}\n      style={style}\n    >\n      <form vkuiClass=\"WriteBar__form\" onSubmit={(e) => e.preventDefault()}>\n        {hasReactNode(before) &&\n        <div vkuiClass=\"WriteBar__before\">\n          {before}\n        </div>\n        }\n\n        <div vkuiClass=\"WriteBar__formIn\">\n          <textarea\n            {...restProps}\n            vkuiClass=\"WriteBar__textarea\"\n            onChange={onTextareaChange}\n            ref={textareaRef}\n            value={value}\n          />\n\n          {hasReactNode(inlineAfter) &&\n          <div vkuiClass=\"WriteBar__inlineAfter\">\n            {inlineAfter}\n          </div>\n          }\n        </div>\n\n        {hasReactNode(after) &&\n        <div vkuiClass=\"WriteBar__after\">\n          {after}\n        </div>\n        }\n      </form>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}