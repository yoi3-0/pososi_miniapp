{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 24 24';\nvar id = 'list_add_24';\nvar content = '<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" id=\"list_add_24\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h24v24H0z\" /><path d=\"M14 11c0-.552-.456-1-1.002-1H3.002A.999.999 0 002 11c0 .552.456 1 1.002 1h9.996A.999.999 0 0014 11zm0-4c0-.552-.456-1-1.002-1H3.002A.999.999 0 002 7c0 .552.456 1 1.002 1h9.996A.999.999 0 0014 7zm4 7v-2.99a1 1 0 10-2 0V14h-2.99a1 1 0 100 2H16v2.99a1 1 0 102 0V16h2.99a1 1 0 100-2H18zM2 15c0 .552.453 1 .997 1h6.006c.55 0 .997-.444.997-1 0-.552-.453-1-.997-1H2.997A.996.996 0 002 15z\" fill=\"currentColor\" /></g></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon24ListAdd = function Icon24ListAdd(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 24,\n    height: !isNaN(props.height) ? +props.height : 24\n  }));\n};\n\nIcon24ListAdd.mountIcon = mountIcon;\nexport default Icon24ListAdd;","map":{"version":3,"sources":["../../../tmp/24/list_add.ts"],"names":["viewBox","id","content","isMounted","addSpriteSymbol","Icon24ListAdd","useIsomorphicLayoutEffect","mountIcon","assign","width","isNaN","props","height"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA,C,CACA;;AACA,OAAA,aAAA,MAAA,kCAAA,C,CACA;;AACA,SAAA,MAAA,QAAA,mBAAA;AACA,SAAA,eAAA,EAAA,yBAAA,QAAA,WAAA;AACA,SAAA,OAAA,QAAA,YAAA;AAEA,IAAMA,OAAO,GAAb,WAAA;AACA,IAAMC,EAAE,GAAR,aAAA;AACA,IAAMC,OAAO,GAAb,0jBAAA;AAEA,IAAIC,SAAS,GAAb,KAAA;;AACA,SAAA,SAAA,GAAqB;AACnB,MAAI,CAAJ,SAAA,EAAgB;AACdC,IAAAA,eAAe,CAAC,IAAA,aAAA,CAAkB;AAChCH,MAAAA,EAAE,EAD8B,EAAA;AAEhCD,MAAAA,OAAO,EAFyB,OAAA;AAGhCE,MAAAA,OAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfE;AAMAD,IAAAA,SAAS,GAATA,IAAAA;AACD;AACF;;AASD,IAAME,aAAqC,GAAG,SAAxCA,aAAwC,CAAA,KAAA,EAAW;AACvDC,EAAAA,yBAAyB,CAAC,YAAM;AAC9BC,IAAAA,SAAS;AADc,GAAA,EAAzBD,EAAyB,CAAzBA;AAIA,SAAA,aAAO,KAAK,CAAL,aAAA,CAAA,OAAA,EAA6BE,MAAM,CAAA,EAAA,EAAA,KAAA,EAAY;AACpDR,IAAAA,OAAO,EAD6C,OAAA;AAEpDC,IAAAA,EAAE,EAFkD,EAAA;AAGpDQ,IAAAA,KAAK,EAAE,CAACC,KAAK,CAACC,KAAK,CAAZ,KAAM,CAAN,GAAsB,CAACA,KAAK,CAA5B,KAAA,GAH6C,EAAA;AAIpDC,IAAAA,MAAM,EAAE,CAACF,KAAK,CAACC,KAAK,CAAZ,MAAM,CAAN,GAAuB,CAACA,KAAK,CAA7B,MAAA,GAAuC;AAJK,GAAZ,CAAnC,CAAP;AALF,CAAA;;AAaCN,aAAD,CAAA,SAACA,GAAD,SAACA;AAED,eAAA,aAAA","sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 24 24';\nconst id = 'list_add_24';\nconst content = '<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" id=\"list_add_24\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h24v24H0z\" /><path d=\"M14 11c0-.552-.456-1-1.002-1H3.002A.999.999 0 002 11c0 .552.456 1 1.002 1h9.996A.999.999 0 0014 11zm0-4c0-.552-.456-1-1.002-1H3.002A.999.999 0 002 7c0 .552.456 1 1.002 1h9.996A.999.999 0 0014 7zm4 7v-2.99a1 1 0 10-2 0V14h-2.99a1 1 0 100 2H16v2.99a1 1 0 102 0V16h2.99a1 1 0 100-2H18zM2 15c0 .552.453 1 .997 1h6.006c.55 0 .997-.444.997-1 0-.552-.453-1-.997-1H2.997A.996.996 0 002 15z\" fill=\"currentColor\" /></g></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon24ListAddProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon24ListAdd: FC<Icon24ListAddProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 24,\n    height: !isNaN(props.height) ? +props.height : 24,\n  }));\n};\n\n(Icon24ListAdd as any).mountIcon = mountIcon;\n\nexport default Icon24ListAdd;\n"]},"metadata":{},"sourceType":"module"}