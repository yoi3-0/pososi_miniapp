{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/createSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport React, { Component } from 'react';\nimport { classNames } from \"../../lib/classNames\";\nimport { transitionEvent, animationEvent } from \"../../lib/supportEvents\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { IOS, ANDROID, VKCOM } from \"../../lib/platform\";\nimport Touch from \"../Touch/Touch\";\nimport { removeObjectKeys } from \"../../lib/removeObjectKeys\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { withContext } from \"../../hoc/withContext\";\nimport { ConfigProviderContext } from \"../ConfigProvider/ConfigProviderContext\";\nimport { createCustomEvent } from \"../../lib/utils\";\nimport { SplitColContext } from \"../SplitCol/SplitCol\";\nimport { AppRootPortal } from \"../AppRoot/AppRootPortal\";\nimport { canUseDOM, withDOM } from \"../../lib/dom\";\nimport { ScrollContext } from \"../AppRoot/ScrollContext\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nvar warn = warnOnce('View');\nexport var transitionStartEventName = 'VKUI:View:transition-start';\nexport var transitionEndEventName = 'VKUI:View:transition-end';\nvar SwipeBackResults;\n\n(function (SwipeBackResults) {\n  SwipeBackResults[SwipeBackResults[\"fail\"] = 1] = \"fail\";\n  SwipeBackResults[SwipeBackResults[\"success\"] = 2] = \"success\";\n})(SwipeBackResults || (SwipeBackResults = {}));\n\nvar scrollsCache = {};\nvar swipeBackExcludedTags = ['input', 'textarea'];\n\nvar View = /*#__PURE__*/function (_Component) {\n  _inherits(View, _Component);\n\n  var _super = _createSuper(View);\n\n  function View(props) {\n    var _this;\n\n    _classCallCheck(this, View);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"transitionFinishTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"animationFinishTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"panelNodes\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"transitionEndHandler\", function (e) {\n      if (!e || ['vkui-animation-ios-next-forward', 'vkui-animation-ios-prev-back', 'vkui-animation-view-next-forward', 'vkui-animation-view-prev-back'].includes(e.animationName)) {\n        var activePanel = _this.props.activePanel;\n        var isBack = _this.state.isBack;\n        var prevPanel = _this.state.prevPanel;\n\n        _this.document.dispatchEvent(createCustomEvent(_this.window, transitionEndEventName));\n\n        _this.setState({\n          prevPanel: null,\n          nextPanel: null,\n          visiblePanels: [activePanel],\n          activePanel: activePanel,\n          animated: false,\n          isBack: undefined,\n          scrolls: isBack ? removeObjectKeys(_this.state.scrolls, [prevPanel]) : _this.state.scrolls\n        }, function () {\n          isBack && _this.props.scroll.scrollTo(0, _this.state.scrolls[activePanel]);\n          _this.props.onTransition && _this.props.onTransition({\n            isBack: isBack,\n            from: prevPanel,\n            to: activePanel\n          });\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"swipingBackTransitionEndHandler\", function (e) {\n      // indexOf because of vendor prefixes in old browsers\n      var target = e.target;\n\n      if (e.propertyName.includes('transform') && target === _this.pickPanel(_this.state.swipeBackNextPanel)) {\n        switch (_this.state.swipeBackResult) {\n          case SwipeBackResults.fail:\n            _this.onSwipeBackCancel();\n\n            break;\n\n          case SwipeBackResults.success:\n            _this.onSwipeBackSuccess();\n\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMoveX\", function (e) {\n      var target = e.originalEvent.target;\n\n      if (target && typeof target.tagName === 'string' && swipeBackExcludedTags.includes(target.tagName.toLowerCase())) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          platform = _this$props.platform,\n          configProvider = _this$props.configProvider;\n\n      if (platform === IOS && !configProvider.isWebView && (e.startX <= 70 || e.startX >= _this.window.innerWidth - 70) && !_this.state.browserSwipe) {\n        _this.setState({\n          browserSwipe: true\n        });\n      }\n\n      if (platform === IOS && configProvider.isWebView && _this.props.onSwipeBack) {\n        if (_this.state.animated && e.startX <= 70) {\n          return;\n        }\n\n        if (e.startX <= 70 && !_this.state.swipingBack && _this.props.history.length > 1) {\n          _this.setState({\n            swipingBack: true,\n            swipebackStartX: e.startX,\n            startT: e.startT,\n            swipeBackPrevPanel: _this.state.activePanel,\n            swipeBackNextPanel: _this.props.history.slice(-2)[0],\n            scrolls: _objectSpread(_objectSpread({}, _this.state.scrolls), {}, _defineProperty({}, _this.state.activePanel, _this.props.scroll.getScroll().y))\n          });\n        }\n\n        if (_this.state.swipingBack) {\n          var swipeBackShift;\n\n          if (e.shiftX < 0) {\n            swipeBackShift = 0;\n          } else if (e.shiftX > _this.window.innerWidth - _this.state.swipebackStartX) {\n            swipeBackShift = _this.window.innerWidth;\n          } else {\n            swipeBackShift = e.shiftX;\n          }\n\n          _this.setState({\n            swipeBackShift: swipeBackShift\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnd\", function () {\n      if (_this.state.swipingBack) {\n        var speed = _this.state.swipeBackShift / (Date.now() - _this.state.startT.getTime()) * 1000;\n\n        if (_this.state.swipeBackShift === 0) {\n          _this.onSwipeBackCancel();\n        } else if (_this.state.swipeBackShift >= _this.window.innerWidth) {\n          _this.onSwipeBackSuccess();\n        } else if (speed > 250 || _this.state.swipebackStartX + _this.state.swipeBackShift > _this.window.innerWidth / 2) {\n          _this.setState({\n            swipeBackResult: SwipeBackResults.success\n          });\n        } else {\n          _this.setState({\n            swipeBackResult: SwipeBackResults.fail\n          });\n        }\n      }\n    });\n\n    _this.state = {\n      scrolls: scrollsCache[getNavId(props)] || {},\n      animated: false,\n      visiblePanels: [props.activePanel],\n      activePanel: props.activePanel,\n      isBack: undefined,\n      prevPanel: null,\n      nextPanel: null,\n      swipingBack: false,\n      swipebackStartX: 0,\n      swipeBackShift: 0,\n      swipeBackNextPanel: null,\n      swipeBackPrevPanel: null,\n      swipeBackResult: null,\n      browserSwipe: false\n    };\n    return _this;\n  }\n\n  _createClass(View, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var id = getNavId(this.props);\n\n      if (id) {\n        scrollsCache[id] = this.state.scrolls;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      this.props.popout && !prevProps.popout && this.blurActiveElement();\n      this.props.modal && !prevProps.modal && this.blurActiveElement(); // Нужен переход\n\n      if (prevProps.activePanel !== this.props.activePanel && !prevState.swipingBack && !prevState.browserSwipe) {\n        var firstLayerId = this.panels.map(function (panel) {\n          return getNavId(panel.props, warn);\n        }).find(function (id) {\n          return id === prevProps.activePanel || id === _this2.props.activePanel;\n        });\n        var isBack = firstLayerId === this.props.activePanel;\n        this.blurActiveElement();\n        this.setState({\n          visiblePanels: [prevProps.activePanel, this.props.activePanel],\n          prevPanel: prevProps.activePanel,\n          nextPanel: this.props.activePanel,\n          activePanel: null,\n          animated: true,\n          scrolls: _objectSpread(_objectSpread({}, prevState.scrolls), {}, _defineProperty({}, prevProps.activePanel, this.props.scroll.getScroll().y)),\n          isBack: isBack\n        });\n      } // Закончилась анимация свайпа назад\n\n\n      if (prevProps.activePanel !== this.props.activePanel && prevState.swipingBack) {\n        var nextPanel = this.props.activePanel;\n        var prevPanel = prevProps.activePanel;\n        this.setState({\n          swipeBackPrevPanel: null,\n          swipeBackNextPanel: null,\n          swipingBack: false,\n          swipeBackResult: null,\n          swipebackStartX: 0,\n          swipeBackShift: 0,\n          activePanel: nextPanel,\n          visiblePanels: [nextPanel],\n          scrolls: removeObjectKeys(prevState.scrolls, [prevState.swipeBackPrevPanel])\n        }, function () {\n          _this2.document.dispatchEvent(createCustomEvent(_this2.window, transitionEndEventName));\n\n          _this2.props.scroll.scrollTo(0, prevState.scrolls[_this2.state.activePanel]);\n\n          prevProps.onTransition && prevProps.onTransition({\n            isBack: true,\n            from: prevPanel,\n            to: nextPanel\n          });\n        });\n      }\n\n      var scrolls = this.state.scrolls; // Начался переход\n\n      if (!prevState.animated && this.state.animated) {\n        var transitionStartEventData = {\n          detail: {\n            from: this.state.prevPanel,\n            to: this.state.nextPanel,\n            isBack: this.state.isBack,\n            scrolls: scrolls\n          }\n        };\n        this.document.dispatchEvent(new this.window.CustomEvent(transitionStartEventName, transitionStartEventData));\n        var nextPanelElement = this.pickPanel(this.state.nextPanel);\n        var prevPanelElement = this.pickPanel(this.state.prevPanel);\n        prevPanelElement.scrollTop = scrolls[this.state.prevPanel];\n\n        if (this.state.isBack) {\n          nextPanelElement.scrollTop = scrolls[this.state.nextPanel];\n        }\n\n        this.waitAnimationFinish(this.pickPanel(this.state.isBack ? this.state.prevPanel : this.state.nextPanel), this.transitionEndHandler);\n      } // Начался свайп назад\n\n\n      if (!prevState.swipingBack && this.state.swipingBack) {\n        var _transitionStartEventData = {\n          detail: {\n            from: this.state.swipeBackPrevPanel,\n            to: this.state.swipeBackNextPanel,\n            scrolls: scrolls\n          }\n        };\n        this.document.dispatchEvent(new this.window.CustomEvent(transitionStartEventName, _transitionStartEventData));\n        this.props.onSwipeBackStart && this.props.onSwipeBackStart();\n\n        var _nextPanelElement = this.pickPanel(this.state.swipeBackNextPanel);\n\n        var _prevPanelElement = this.pickPanel(this.state.swipeBackPrevPanel);\n\n        _nextPanelElement.scrollTop = scrolls[this.state.swipeBackNextPanel];\n        _prevPanelElement.scrollTop = scrolls[this.state.swipeBackPrevPanel];\n      } // Началась анимация завершения свайпа назад.\n\n\n      if (!prevState.swipeBackResult && this.state.swipeBackResult) {\n        this.waitTransitionFinish(this.pickPanel(this.state.swipeBackNextPanel), this.swipingBackTransitionEndHandler);\n      } // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n\n\n      if (prevState.swipeBackResult === SwipeBackResults.fail && !this.state.swipeBackResult) {\n        this.props.scroll.scrollTo(0, scrolls[this.state.activePanel]);\n      } // Закончился Safari свайп\n\n\n      if (prevProps.activePanel !== this.props.activePanel && this.state.browserSwipe) {\n        this.setState({\n          browserSwipe: false,\n          nextPanel: null,\n          prevPanel: null,\n          animated: false,\n          visiblePanels: [this.props.activePanel],\n          activePanel: this.props.activePanel\n        });\n      }\n    }\n  }, {\n    key: \"shouldDisableTransitionMotion\",\n    value: function shouldDisableTransitionMotion() {\n      return this.props.configProvider.transitionMotionEnabled === false || !this.props.splitCol.animate;\n    }\n  }, {\n    key: \"waitTransitionFinish\",\n    value: function waitTransitionFinish(elem, eventHandler) {\n      if (transitionEvent.supported) {\n        elem.removeEventListener(transitionEvent.name, eventHandler);\n        elem.addEventListener(transitionEvent.name, eventHandler);\n      } else {\n        clearTimeout(this.transitionFinishTimeout);\n        this.transitionFinishTimeout = setTimeout(eventHandler, this.props.platform === ANDROID || this.props.platform === VKCOM ? 300 : 600);\n      }\n    }\n  }, {\n    key: \"waitAnimationFinish\",\n    value: function waitAnimationFinish(elem, eventHandler) {\n      if (this.shouldDisableTransitionMotion()) {\n        eventHandler();\n        return;\n      }\n\n      if (animationEvent.supported) {\n        elem.removeEventListener(animationEvent.name, eventHandler);\n        elem.addEventListener(animationEvent.name, eventHandler);\n      } else {\n        clearTimeout(this.animationFinishTimeout);\n        this.animationFinishTimeout = setTimeout(eventHandler, this.props.platform === ANDROID || this.props.platform === VKCOM ? 300 : 600);\n      }\n    }\n  }, {\n    key: \"blurActiveElement\",\n    value: function blurActiveElement() {\n      if (typeof this.window !== 'undefined' && this.document.activeElement) {\n        this.document.activeElement.blur();\n      }\n    }\n  }, {\n    key: \"pickPanel\",\n    value: function pickPanel(id) {\n      return this.panelNodes[id];\n    }\n  }, {\n    key: \"onSwipeBackSuccess\",\n    value: function onSwipeBackSuccess() {\n      this.props.onSwipeBack && this.props.onSwipeBack();\n    }\n  }, {\n    key: \"onSwipeBackCancel\",\n    value: function onSwipeBackCancel() {\n      var _this3 = this;\n\n      this.props.onSwipeBackCancel && this.props.onSwipeBackCancel();\n      this.setState({\n        swipeBackPrevPanel: null,\n        swipeBackNextPanel: null,\n        swipingBack: false,\n        swipeBackResult: null,\n        swipebackStartX: 0,\n        swipeBackShift: 0\n      }, function () {\n        _this3.document.dispatchEvent(createCustomEvent(_this3.window, transitionEndEventName));\n      });\n    }\n  }, {\n    key: \"calcPanelSwipeStyles\",\n    value: function calcPanelSwipeStyles(panelId) {\n      if (!canUseDOM) {\n        return {};\n      }\n\n      var isPrev = panelId === this.state.swipeBackPrevPanel;\n      var isNext = panelId === this.state.swipeBackNextPanel;\n\n      if (!isPrev && !isNext || this.state.swipeBackResult) {\n        return {};\n      }\n\n      var prevPanelTranslate = \"\".concat(this.state.swipeBackShift, \"px\");\n      var nextPanelTranslate = \"\".concat(-50 + this.state.swipeBackShift * 100 / this.window.innerWidth / 2, \"%\");\n      var prevPanelShadow = 0.3 * (this.window.innerWidth - this.state.swipeBackShift) / this.window.innerWidth;\n\n      if (this.state.swipeBackResult) {\n        return isPrev ? {\n          boxShadow: \"-2px 0 12px rgba(0, 0, 0, \".concat(prevPanelShadow, \")\")\n        } : {};\n      }\n\n      if (isNext) {\n        return {\n          transform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\"),\n          WebkitTransform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\")\n        };\n      }\n\n      if (isPrev) {\n        return {\n          transform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\"),\n          WebkitTransform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\"),\n          boxShadow: \"-2px 0 12px rgba(0, 0, 0, \".concat(prevPanelShadow, \")\")\n        };\n      }\n\n      return {};\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props2 = this.props,\n          popout = _this$props2.popout,\n          modal = _this$props2.modal,\n          platform = _this$props2.platform,\n          _1 = _this$props2.activePanel,\n          splitCol = _this$props2.splitCol,\n          configProvider = _this$props2.configProvider,\n          history = _this$props2.history,\n          id = _this$props2.id,\n          nav = _this$props2.nav,\n          onTransition = _this$props2.onTransition,\n          onSwipeBack = _this$props2.onSwipeBack,\n          onSwipeBackStart = _this$props2.onSwipeBackStart,\n          onSwipeBackCancel = _this$props2.onSwipeBackCancel,\n          window = _this$props2.window,\n          document = _this$props2.document,\n          scroll = _this$props2.scroll,\n          restProps = _objectWithoutProperties(_this$props2, [\"popout\", \"modal\", \"platform\", \"activePanel\", \"splitCol\", \"configProvider\", \"history\", \"id\", \"nav\", \"onTransition\", \"onSwipeBack\", \"onSwipeBackStart\", \"onSwipeBackCancel\", \"window\", \"document\", \"scroll\"]);\n\n      var _this$state = this.state,\n          prevPanel = _this$state.prevPanel,\n          nextPanel = _this$state.nextPanel,\n          activePanel = _this$state.activePanel,\n          swipeBackPrevPanel = _this$state.swipeBackPrevPanel,\n          swipeBackNextPanel = _this$state.swipeBackNextPanel,\n          swipeBackResult = _this$state.swipeBackResult;\n      var hasPopout = !!popout;\n      var hasModal = !!modal;\n      var panels = this.panels.filter(function (panel) {\n        var panelId = getNavId(panel.props, warn);\n        return _this4.state.visiblePanels.includes(panelId) || panelId === swipeBackPrevPanel || panelId === swipeBackNextPanel;\n      });\n      var disableAnimation = this.shouldDisableTransitionMotion();\n      var modifiers = {\n        'View--animated': !disableAnimation && this.state.animated,\n        'View--swiping-back': !disableAnimation && this.state.swipingBack,\n        'View--no-motion': disableAnimation\n      };\n      return createScopedElement(Touch, _extends({\n        Component: \"section\"\n      }, restProps, {\n        vkuiClass: classNames(getClassName('View', platform), modifiers),\n        onMoveX: this.onMoveX,\n        onEnd: this.onEnd\n      }), createScopedElement(\"div\", {\n        vkuiClass: \"View__panels\"\n      }, panels.map(function (panel) {\n        var panelId = getNavId(panel.props, warn);\n        return createScopedElement(\"div\", {\n          vkuiClass: classNames('View__panel', {\n            'View__panel--active': panelId === activePanel,\n            'View__panel--prev': panelId === prevPanel,\n            'View__panel--next': panelId === nextPanel,\n            'View__panel--swipe-back-prev': panelId === swipeBackPrevPanel,\n            'View__panel--swipe-back-next': panelId === swipeBackNextPanel,\n            'View__panel--swipe-back-success': swipeBackResult === SwipeBackResults.success,\n            'View__panel--swipe-back-failed': swipeBackResult === SwipeBackResults.fail\n          }),\n          ref: function ref(el) {\n            return _this4.panelNodes[panelId] = el;\n          },\n          \"data-vkui-active-panel\": panelId === activePanel ? 'true' : '',\n          style: _this4.calcPanelSwipeStyles(panelId),\n          key: panelId\n        }, createScopedElement(\"div\", {\n          vkuiClass: \"View__panel-in\"\n        }, panel));\n      })), createScopedElement(AppRootPortal, null, hasPopout && createScopedElement(\"div\", {\n        vkuiClass: \"View__popout\"\n      }, popout), hasModal && createScopedElement(\"div\", {\n        vkuiClass: \"View__modal\"\n      }, modal)));\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.props.document;\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.props.window;\n    }\n  }, {\n    key: \"panels\",\n    get: function get() {\n      return React.Children.toArray(this.props.children);\n    }\n  }]);\n\n  return View;\n}(Component);\n\n_defineProperty(View, \"defaultProps\", {\n  history: []\n});\n\nexport default withContext(withContext(withContext(withPlatform(withDOM(View)), SplitColContext, 'splitCol'), ConfigProviderContext, 'configProvider'), ScrollContext, 'scroll');","map":{"version":3,"sources":["../../../src/components/View/View.tsx"],"names":["warn","warnOnce","transitionStartEventName","transitionEndEventName","SwipeBackResults","scrollsCache","swipeBackExcludedTags","View","Component","scrolls","getNavId","animated","visiblePanels","props","activePanel","isBack","prevPanel","nextPanel","swipingBack","swipebackStartX","swipeBackShift","swipeBackNextPanel","swipeBackPrevPanel","swipeBackResult","browserSwipe","history","React","id","prevProps","prevState","firstLayerId","panel","removeObjectKeys","createCustomEvent","from","to","transitionStartEventData","detail","nextPanelElement","prevPanelElement","elem","eventHandler","transitionEvent","clearTimeout","setTimeout","animationEvent","e","target","platform","configProvider","startT","speed","Date","success","fail","panelId","isPrev","isNext","prevPanelTranslate","nextPanelTranslate","prevPanelShadow","boxShadow","transform","WebkitTransform","popout","modal","_1","splitCol","nav","onTransition","onSwipeBack","onSwipeBackStart","onSwipeBackCancel","window","document","scroll","restProps","hasPopout","hasModal","panels","disableAnimation","modifiers","classNames","getClassName","onEnd","withContext","withPlatform","withDOM"],"mappings":"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","sourcesContent":["import React, { Component, CSSProperties, HTMLAttributes, ReactNode, ReactElement } from 'react';\nimport { classNames } from '../../lib/classNames';\nimport { transitionEvent, animationEvent } from '../../lib/supportEvents';\nimport { getClassName } from '../../helpers/getClassName';\nimport { IOS, ANDROID, VKCOM } from '../../lib/platform';\nimport Touch, { TouchEvent } from '../Touch/Touch';\nimport { removeObjectKeys } from '../../lib/removeObjectKeys';\nimport { HasPlatform } from '../../types';\nimport { withPlatform } from '../../hoc/withPlatform';\nimport { withContext } from '../../hoc/withContext';\nimport { ConfigProviderContext, ConfigProviderContextInterface } from '../ConfigProvider/ConfigProviderContext';\nimport { createCustomEvent } from '../../lib/utils';\nimport { SplitColContext, SplitColContextProps } from '../SplitCol/SplitCol';\nimport { AppRootPortal } from '../AppRoot/AppRootPortal';\nimport { canUseDOM, withDOM, DOMProps } from '../../lib/dom';\nimport { ScrollContext, ScrollContextInterface } from '../AppRoot/ScrollContext';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { warnOnce } from '../../lib/warnOnce';\n\nconst warn = warnOnce('View');\nexport const transitionStartEventName = 'VKUI:View:transition-start';\nexport const transitionEndEventName = 'VKUI:View:transition-end';\n\nenum SwipeBackResults { fail = 1, success}\n\ninterface Scrolls {\n  [index: string]: number;\n}\n\nexport type TransitionStartEventDetail = {\n  scrolls: Scrolls;\n  from: string;\n  to: string;\n  isBack: boolean;\n};\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\ntype AnimationEventHandler = (e?: AnimationEvent) => void;\n\ntype TransitionEventHandler = (e?: TransitionEvent) => void;\n\nlet scrollsCache: ViewsScrolls = {};\n\nconst swipeBackExcludedTags = ['input', 'textarea'];\n\nexport interface ViewProps extends HTMLAttributes<HTMLElement>, HasPlatform, NavIdProps {\n  activePanel: string;\n  /**\n   * @deprecated будет удалено в 5.0.0. Используйте одноименное свойство у `SplitLayout`.\n   *\n   * Свойство для отрисовки `Alert`, `ActionSheet` и `ScreenSpinner`.\n   */\n  popout?: ReactNode;\n  /**\n   * @deprecated будет удалено в 5.0.0. Используйте одноименное свойство у `SplitLayout`.\n   *\n   * Свойство для отрисовки `ModalRoot`.\n   */\n  modal?: ReactNode;\n  onTransition?(params: { isBack: boolean; from: string; to: string }): void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?(): void;\n  /**\n   * callback начала анимации свайпа назад.\n   */\n  onSwipeBackStart?(): void;\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?(): void;\n  history?: string[];\n  /**\n   * @ignore\n   */\n  splitCol?: SplitColContextProps;\n  /**\n   * @ignore\n   */\n  configProvider?: ConfigProviderContextInterface;\n  /**\n   * @ignore\n   */\n  scroll?: ScrollContextInterface;\n}\n\nexport interface ViewState {\n  scrolls: Scrolls;\n  animated: boolean;\n  startT?: Date;\n\n  visiblePanels: string[];\n  activePanel: string;\n  isBack: boolean;\n  prevPanel: string;\n  nextPanel: string;\n\n  swipingBack: boolean;\n  swipebackStartX: number;\n  swipeBackShift: number;\n  swipeBackNextPanel: string;\n  swipeBackPrevPanel: string;\n  swipeBackResult: SwipeBackResults;\n\n  browserSwipe: boolean;\n}\n\nclass View extends Component<ViewProps & DOMProps, ViewState> {\n  constructor(props: ViewProps) {\n    super(props);\n\n    this.state = {\n      scrolls: scrollsCache[getNavId(props)] || {},\n      animated: false,\n\n      visiblePanels: [props.activePanel],\n      activePanel: props.activePanel,\n      isBack: undefined,\n      prevPanel: null,\n      nextPanel: null,\n\n      swipingBack: false,\n      swipebackStartX: 0,\n      swipeBackShift: 0,\n      swipeBackNextPanel: null,\n      swipeBackPrevPanel: null,\n      swipeBackResult: null,\n\n      browserSwipe: false,\n    };\n  }\n\n  static defaultProps: Partial<ViewProps> = {\n    history: [],\n  };\n\n  private transitionFinishTimeout: ReturnType<typeof setTimeout>;\n  private animationFinishTimeout: ReturnType<typeof setTimeout>;\n\n  get document() {\n    return this.props.document;\n  }\n\n  get window() {\n    return this.props.window;\n  }\n\n  get panels() {\n    return React.Children.toArray(this.props.children) as ReactElement[];\n  }\n\n  panelNodes: { [id: string]: HTMLDivElement } = {};\n\n  componentWillUnmount() {\n    const id = getNavId(this.props);\n    if (id) {\n      scrollsCache[id] = this.state.scrolls;\n    }\n  }\n\n  componentDidUpdate(prevProps: ViewProps, prevState: ViewState) {\n    this.props.popout && !prevProps.popout && this.blurActiveElement();\n    this.props.modal && !prevProps.modal && this.blurActiveElement();\n\n    // Нужен переход\n    if (prevProps.activePanel !== this.props.activePanel && !prevState.swipingBack && !prevState.browserSwipe) {\n      const firstLayerId = this.panels\n        .map((panel) => getNavId(panel.props, warn))\n        .find((id) => id === prevProps.activePanel || id === this.props.activePanel);\n\n      const isBack = firstLayerId === this.props.activePanel;\n\n      this.blurActiveElement();\n\n      this.setState({\n        visiblePanels: [prevProps.activePanel, this.props.activePanel],\n        prevPanel: prevProps.activePanel,\n        nextPanel: this.props.activePanel,\n        activePanel: null,\n        animated: true,\n        scrolls: {\n          ...prevState.scrolls,\n          [prevProps.activePanel]: this.props.scroll.getScroll().y,\n        },\n        isBack,\n      });\n    }\n\n    // Закончилась анимация свайпа назад\n    if (prevProps.activePanel !== this.props.activePanel && prevState.swipingBack) {\n      const nextPanel = this.props.activePanel;\n      const prevPanel = prevProps.activePanel;\n      this.setState({\n        swipeBackPrevPanel: null,\n        swipeBackNextPanel: null,\n        swipingBack: false,\n        swipeBackResult: null,\n        swipebackStartX: 0,\n        swipeBackShift: 0,\n        activePanel: nextPanel,\n        visiblePanels: [nextPanel],\n        scrolls: removeObjectKeys(prevState.scrolls, [prevState.swipeBackPrevPanel]),\n      }, () => {\n        this.document.dispatchEvent(createCustomEvent(this.window, transitionEndEventName));\n        this.props.scroll.scrollTo(0, prevState.scrolls[this.state.activePanel]);\n        prevProps.onTransition && prevProps.onTransition({ isBack: true, from: prevPanel, to: nextPanel });\n      });\n    }\n\n    const scrolls = this.state.scrolls;\n\n    // Начался переход\n    if (!prevState.animated && this.state.animated) {\n      const transitionStartEventData = {\n        detail: {\n          from: this.state.prevPanel,\n          to: this.state.nextPanel,\n          isBack: this.state.isBack,\n          scrolls,\n        },\n      };\n      this.document.dispatchEvent(new (this.window as any).CustomEvent(transitionStartEventName, transitionStartEventData));\n      const nextPanelElement = this.pickPanel(this.state.nextPanel);\n      const prevPanelElement = this.pickPanel(this.state.prevPanel);\n\n      prevPanelElement.scrollTop = scrolls[this.state.prevPanel];\n      if (this.state.isBack) {\n        nextPanelElement.scrollTop = scrolls[this.state.nextPanel];\n      }\n      this.waitAnimationFinish(this.pickPanel(this.state.isBack ? this.state.prevPanel : this.state.nextPanel), this.transitionEndHandler);\n    }\n\n    // Начался свайп назад\n    if (!prevState.swipingBack && this.state.swipingBack) {\n      const transitionStartEventData = {\n        detail: {\n          from: this.state.swipeBackPrevPanel,\n          to: this.state.swipeBackNextPanel,\n          scrolls,\n        },\n      };\n      this.document.dispatchEvent(new (this.window as any).CustomEvent(transitionStartEventName, transitionStartEventData));\n      this.props.onSwipeBackStart && this.props.onSwipeBackStart();\n      const nextPanelElement = this.pickPanel(this.state.swipeBackNextPanel);\n      const prevPanelElement = this.pickPanel(this.state.swipeBackPrevPanel);\n\n      nextPanelElement.scrollTop = scrolls[this.state.swipeBackNextPanel];\n      prevPanelElement.scrollTop = scrolls[this.state.swipeBackPrevPanel];\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevState.swipeBackResult && this.state.swipeBackResult) {\n      this.waitTransitionFinish(this.pickPanel(this.state.swipeBackNextPanel), this.swipingBackTransitionEndHandler);\n    }\n\n    // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n    if (prevState.swipeBackResult === SwipeBackResults.fail && !this.state.swipeBackResult) {\n      this.props.scroll.scrollTo(0, scrolls[this.state.activePanel]);\n    }\n\n    // Закончился Safari свайп\n    if (prevProps.activePanel !== this.props.activePanel && this.state.browserSwipe) {\n      this.setState({\n        browserSwipe: false,\n        nextPanel: null,\n        prevPanel: null,\n        animated: false,\n        visiblePanels: [this.props.activePanel],\n        activePanel: this.props.activePanel,\n      });\n    }\n  }\n\n  shouldDisableTransitionMotion(): boolean {\n    return this.props.configProvider.transitionMotionEnabled === false ||\n      !this.props.splitCol.animate;\n  }\n\n  waitTransitionFinish(elem: HTMLElement, eventHandler: TransitionEventHandler): void {\n    if (transitionEvent.supported) {\n      elem.removeEventListener(transitionEvent.name, eventHandler);\n      elem.addEventListener(transitionEvent.name, eventHandler);\n    } else {\n      clearTimeout(this.transitionFinishTimeout);\n      this.transitionFinishTimeout = setTimeout(eventHandler, this.props.platform === ANDROID || this.props.platform === VKCOM ? 300 : 600);\n    }\n  }\n\n  waitAnimationFinish(elem: HTMLElement, eventHandler: AnimationEventHandler): void {\n    if (this.shouldDisableTransitionMotion()) {\n      eventHandler();\n      return;\n    }\n\n    if (animationEvent.supported) {\n      elem.removeEventListener(animationEvent.name, eventHandler);\n      elem.addEventListener(animationEvent.name, eventHandler);\n    } else {\n      clearTimeout(this.animationFinishTimeout);\n      this.animationFinishTimeout = setTimeout(eventHandler, this.props.platform === ANDROID || this.props.platform === VKCOM ? 300 : 600);\n    }\n  }\n\n  blurActiveElement(): void {\n    if (typeof this.window !== 'undefined' && this.document.activeElement) {\n      (this.document.activeElement as HTMLElement).blur();\n    }\n  }\n\n  pickPanel(id: string) {\n    return this.panelNodes[id];\n  }\n\n  transitionEndHandler = (e?: AnimationEvent): void => {\n    if (!e || [\n      'vkui-animation-ios-next-forward',\n      'vkui-animation-ios-prev-back',\n      'vkui-animation-view-next-forward',\n      'vkui-animation-view-prev-back',\n    ].includes(e.animationName)) {\n      const activePanel = this.props.activePanel;\n      const isBack = this.state.isBack;\n      const prevPanel = this.state.prevPanel;\n      this.document.dispatchEvent(createCustomEvent(this.window, transitionEndEventName));\n      this.setState({\n        prevPanel: null,\n        nextPanel: null,\n        visiblePanels: [activePanel],\n        activePanel: activePanel,\n        animated: false,\n        isBack: undefined,\n        scrolls: isBack ? removeObjectKeys(this.state.scrolls, [prevPanel]) : this.state.scrolls,\n      }, () => {\n        isBack && this.props.scroll.scrollTo(0, this.state.scrolls[activePanel]);\n        this.props.onTransition && this.props.onTransition({ isBack, from: prevPanel, to: activePanel });\n      });\n    }\n  };\n\n  swipingBackTransitionEndHandler = (e?: TransitionEvent): void => {\n    // indexOf because of vendor prefixes in old browsers\n    const target = e.target as HTMLElement;\n    if (e.propertyName.includes('transform') && target === this.pickPanel(this.state.swipeBackNextPanel)) {\n      switch (this.state.swipeBackResult) {\n        case SwipeBackResults.fail:\n          this.onSwipeBackCancel();\n          break;\n        case SwipeBackResults.success:\n          this.onSwipeBackSuccess();\n      }\n    }\n  };\n\n  onSwipeBackSuccess(): void {\n    this.props.onSwipeBack && this.props.onSwipeBack();\n  }\n\n  onSwipeBackCancel(): void {\n    this.props.onSwipeBackCancel && this.props.onSwipeBackCancel();\n    this.setState({\n      swipeBackPrevPanel: null,\n      swipeBackNextPanel: null,\n      swipingBack: false,\n      swipeBackResult: null,\n      swipebackStartX: 0,\n      swipeBackShift: 0,\n    }, () => {\n      this.document.dispatchEvent(createCustomEvent(this.window, transitionEndEventName));\n    });\n  }\n\n  onMoveX = (e: TouchEvent): void => {\n    const target = e.originalEvent.target as HTMLElement;\n    if (\n      target &&\n      typeof target.tagName === 'string' &&\n      swipeBackExcludedTags.includes(target.tagName.toLowerCase())\n    ) {\n      return;\n    }\n\n    const { platform, configProvider } = this.props;\n\n    if (platform === IOS && !configProvider.isWebView && (e.startX <= 70 || e.startX >= this.window.innerWidth - 70) && !this.state.browserSwipe) {\n      this.setState({ browserSwipe: true });\n    }\n\n    if (platform === IOS && configProvider.isWebView && this.props.onSwipeBack) {\n      if (this.state.animated && e.startX <= 70) {\n        return;\n      }\n\n      if (e.startX <= 70 && !this.state.swipingBack && this.props.history.length > 1) {\n        this.setState({\n          swipingBack: true,\n          swipebackStartX: e.startX,\n          startT: e.startT,\n          swipeBackPrevPanel: this.state.activePanel,\n          swipeBackNextPanel: this.props.history.slice(-2)[0],\n          scrolls: {\n            ...this.state.scrolls,\n            [this.state.activePanel]: this.props.scroll.getScroll().y,\n          },\n        });\n      }\n      if (this.state.swipingBack) {\n        let swipeBackShift;\n        if (e.shiftX < 0) {\n          swipeBackShift = 0;\n        } else if (e.shiftX > this.window.innerWidth - this.state.swipebackStartX) {\n          swipeBackShift = this.window.innerWidth;\n        } else {\n          swipeBackShift = e.shiftX;\n        }\n        this.setState({ swipeBackShift });\n      }\n    }\n  };\n\n  onEnd = (): void => {\n    if (this.state.swipingBack) {\n      const speed = this.state.swipeBackShift / (Date.now() - this.state.startT.getTime()) * 1000;\n      if (this.state.swipeBackShift === 0) {\n        this.onSwipeBackCancel();\n      } else if (this.state.swipeBackShift >= this.window.innerWidth) {\n        this.onSwipeBackSuccess();\n      } else if (speed > 250 || this.state.swipebackStartX + this.state.swipeBackShift > this.window.innerWidth / 2) {\n        this.setState({ swipeBackResult: SwipeBackResults.success });\n      } else {\n        this.setState({ swipeBackResult: SwipeBackResults.fail });\n      }\n    }\n  };\n\n  calcPanelSwipeStyles(panelId: string): CSSProperties {\n    if (!canUseDOM) {\n      return {};\n    }\n\n    const isPrev = panelId === this.state.swipeBackPrevPanel;\n    const isNext = panelId === this.state.swipeBackNextPanel;\n\n    if (!isPrev && !isNext || this.state.swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${this.state.swipeBackShift}px`;\n    let nextPanelTranslate = `${-50 + this.state.swipeBackShift * 100 / this.window.innerWidth / 2}%`;\n    let prevPanelShadow = 0.3 * (this.window.innerWidth - this.state.swipeBackShift) / this.window.innerWidth;\n\n    if (this.state.swipeBackResult) {\n      return isPrev ? { boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})` } : {};\n    }\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})`,\n      };\n    }\n\n    return {};\n  }\n\n  render() {\n    const {\n      popout, modal, platform,\n      activePanel: _1, splitCol, configProvider, history, id, nav,\n      onTransition, onSwipeBack, onSwipeBackStart, onSwipeBackCancel,\n      window, document, scroll,\n      ...restProps\n    } = this.props;\n    const { prevPanel, nextPanel, activePanel, swipeBackPrevPanel, swipeBackNextPanel, swipeBackResult } = this.state;\n\n    const hasPopout = !!popout;\n    const hasModal = !!modal;\n\n    const panels = this.panels.filter((panel: React.ReactElement) => {\n      const panelId = getNavId(panel.props, warn);\n\n      return this.state.visiblePanels.includes(panelId) ||\n        panelId === swipeBackPrevPanel ||\n        panelId === swipeBackNextPanel;\n    });\n\n    const disableAnimation = this.shouldDisableTransitionMotion();\n\n    const modifiers = {\n      'View--animated': !disableAnimation && this.state.animated,\n      'View--swiping-back': !disableAnimation && this.state.swipingBack,\n      'View--no-motion': disableAnimation,\n    };\n\n    return (\n      <Touch\n        Component=\"section\"\n        {...restProps}\n        vkuiClass={classNames(getClassName('View', platform), modifiers)}\n        onMoveX={this.onMoveX}\n        onEnd={this.onEnd}\n      >\n        <div vkuiClass=\"View__panels\">\n          {panels.map((panel: React.ReactElement) => {\n            const panelId = getNavId(panel.props, warn);\n\n            return (\n              <div\n                vkuiClass={classNames('View__panel', {\n                  'View__panel--active': panelId === activePanel,\n                  'View__panel--prev': panelId === prevPanel,\n                  'View__panel--next': panelId === nextPanel,\n                  'View__panel--swipe-back-prev': panelId === swipeBackPrevPanel,\n                  'View__panel--swipe-back-next': panelId === swipeBackNextPanel,\n                  'View__panel--swipe-back-success': swipeBackResult === SwipeBackResults.success,\n                  'View__panel--swipe-back-failed': swipeBackResult === SwipeBackResults.fail,\n                })}\n                ref={(el) => this.panelNodes[panelId] = el}\n                data-vkui-active-panel={panelId === activePanel ? 'true' : ''}\n                style={this.calcPanelSwipeStyles(panelId)}\n                key={panelId}\n              >\n                <div vkuiClass=\"View__panel-in\">\n                  {panel}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <AppRootPortal>\n          {hasPopout && <div vkuiClass=\"View__popout\">{popout}</div>}\n          {hasModal && <div vkuiClass=\"View__modal\">{modal}</div>}\n        </AppRootPortal>\n      </Touch>\n    );\n  }\n}\n\nexport default withContext(withContext(\n  withContext(\n    withPlatform(withDOM<ViewProps>(View)),\n    SplitColContext, 'splitCol'),\n  ConfigProviderContext, 'configProvider'),\nScrollContext, 'scroll');\n"]},"metadata":{},"sourceType":"module"}