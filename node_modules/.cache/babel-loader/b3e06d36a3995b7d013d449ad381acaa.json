{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/typeof\";\nexport function classNames() {\n  var result = [];\n\n  for (var i = 0; i < arguments.length; i++) {\n    var item = arguments[i];\n\n    if (!item) {\n      continue;\n    }\n\n    switch (_typeof(item)) {\n      case 'string':\n        result.push(item);\n        break;\n\n      case 'object':\n        for (var key in item) {\n          if (item[key]) {\n            result.push(key);\n          }\n        }\n\n        break;\n\n      default:\n        result.push(\"\".concat(item));\n    }\n  }\n\n  return result.length > 1 ? result : result[0] || '';\n}\nexport function classNamesString() {\n  var res = classNames.apply(void 0, arguments);\n  return typeof res === 'string' ? res : res.join(' ');\n}","map":{"version":3,"sources":["../../src/lib/classNames.ts"],"names":["result","i","arguments","item","res","classNames"],"mappings":";AAOA,OAAO,SAAA,UAAA,GAAsB;AAC3B,MAAIA,MAAgB,GAApB,EAAA;;AAEA,OAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,SAAS,CAA7B,MAAA,EAAsCD,CAAtC,EAAA,EAA2C;AACzC,QAAME,IAAI,GAAGD,SAAS,CAAtB,CAAsB,CAAtB;;AACA,QAAI,CAAJ,IAAA,EAAW;AACT;AACD;;AACD,YAAA,OAAA,CAAA,IAAA,CAAA;AACE,WAAA,QAAA;AACEF,QAAAA,MAAM,CAANA,IAAAA,CAAAA,IAAAA;AACA;;AACF,WAAA,QAAA;AACE,aAAK,IAAL,GAAA,IAAA,IAAA,EAAsB;AACpB,cAAIG,IAAI,CAAR,GAAQ,CAAR,EAAe;AACbH,YAAAA,MAAM,CAANA,IAAAA,CAAAA,GAAAA;AACD;AACF;;AACD;;AACF;AACEA,QAAAA,MAAM,CAANA,IAAAA,CAAAA,GAAAA,MAAAA,CAAAA,IAAAA,CAAAA;AAZJ;AAcD;;AAED,SAAOA,MAAM,CAANA,MAAAA,GAAAA,CAAAA,GAAAA,MAAAA,GAA6BA,MAAM,CAANA,CAAM,CAANA,IAApC,EAAA;AACD;AAED,OAAO,SAAA,gBAAA,GAAgD;AACrD,MAAMI,GAAG,GAAGC,UAAU,CAAVA,KAAAA,CAAAA,KAAAA,CAAAA,EAAZ,SAAYA,CAAZ;AACA,SAAO,OAAA,GAAA,KAAA,QAAA,GAAA,GAAA,GAAgCD,GAAG,CAAHA,IAAAA,CAAvC,GAAuCA,CAAvC;AACD","sourcesContent":["export interface ObjectClassNames {\n  [index: string]: boolean | undefined | null;\n}\n\nexport type ClassName = number | string | ObjectClassNames | false | null | undefined;\n\nexport function classNames(...classnames: ClassName[]): string | string[];\nexport function classNames() {\n  let result: string[] = [];\n\n  for (let i = 0; i < arguments.length; i++) {\n    const item = arguments[i];\n    if (!item) {\n      continue;\n    }\n    switch (typeof item) {\n      case 'string':\n        result.push(item);\n        break;\n      case 'object':\n        for (let key in item) {\n          if (item[key]) {\n            result.push(key);\n          }\n        }\n        break;\n      default:\n        result.push(`${item}`);\n    }\n  }\n\n  return result.length > 1 ? result : result[0] || '';\n}\n\nexport function classNamesString(...args: ClassName[]) {\n  const res = classNames(...args);\n  return typeof res === 'string' ? res : res.join(' ');\n}\n"]},"metadata":{},"sourceType":"module"}