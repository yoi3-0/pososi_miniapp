{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport React from 'react';\nimport { Icon28ChevronBack, Icon28ChevronLeftOutline, Icon28ArrowLeftOutline } from '@vkontakte/icons';\nimport { PanelHeaderButton } from \"../PanelHeaderButton/PanelHeaderButton\";\nimport { ANDROID, VKCOM, IOS } from \"../../lib/platform\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { withAdaptivity, SizeType } from \"../../hoc/withAdaptivity\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\n\nvar PanelHeaderBack = function PanelHeaderBack(_ref) {\n  var label = _ref.label,\n      sizeX = _ref.sizeX,\n      restProps = _objectWithoutProperties(_ref, [\"label\", \"sizeX\"]);\n\n  var platform = usePlatform();\n  var showLabel = platform === VKCOM || platform === IOS && sizeX === SizeType.REGULAR;\n  return createScopedElement(PanelHeaderButton, _extends({}, restProps, {\n    vkuiClass: classNames(getClassName('PanelHeaderBack', platform), {\n      'PanelHeaderBack--has-label': showLabel && !!label\n    }),\n    label: showLabel && label\n  }), platform === ANDROID && createScopedElement(Icon28ArrowLeftOutline, null), platform === VKCOM && createScopedElement(Icon28ChevronLeftOutline, null), platform === IOS && createScopedElement(Icon28ChevronBack, null));\n};\n\nPanelHeaderBack.defaultProps = {\n  'aria-label': 'Назад'\n};\nexport default /*#__PURE__*/React.memo(withAdaptivity(PanelHeaderBack, {\n  sizeX: true\n}));","map":{"version":3,"sources":["../../../src/components/PanelHeaderBack/PanelHeaderBack.tsx"],"names":["PanelHeaderBack","label","sizeX","restProps","platform","usePlatform","showLabel","SizeType","classNames","getClassName","withAdaptivity"],"mappings":";;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,iBAAA,EAAA,wBAAA,EAAA,sBAAA,QAAA,kBAAA;AACA,SAAA,iBAAA,QAAA,wCAAA;AACA,SAAA,OAAA,EAAA,KAAA,EAAA,GAAA,QAAA,oBAAA;AACA,SAAA,WAAA,QAAA,yBAAA;AACA,SAAA,cAAA,EAAA,QAAA,QAAA,0BAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,UAAA,QAAA,sBAAA;;AAMA,IAAMA,eAAwD,GAAG,SAA3DA,eAA2D,CAAA,IAAA,EAA8E;AAAA,MAA3EC,KAA2E,GAAA,IAAA,CAA3EA,KAA2E;AAAA,MAApEC,KAAoE,GAAA,IAAA,CAApEA,KAAoE;AAAA,MAA1DC,SAA0D,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;AAC7I,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;AACA,MAAMC,SAAS,GAAGF,QAAQ,KAARA,KAAAA,IAAsBA,QAAQ,KAARA,GAAAA,IAAoBF,KAAK,KAAKK,QAAQ,CAA9E,OAAA;AAEA,SACE,mBAAA,CAAA,iBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,SAAS,EAAEC,UAAU,CAACC,YAAY,CAAA,iBAAA,EAAb,QAAa,CAAb,EAA4C;AAC/D,oCAA8BH,SAAS,IAAI,CAAC,CAACL;AADkB,KAA5C,CAFvB;AAKE,IAAA,KAAK,EAAEK,SAAS,IAAIL;AALtB,GAAA,CAAA,EAOGG,QAAQ,KAARA,OAAAA,IAAwB,mBAAA,CAAA,sBAAA,EAP3B,IAO2B,CAP3B,EAQGA,QAAQ,KAARA,KAAAA,IAAsB,mBAAA,CAAA,wBAAA,EARzB,IAQyB,CARzB,EASGA,QAAQ,KAARA,GAAAA,IAAoB,mBAAA,CAAA,iBAAA,EAVzB,IAUyB,CATvB,CADF;AAJF,CAAA;;AAmBAJ,eAAe,CAAfA,YAAAA,GAA+B;AAC7B,gBAAc;AADe,CAA/BA;AAIA,eAAA,aAAe,KAAK,CAAL,IAAA,CAAWU,cAAc,CAAA,eAAA,EAAkB;AACxDR,EAAAA,KAAK,EAAE;AADiD,CAAlB,CAAzB,CAAf","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { Icon28ChevronBack, Icon28ChevronLeftOutline, Icon28ArrowLeftOutline } from '@vkontakte/icons';\nimport { PanelHeaderButton, PanelHeaderButtonProps } from '../PanelHeaderButton/PanelHeaderButton';\nimport { ANDROID, VKCOM, IOS } from '../../lib/platform';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { withAdaptivity, SizeType, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\n\nexport type PanelHeaderBackProps = PanelHeaderButtonProps & AdaptivityProps & {\n  'aria-label'?: string;\n};\n\nconst PanelHeaderBack: FunctionComponent<PanelHeaderBackProps> = ({ label, sizeX, ...restProps }: PanelHeaderButtonProps & AdaptivityProps) => {\n  const platform = usePlatform();\n  const showLabel = platform === VKCOM || platform === IOS && sizeX === SizeType.REGULAR;\n\n  return (\n    <PanelHeaderButton\n      {...restProps}\n      vkuiClass={classNames(getClassName('PanelHeaderBack', platform), {\n        'PanelHeaderBack--has-label': showLabel && !!label,\n      })}\n      label={showLabel && label}\n    >\n      {platform === ANDROID && <Icon28ArrowLeftOutline />}\n      {platform === VKCOM && <Icon28ChevronLeftOutline />}\n      {platform === IOS && <Icon28ChevronBack />}\n    </PanelHeaderButton>\n  );\n};\n\nPanelHeaderBack.defaultProps = {\n  'aria-label': 'Назад',\n};\n\nexport default React.memo(withAdaptivity(PanelHeaderBack, {\n  sizeX: true,\n}));\n"]},"metadata":{},"sourceType":"module"}