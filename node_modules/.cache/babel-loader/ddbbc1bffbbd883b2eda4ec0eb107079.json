{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { useMemo } from 'react';\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport Touch from \"../Touch/Touch\";\nimport { TooltipContainer } from \"../Tooltip/TooltipContainer\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { PanelContext } from \"./PanelContext\";\nimport { IOS } from \"../../lib/platform\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nvar warn = warnOnce('Panel');\n\nvar PanelComponent = function PanelComponent(props) {\n  var centered = props.centered,\n      children = props.children,\n      getRootRef = props.getRootRef,\n      sizeX = props.sizeX,\n      nav = props.nav,\n      restProps = _objectWithoutProperties(props, [\"centered\", \"children\", \"getRootRef\", \"sizeX\", \"nav\"]);\n\n  var platform = usePlatform();\n  var containerRef = useExternRef(getRootRef);\n  var navId = getNavId(props, warn);\n  var childContext = useMemo(function () {\n    return {\n      panel: navId,\n      getPanelNode: function getPanelNode() {\n        return containerRef.current;\n      }\n    };\n  }, [navId]);\n  return createScopedElement(PanelContext.Provider, {\n    value: childContext\n  }, createScopedElement(\"div\", _extends({}, restProps, {\n    ref: containerRef,\n    vkuiClass: classNames(getClassName('Panel', platform), \"Panel--\".concat(sizeX), _defineProperty({\n      'Panel--centered': centered\n    }, \"Panel--sizeX-\".concat(sizeX), true))\n  }), createScopedElement(Touch, {\n    Component: TooltipContainer,\n    vkuiClass: \"Panel__in\"\n  }, platform === IOS && createScopedElement(\"div\", {\n    vkuiClass: \"Panel__fade\"\n  }), createScopedElement(\"div\", {\n    vkuiClass: \"Panel__in-before\"\n  }), centered ? createScopedElement(\"div\", {\n    vkuiClass: \"Panel__centered\"\n  }, children) : children, createScopedElement(\"div\", {\n    vkuiClass: \"Panel__in-after\"\n  }))));\n};\n\nPanelComponent.displayName = 'Panel';\nPanelComponent.defaultProps = {\n  children: '',\n  centered: false\n};\nexport var Panel = withAdaptivity(PanelComponent, {\n  sizeX: true\n});","map":{"version":3,"sources":["../../../src/components/Panel/Panel.tsx"],"names":["warn","warnOnce","PanelComponent","centered","children","getRootRef","sizeX","nav","restProps","props","platform","usePlatform","containerRef","useExternRef","navId","getNavId","childContext","useMemo","panel","getPanelNode","classNames","getClassName","Panel","withAdaptivity"],"mappings":"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","sourcesContent":["import { FC, HTMLAttributes, useMemo } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport Touch from '../Touch/Touch';\nimport { TooltipContainer } from '../Tooltip/TooltipContainer';\nimport { HasRootRef } from '../../types';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport { PanelContext, PanelContextProps } from './PanelContext';\nimport { IOS } from '../../lib/platform';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { getNavId, NavIdProps } from '../../lib/getNavId';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { warnOnce } from '../../lib/warnOnce';\n\nexport interface PanelProps extends HTMLAttributes<HTMLDivElement>,\n  HasRootRef<HTMLDivElement>, AdaptivityProps, NavIdProps {\n  centered?: boolean;\n}\n\nconst warn = warnOnce('Panel');\nconst PanelComponent: FC<PanelProps> = (props: PanelProps) => {\n  const { centered, children, getRootRef, sizeX, nav, ...restProps } = props;\n\n  const platform = usePlatform();\n  const containerRef = useExternRef(getRootRef);\n\n  const navId = getNavId(props, warn);\n\n  const childContext = useMemo<PanelContextProps>(() => {\n    return {\n      panel: navId,\n      getPanelNode: () => containerRef.current,\n    };\n  }, [navId]);\n\n  return (\n    <PanelContext.Provider value={childContext}>\n      <div\n        {...restProps}\n        ref={containerRef}\n        vkuiClass={classNames(getClassName('Panel', platform), `Panel--${sizeX}`, {\n          'Panel--centered': centered,\n          [`Panel--sizeX-${sizeX}`]: true,\n        })}\n      >\n        <Touch Component={TooltipContainer} vkuiClass=\"Panel__in\">\n          {platform === IOS && <div vkuiClass=\"Panel__fade\" />}\n          <div vkuiClass=\"Panel__in-before\" />\n          {centered ? <div vkuiClass=\"Panel__centered\">{children}</div> : children}\n          <div vkuiClass=\"Panel__in-after\" />\n        </Touch>\n      </div>\n    </PanelContext.Provider>\n  );\n};\n\nPanelComponent.displayName = 'Panel';\n\nPanelComponent.defaultProps = {\n  children: '',\n  centered: false,\n};\n\nexport const Panel = withAdaptivity(PanelComponent, {\n  sizeX: true,\n});\n"]},"metadata":{},"sourceType":"module"}