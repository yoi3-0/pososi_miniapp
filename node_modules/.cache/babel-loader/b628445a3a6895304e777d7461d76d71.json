{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 16 16';\nvar id = 'wind_rain_16';\nvar content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"wind_rain_16\"><path clip-rule=\"evenodd\" d=\"M4.5 2.5c-.846 0-1.553.6-1.715 1.4a.75.75 0 01-1.47-.3A3.25 3.25 0 114.5 7.5H1.75a.75.75 0 010-1.5H4.5a1.75 1.75 0 100-3.5zm5.535 3.9a1.75 1.75 0 111.715 2.1h-10a.75.75 0 000 1.5h10a3.25 3.25 0 10-3.185-3.9.75.75 0 001.47.3zm-.548 5.139a.75.75 0 01.474.948l-.666 2a.75.75 0 01-1.423-.474l.666-2a.75.75 0 01.95-.474zm-3 0a.75.75 0 01.475.948l-1 3a.75.75 0 01-1.424-.474l1-3a.75.75 0 01.95-.474z\" fill=\"currentColor\" fill-rule=\"evenodd\" /></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon16WindRain = function Icon16WindRain(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 16,\n    height: !isNaN(props.height) ? +props.height : 16\n  }));\n};\n\nIcon16WindRain.mountIcon = mountIcon;\nexport default Icon16WindRain;","map":{"version":3,"sources":["../../../tmp/16/wind_rain.ts"],"names":["viewBox","id","content","isMounted","addSpriteSymbol","Icon16WindRain","useIsomorphicLayoutEffect","mountIcon","assign","width","isNaN","props","height"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA,C,CACA;;AACA,OAAA,aAAA,MAAA,kCAAA,C,CACA;;AACA,SAAA,MAAA,QAAA,mBAAA;AACA,SAAA,eAAA,EAAA,yBAAA,QAAA,WAAA;AACA,SAAA,OAAA,QAAA,YAAA;AAEA,IAAMA,OAAO,GAAb,WAAA;AACA,IAAMC,EAAE,GAAR,cAAA;AACA,IAAMC,OAAO,GAAb,0jBAAA;AAEA,IAAIC,SAAS,GAAb,KAAA;;AACA,SAAA,SAAA,GAAqB;AACnB,MAAI,CAAJ,SAAA,EAAgB;AACdC,IAAAA,eAAe,CAAC,IAAA,aAAA,CAAkB;AAChCH,MAAAA,EAAE,EAD8B,EAAA;AAEhCD,MAAAA,OAAO,EAFyB,OAAA;AAGhCE,MAAAA,OAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfE;AAMAD,IAAAA,SAAS,GAATA,IAAAA;AACD;AACF;;AASD,IAAME,cAAuC,GAAG,SAA1CA,cAA0C,CAAA,KAAA,EAAW;AACzDC,EAAAA,yBAAyB,CAAC,YAAM;AAC9BC,IAAAA,SAAS;AADc,GAAA,EAAzBD,EAAyB,CAAzBA;AAIA,SAAA,aAAO,KAAK,CAAL,aAAA,CAAA,OAAA,EAA6BE,MAAM,CAAA,EAAA,EAAA,KAAA,EAAY;AACpDR,IAAAA,OAAO,EAD6C,OAAA;AAEpDC,IAAAA,EAAE,EAFkD,EAAA;AAGpDQ,IAAAA,KAAK,EAAE,CAACC,KAAK,CAACC,KAAK,CAAZ,KAAM,CAAN,GAAsB,CAACA,KAAK,CAA5B,KAAA,GAH6C,EAAA;AAIpDC,IAAAA,MAAM,EAAE,CAACF,KAAK,CAACC,KAAK,CAAZ,MAAM,CAAN,GAAuB,CAACA,KAAK,CAA7B,MAAA,GAAuC;AAJK,GAAZ,CAAnC,CAAP;AALF,CAAA;;AAaCN,cAAD,CAAA,SAACA,GAAD,SAACA;AAED,eAAA,cAAA","sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 16 16';\nconst id = 'wind_rain_16';\nconst content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"wind_rain_16\"><path clip-rule=\"evenodd\" d=\"M4.5 2.5c-.846 0-1.553.6-1.715 1.4a.75.75 0 01-1.47-.3A3.25 3.25 0 114.5 7.5H1.75a.75.75 0 010-1.5H4.5a1.75 1.75 0 100-3.5zm5.535 3.9a1.75 1.75 0 111.715 2.1h-10a.75.75 0 000 1.5h10a3.25 3.25 0 10-3.185-3.9.75.75 0 001.47.3zm-.548 5.139a.75.75 0 01.474.948l-.666 2a.75.75 0 01-1.423-.474l.666-2a.75.75 0 01.95-.474zm-3 0a.75.75 0 01.475.948l-1 3a.75.75 0 01-1.424-.474l1-3a.75.75 0 01.95-.474z\" fill=\"currentColor\" fill-rule=\"evenodd\" /></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon16WindRainProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon16WindRain: FC<Icon16WindRainProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 16,\n    height: !isNaN(props.height) ? +props.height : 16,\n  }));\n};\n\n(Icon16WindRain as any).mountIcon = mountIcon;\n\nexport default Icon16WindRain;\n"]},"metadata":{},"sourceType":"module"}