{"ast":null,"code":"import { isIOS, isIPadOS } from './IOSDetections';\nimport { canUseDOM } from './dom';\nvar hasMouse;\nvar hasTouchEvents;\nvar hasHover;\nvar hasTouch;\n\nif (canUseDOM) {\n  if (isIOS && !isIPadOS) {\n    hasMouse = false;\n    hasHover = false;\n    hasTouchEvents = true;\n    hasTouch = true;\n  } else {\n    hasTouchEvents = 'ontouchstart' in document;\n    hasTouch = hasTouchEvents || 'maxTouchPoints' in navigator && navigator.maxTouchPoints > 0;\n\n    if (hasTouch) {\n      var notMobile = !/android|mobile|tablet/i.test(navigator.userAgent);\n      hasMouse = window.matchMedia && matchMedia('(pointer)').matches ? matchMedia('(pointer: fine)').matches : notMobile;\n      hasHover = hasMouse && (window.matchMedia && matchMedia('(hover)').matches ? matchMedia('(hover: hover)').matches : notMobile);\n    } else {\n      hasMouse = true;\n      hasHover = true;\n    }\n  }\n} else {\n  hasMouse = false;\n  hasTouchEvents = false;\n  hasHover = false;\n  hasTouch = false;\n}\n\nexport { hasMouse, hasHover, hasTouchEvents, hasTouch };","map":{"version":3,"sources":["../../src/InputUtils.ts"],"names":["isIOS","hasMouse","hasHover","hasTouchEvents","hasTouch","navigator","notMobile","window","matchMedia"],"mappings":"AAAA,SAAA,KAAA,EAAA,QAAA,QAAA,iBAAA;AACA,SAAA,SAAA,QAAA,OAAA;AAEA,IAAA,QAAA;AACA,IAAA,cAAA;AACA,IAAA,QAAA;AACA,IAAA,QAAA;;AAEA,IAAA,SAAA,EAAe;AACb,MAAIA,KAAK,IAAI,CAAb,QAAA,EAAwB;AACtBC,IAAAA,QAAQ,GAARA,KAAAA;AACAC,IAAAA,QAAQ,GAARA,KAAAA;AACAC,IAAAA,cAAc,GAAdA,IAAAA;AACAC,IAAAA,QAAQ,GAARA,IAAAA;AAJF,GAAA,MAKO;AACLD,IAAAA,cAAc,GAAG,kBAAjBA,QAAAA;AACAC,IAAAA,QAAQ,GAAGD,cAAc,IACtB,oBAAA,SAAA,IAAiCE,SAAS,CAATA,cAAAA,GADpCD,CAAAA;;AAGA,QAAA,QAAA,EAAc;AACZ,UAAME,SAAS,GAAG,CAAC,yBAAA,IAAA,CAA8BD,SAAS,CAA1D,SAAmB,CAAnB;AAEAJ,MAAAA,QAAQ,GAAGM,MAAM,CAANA,UAAAA,IAAqBC,UAAU,CAAVA,WAAU,CAAVA,CAArBD,OAAAA,GACTC,UAAU,CAAVA,iBAAU,CAAVA,CADSD,OAAAA,GAAXN,SAAAA;AAGAC,MAAAA,QAAQ,GAAGD,QAAQ,KAAKM,MAAM,CAANA,UAAAA,IAAqBC,UAAU,CAAVA,SAAU,CAAVA,CAArBD,OAAAA,GACtBC,UAAU,CAAVA,gBAAU,CAAVA,CADsBD,OAAAA,GAAxBL,SAAmB,CAAnBA;AANF,KAAA,MAQO;AACLD,MAAAA,QAAQ,GAARA,IAAAA;AACAC,MAAAA,QAAQ,GAARA,IAAAA;AACD;AACF;AAvBH,CAAA,MAwBO;AACLD,EAAAA,QAAQ,GAARA,KAAAA;AACAE,EAAAA,cAAc,GAAdA,KAAAA;AACAD,EAAAA,QAAQ,GAARA,KAAAA;AACAE,EAAAA,QAAQ,GAARA,KAAAA;AACD;;AAED,SAAA,QAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA","sourcesContent":["import { isIOS, isIPadOS } from './IOSDetections';\nimport { canUseDOM } from './dom';\n\nlet hasMouse: boolean;\nlet hasTouchEvents: boolean;\nlet hasHover: boolean;\nlet hasTouch: boolean;\n\nif (canUseDOM) {\n  if (isIOS && !isIPadOS) {\n    hasMouse = false;\n    hasHover = false;\n    hasTouchEvents = true;\n    hasTouch = true;\n  } else {\n    hasTouchEvents = 'ontouchstart' in document;\n    hasTouch = hasTouchEvents ||\n      ('maxTouchPoints' in navigator && navigator.maxTouchPoints > 0);\n\n    if (hasTouch) {\n      const notMobile = !/android|mobile|tablet/i.test(navigator.userAgent);\n\n      hasMouse = window.matchMedia && matchMedia('(pointer)').matches ?\n        matchMedia('(pointer: fine)').matches : notMobile;\n\n      hasHover = hasMouse && (window.matchMedia && matchMedia('(hover)').matches ?\n        matchMedia('(hover: hover)').matches : notMobile);\n    } else {\n      hasMouse = true;\n      hasHover = true;\n    }\n  }\n} else {\n  hasMouse = false;\n  hasTouchEvents = false;\n  hasHover = false;\n  hasTouch = false;\n}\n\nexport { hasMouse, hasHover, hasTouchEvents, hasTouch };\n"]},"metadata":{},"sourceType":"module"}