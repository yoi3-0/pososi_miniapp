{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 20 20';\nvar id = 'hand_20';\nvar content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" id=\"hand_20\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.9 2.325a.825.825 0 011.65 0v7.284a.4.4 0 00.8-.009V3.825a.825.825 0 111.65 0v9.803a12.65 12.65 0 001.51-2.089c.285-.486.91-.688 1.404-.416.4.22.591.686.429 1.113C16.658 14.031 14.595 18.5 11 18.5c-1.86-.006-2.878-.055-3.68-.463a4.25 4.25 0 01-1.857-1.857c-.346-.68-.434-1.518-.456-2.894A.834.834 0 015 13.175v-7.85a.825.825 0 111.65 0V10.1a.4.4 0 00.8.003V3.075a.825.825 0 111.65 0v6.53a.4.4 0 00.8-.005V2.325z\" fill=\"currentColor\" /></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon20Hand = function Icon20Hand(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 20,\n    height: !isNaN(props.height) ? +props.height : 20\n  }));\n};\n\nIcon20Hand.mountIcon = mountIcon;\nexport default Icon20Hand;","map":{"version":3,"sources":["../../../tmp/20/hand.ts"],"names":["viewBox","id","content","isMounted","addSpriteSymbol","Icon20Hand","useIsomorphicLayoutEffect","mountIcon","assign","width","isNaN","props","height"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA,C,CACA;;AACA,OAAA,aAAA,MAAA,kCAAA,C,CACA;;AACA,SAAA,MAAA,QAAA,mBAAA;AACA,SAAA,eAAA,EAAA,yBAAA,QAAA,WAAA;AACA,SAAA,OAAA,QAAA,YAAA;AAEA,IAAMA,OAAO,GAAb,WAAA;AACA,IAAMC,EAAE,GAAR,SAAA;AACA,IAAMC,OAAO,GAAb,ykBAAA;AAEA,IAAIC,SAAS,GAAb,KAAA;;AACA,SAAA,SAAA,GAAqB;AACnB,MAAI,CAAJ,SAAA,EAAgB;AACdC,IAAAA,eAAe,CAAC,IAAA,aAAA,CAAkB;AAChCH,MAAAA,EAAE,EAD8B,EAAA;AAEhCD,MAAAA,OAAO,EAFyB,OAAA;AAGhCE,MAAAA,OAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfE;AAMAD,IAAAA,SAAS,GAATA,IAAAA;AACD;AACF;;AASD,IAAME,UAA+B,GAAG,SAAlCA,UAAkC,CAAA,KAAA,EAAW;AACjDC,EAAAA,yBAAyB,CAAC,YAAM;AAC9BC,IAAAA,SAAS;AADc,GAAA,EAAzBD,EAAyB,CAAzBA;AAIA,SAAA,aAAO,KAAK,CAAL,aAAA,CAAA,OAAA,EAA6BE,MAAM,CAAA,EAAA,EAAA,KAAA,EAAY;AACpDR,IAAAA,OAAO,EAD6C,OAAA;AAEpDC,IAAAA,EAAE,EAFkD,EAAA;AAGpDQ,IAAAA,KAAK,EAAE,CAACC,KAAK,CAACC,KAAK,CAAZ,KAAM,CAAN,GAAsB,CAACA,KAAK,CAA5B,KAAA,GAH6C,EAAA;AAIpDC,IAAAA,MAAM,EAAE,CAACF,KAAK,CAACC,KAAK,CAAZ,MAAM,CAAN,GAAuB,CAACA,KAAK,CAA7B,MAAA,GAAuC;AAJK,GAAZ,CAAnC,CAAP;AALF,CAAA;;AAaCN,UAAD,CAAA,SAACA,GAAD,SAACA;AAED,eAAA,UAAA","sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 20 20';\nconst id = 'hand_20';\nconst content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" id=\"hand_20\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.9 2.325a.825.825 0 011.65 0v7.284a.4.4 0 00.8-.009V3.825a.825.825 0 111.65 0v9.803a12.65 12.65 0 001.51-2.089c.285-.486.91-.688 1.404-.416.4.22.591.686.429 1.113C16.658 14.031 14.595 18.5 11 18.5c-1.86-.006-2.878-.055-3.68-.463a4.25 4.25 0 01-1.857-1.857c-.346-.68-.434-1.518-.456-2.894A.834.834 0 015 13.175v-7.85a.825.825 0 111.65 0V10.1a.4.4 0 00.8.003V3.075a.825.825 0 111.65 0v6.53a.4.4 0 00.8-.005V2.325z\" fill=\"currentColor\" /></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon20HandProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon20Hand: FC<Icon20HandProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 20,\n    height: !isNaN(props.height) ? +props.height : 20,\n  }));\n};\n\n(Icon20Hand as any).mountIcon = mountIcon;\n\nexport default Icon20Hand;\n"]},"metadata":{},"sourceType":"module"}