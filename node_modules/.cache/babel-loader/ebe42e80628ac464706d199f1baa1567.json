{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport React, { useRef } from 'react';\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { withAdaptivity, ViewWidth } from \"../../hoc/withAdaptivity\";\nimport { ScrollSaver } from \"./ScrollSaver\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nvar warn = warnOnce('Epic');\nexport var Epic = function Epic(props) {\n  var platform = usePlatform();\n  var scroll = useRef({}).current;\n\n  var activeStory = props.activeStory,\n      tabbar = props.tabbar,\n      children = props.children,\n      viewWidth = props.viewWidth,\n      restProps = _objectWithoutProperties(props, [\"activeStory\", \"tabbar\", \"children\", \"viewWidth\"]);\n\n  if (process.env.NODE_ENV === 'development' && !tabbar && viewWidth < ViewWidth.SMALL_TABLET) {\n    warn('Using Epic without tabbar is not recommended on mobile');\n  }\n\n  var story = React.Children.toArray(children).find(function (story) {\n    return getNavId(story.props, warn) === activeStory;\n  }) || null;\n  return createScopedElement(\"div\", _extends({}, restProps, {\n    vkuiClass: getClassName('Epic', platform)\n  }), createScopedElement(ScrollSaver, {\n    key: activeStory,\n    initialScroll: scroll[activeStory] || 0,\n    saveScroll: function saveScroll(value) {\n      return scroll[activeStory] = value;\n    }\n  }, story), tabbar);\n};\nexport default withAdaptivity(Epic, {\n  viewWidth: true\n});","map":{"version":3,"sources":["../../../src/components/Epic/Epic.tsx"],"names":["warn","warnOnce","Epic","platform","usePlatform","scroll","useRef","activeStory","tabbar","children","viewWidth","restProps","props","process","ViewWidth","story","React","getNavId","getClassName","withAdaptivity"],"mappings":";;;AAAA,OAAA,KAAA,IAAA,MAAA,QAAA,OAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,WAAA,QAAA,yBAAA;AACA,SAAA,cAAA,EAAA,SAAA,QAAA,0BAAA;AACA,SAAA,WAAA,QAAA,eAAA;AACA,SAAA,QAAA,QAAA,oBAAA;AACA,SAAA,QAAA,QAAA,oBAAA;AAOA,IAAMA,IAAI,GAAGC,QAAQ,CAArB,MAAqB,CAArB;AAEA,OAAO,IAAMC,IAAmB,GAAG,SAAtBA,IAAsB,CAAA,KAAA,EAAsB;AACvD,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;AACA,MAAMC,MAAM,GAAGC,MAAM,CAANA,EAAM,CAANA,CAAf,OAAA;;AAFuD,MAG/CC,WAH+C,GAGYK,KAHZ,CAAA,WAAA;AAAA,MAGlCJ,MAHkC,GAGYI,KAHZ,CAAA,MAAA;AAAA,MAG1BH,QAH0B,GAGYG,KAHZ,CAAA,QAAA;AAAA,MAGhBF,SAHgB,GAGYE,KAHZ,CAAA,SAAA;AAAA,MAGFD,SAHE,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,UAAA,EAAA,WAAA,CAAA,CAAA;;AAKvD,MAAIE,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAAA,aAAAA,IAA0C,CAA1CA,MAAAA,IAAqDH,SAAS,GAAGI,SAAS,CAA9E,YAAA,EAA6F;AAC3Fd,IAAAA,IAAI,CAAJA,wDAAI,CAAJA;AACD;;AACD,MAAMe,KAAK,GAAIC,KAAK,CAALA,QAAAA,CAAAA,OAAAA,CAAD,QAACA,EAAD,IAACA,CACP,UAAA,KAAA,EAAA;AAAA,WAAWC,QAAQ,CAACF,KAAK,CAAN,KAAA,EAARE,IAAQ,CAARA,KAAX,WAAA;AADM,GAACD,KAAf,IAAA;AAGA,SACE,mBAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAAoB,IAAA,SAAS,EAAEE,YAAY,CAAA,MAAA,EAAA,QAAA;AAA3C,GAAA,CAAA,EACE,mBAAA,CAAA,WAAA,EAAA;AACE,IAAA,GAAG,EADL,WAAA;AAEE,IAAA,aAAa,EAAEb,MAAM,CAANA,WAAM,CAANA,IAFjB,CAAA;AAGE,IAAA,UAAU,EAAE,SAAA,UAAA,CAAA,KAAA,EAAA;AAAA,aAAWA,MAAM,CAANA,WAAM,CAANA,GAAX,KAAA;AAAA;AAHd,GAAA,EADF,KACE,CADF,EADF,MACE,CADF;AAXK,CAAA;AAuBP,eAAec,cAAc,CAAA,IAAA,EAAO;AAClCT,EAAAA,SAAS,EAAE;AADuB,CAAP,CAA7B","sourcesContent":["import React, { HTMLAttributes, ReactNode, ReactElement, FC, useRef } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { withAdaptivity, ViewWidth, AdaptivityProps } from '../../hoc/withAdaptivity';\nimport { ScrollSaver } from './ScrollSaver';\nimport { getNavId } from '../../lib/getNavId';\nimport { warnOnce } from '../../lib/warnOnce';\n\nexport interface EpicProps extends HTMLAttributes<HTMLDivElement>, AdaptivityProps {\n  tabbar?: ReactNode;\n  activeStory: string;\n}\n\nconst warn = warnOnce('Epic');\n\nexport const Epic: FC<EpicProps> = (props: EpicProps) => {\n  const platform = usePlatform();\n  const scroll = useRef<{ [key: string]: number }>({}).current;\n  const { activeStory, tabbar, children, viewWidth, ...restProps } = props;\n\n  if (process.env.NODE_ENV === 'development' && !tabbar && viewWidth < ViewWidth.SMALL_TABLET) {\n    warn('Using Epic without tabbar is not recommended on mobile');\n  }\n  const story = (React.Children.toArray(children) as ReactElement[])\n    .find((story) => getNavId(story.props, warn) === activeStory) || null;\n\n  return (\n    <div {...restProps} vkuiClass={getClassName('Epic', platform)}>\n      <ScrollSaver\n        key={activeStory}\n        initialScroll={scroll[activeStory] || 0}\n        saveScroll={(value) => scroll[activeStory] = value}\n      >{story}</ScrollSaver>\n      {tabbar}\n    </div>\n  );\n};\n\nexport default withAdaptivity(Epic, {\n  viewWidth: true,\n});\n"]},"metadata":{},"sourceType":"module"}