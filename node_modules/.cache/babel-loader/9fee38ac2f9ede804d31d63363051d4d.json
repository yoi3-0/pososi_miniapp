{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 24 24';\nvar id = 'thumb_up_24';\nvar content = '<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" id=\"thumb_up_24\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M6 10c0-1.5-.5-2-2-2H2v12h2c1.5 0 2-.5 2-2v-8zm2-.636c1.034-.52 1.867-1.31 2.5-2.364C12 4.5 12 2 13 1.5S15 2 15 4s-1 3.5-.5 4 3 0 5 0 2.5.5 2.5 1.5-.667 1.5-2 1.5c1 0 1.5.5 1.5 1.5s-.667 1.5-2 1.5c1 0 1.5.5 1.5 1.5s-.667 1.5-2 1.5c1 0 1.5.5 1.5 1.5S20 20 18 20c-5.145 0-5.477-.875-10-.988V9.364z\" /></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon24ThumbUp = function Icon24ThumbUp(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 24,\n    height: !isNaN(props.height) ? +props.height : 24\n  }));\n};\n\nIcon24ThumbUp.mountIcon = mountIcon;\nexport default Icon24ThumbUp;","map":{"version":3,"sources":["../../../tmp/24/thumb_up.ts"],"names":["viewBox","id","content","isMounted","addSpriteSymbol","Icon24ThumbUp","useIsomorphicLayoutEffect","mountIcon","assign","width","isNaN","props","height"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA,C,CACA;;AACA,OAAA,aAAA,MAAA,kCAAA,C,CACA;;AACA,SAAA,MAAA,QAAA,mBAAA;AACA,SAAA,eAAA,EAAA,yBAAA,QAAA,WAAA;AACA,SAAA,OAAA,QAAA,YAAA;AAEA,IAAMA,OAAO,GAAb,WAAA;AACA,IAAMC,EAAE,GAAR,aAAA;AACA,IAAMC,OAAO,GAAb,ubAAA;AAEA,IAAIC,SAAS,GAAb,KAAA;;AACA,SAAA,SAAA,GAAqB;AACnB,MAAI,CAAJ,SAAA,EAAgB;AACdC,IAAAA,eAAe,CAAC,IAAA,aAAA,CAAkB;AAChCH,MAAAA,EAAE,EAD8B,EAAA;AAEhCD,MAAAA,OAAO,EAFyB,OAAA;AAGhCE,MAAAA,OAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfE;AAMAD,IAAAA,SAAS,GAATA,IAAAA;AACD;AACF;;AASD,IAAME,aAAqC,GAAG,SAAxCA,aAAwC,CAAA,KAAA,EAAW;AACvDC,EAAAA,yBAAyB,CAAC,YAAM;AAC9BC,IAAAA,SAAS;AADc,GAAA,EAAzBD,EAAyB,CAAzBA;AAIA,SAAA,aAAO,KAAK,CAAL,aAAA,CAAA,OAAA,EAA6BE,MAAM,CAAA,EAAA,EAAA,KAAA,EAAY;AACpDR,IAAAA,OAAO,EAD6C,OAAA;AAEpDC,IAAAA,EAAE,EAFkD,EAAA;AAGpDQ,IAAAA,KAAK,EAAE,CAACC,KAAK,CAACC,KAAK,CAAZ,KAAM,CAAN,GAAsB,CAACA,KAAK,CAA5B,KAAA,GAH6C,EAAA;AAIpDC,IAAAA,MAAM,EAAE,CAACF,KAAK,CAACC,KAAK,CAAZ,MAAM,CAAN,GAAuB,CAACA,KAAK,CAA7B,MAAA,GAAuC;AAJK,GAAZ,CAAnC,CAAP;AALF,CAAA;;AAaCN,aAAD,CAAA,SAACA,GAAD,SAACA;AAED,eAAA,aAAA","sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 24 24';\nconst id = 'thumb_up_24';\nconst content = '<symbol xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" id=\"thumb_up_24\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M6 10c0-1.5-.5-2-2-2H2v12h2c1.5 0 2-.5 2-2v-8zm2-.636c1.034-.52 1.867-1.31 2.5-2.364C12 4.5 12 2 13 1.5S15 2 15 4s-1 3.5-.5 4 3 0 5 0 2.5.5 2.5 1.5-.667 1.5-2 1.5c1 0 1.5.5 1.5 1.5s-.667 1.5-2 1.5c1 0 1.5.5 1.5 1.5s-.667 1.5-2 1.5c1 0 1.5.5 1.5 1.5S20 20 18 20c-5.145 0-5.477-.875-10-.988V9.364z\" /></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon24ThumbUpProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon24ThumbUp: FC<Icon24ThumbUpProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 24,\n    height: !isNaN(props.height) ? +props.height : 24,\n  }));\n};\n\n(Icon24ThumbUp as any).mountIcon = mountIcon;\n\nexport default Icon24ThumbUp;\n"]},"metadata":{},"sourceType":"module"}