{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 24 24';\nvar id = 'airplay_video_outline_24';\nvar content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" id=\"airplay_video_outline_24\"><path d=\"M16.238 4.1H7.762c-.808 0-1.469 0-2.006.044-.556.045-1.058.142-1.527.381a3.9 3.9 0 00-1.704 1.704c-.239.47-.336.971-.381 1.527C2.1 8.293 2.1 8.954 2.1 9.762v1.476c0 .808 0 1.469.044 2.006.045.556.142 1.058.381 1.527a3.9 3.9 0 001.704 1.704c.285.145.583.238.899.299a.9.9 0 10.34-1.768 1.551 1.551 0 01-.421-.135 2.1 2.1 0 01-.918-.918c-.088-.172-.155-.411-.191-.856C3.9 12.642 3.9 12.055 3.9 11.2V9.8c0-.855 0-1.442.038-1.897.036-.445.103-.684.19-.856a2.1 2.1 0 01.919-.918c.172-.088.411-.155.856-.191C6.358 5.9 6.945 5.9 7.8 5.9h8.4c.855 0 1.442 0 1.897.038.445.036.683.103.856.19a2.1 2.1 0 01.918.919c.088.172.155.411.191.856.037.455.038 1.042.038 1.897v1.4c0 .855 0 1.442-.038 1.897-.036.445-.103.684-.19.856a2.1 2.1 0 01-.919.918 1.56 1.56 0 01-.425.136.9.9 0 00.337 1.768c.319-.06.618-.154.905-.3a3.9 3.9 0 001.705-1.705c.239-.468.336-.97.381-1.526.044-.537.044-1.198.044-2.006V9.762c0-.808 0-1.469-.044-2.006-.045-.556-.142-1.058-.381-1.527a3.9 3.9 0 00-1.705-1.704c-.468-.239-.97-.336-1.526-.381-.537-.044-1.198-.044-2.006-.044z\" fill=\"currentColor\" /><path d=\"M13.06 14.06a1.5 1.5 0 00-2.12 0l-4.233 4.233c-.63.63-.184 1.707.707 1.707h9.172c.89 0 1.337-1.077.707-1.707L13.06 14.06z\" fill=\"currentColor\" /></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon24AirplayVideoOutline = function Icon24AirplayVideoOutline(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 24,\n    height: !isNaN(props.height) ? +props.height : 24\n  }));\n};\n\nIcon24AirplayVideoOutline.mountIcon = mountIcon;\nexport default Icon24AirplayVideoOutline;","map":{"version":3,"sources":["../../../tmp/24/airplay_video_outline.ts"],"names":["viewBox","id","content","isMounted","addSpriteSymbol","Icon24AirplayVideoOutline","useIsomorphicLayoutEffect","mountIcon","assign","width","isNaN","props","height"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA,C,CACA;;AACA,OAAA,aAAA,MAAA,kCAAA,C,CACA;;AACA,SAAA,MAAA,QAAA,mBAAA;AACA,SAAA,eAAA,EAAA,yBAAA,QAAA,WAAA;AACA,SAAA,OAAA,QAAA,YAAA;AAEA,IAAMA,OAAO,GAAb,WAAA;AACA,IAAMC,EAAE,GAAR,0BAAA;AACA,IAAMC,OAAO,GAAb,yzCAAA;AAEA,IAAIC,SAAS,GAAb,KAAA;;AACA,SAAA,SAAA,GAAqB;AACnB,MAAI,CAAJ,SAAA,EAAgB;AACdC,IAAAA,eAAe,CAAC,IAAA,aAAA,CAAkB;AAChCH,MAAAA,EAAE,EAD8B,EAAA;AAEhCD,MAAAA,OAAO,EAFyB,OAAA;AAGhCE,MAAAA,OAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfE;AAMAD,IAAAA,SAAS,GAATA,IAAAA;AACD;AACF;;AASD,IAAME,yBAA6D,GAAG,SAAhEA,yBAAgE,CAAA,KAAA,EAAW;AAC/EC,EAAAA,yBAAyB,CAAC,YAAM;AAC9BC,IAAAA,SAAS;AADc,GAAA,EAAzBD,EAAyB,CAAzBA;AAIA,SAAA,aAAO,KAAK,CAAL,aAAA,CAAA,OAAA,EAA6BE,MAAM,CAAA,EAAA,EAAA,KAAA,EAAY;AACpDR,IAAAA,OAAO,EAD6C,OAAA;AAEpDC,IAAAA,EAAE,EAFkD,EAAA;AAGpDQ,IAAAA,KAAK,EAAE,CAACC,KAAK,CAACC,KAAK,CAAZ,KAAM,CAAN,GAAsB,CAACA,KAAK,CAA5B,KAAA,GAH6C,EAAA;AAIpDC,IAAAA,MAAM,EAAE,CAACF,KAAK,CAACC,KAAK,CAAZ,MAAM,CAAN,GAAuB,CAACA,KAAK,CAA7B,MAAA,GAAuC;AAJK,GAAZ,CAAnC,CAAP;AALF,CAAA;;AAaCN,yBAAD,CAAA,SAACA,GAAD,SAACA;AAED,eAAA,yBAAA","sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 24 24';\nconst id = 'airplay_video_outline_24';\nconst content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" id=\"airplay_video_outline_24\"><path d=\"M16.238 4.1H7.762c-.808 0-1.469 0-2.006.044-.556.045-1.058.142-1.527.381a3.9 3.9 0 00-1.704 1.704c-.239.47-.336.971-.381 1.527C2.1 8.293 2.1 8.954 2.1 9.762v1.476c0 .808 0 1.469.044 2.006.045.556.142 1.058.381 1.527a3.9 3.9 0 001.704 1.704c.285.145.583.238.899.299a.9.9 0 10.34-1.768 1.551 1.551 0 01-.421-.135 2.1 2.1 0 01-.918-.918c-.088-.172-.155-.411-.191-.856C3.9 12.642 3.9 12.055 3.9 11.2V9.8c0-.855 0-1.442.038-1.897.036-.445.103-.684.19-.856a2.1 2.1 0 01.919-.918c.172-.088.411-.155.856-.191C6.358 5.9 6.945 5.9 7.8 5.9h8.4c.855 0 1.442 0 1.897.038.445.036.683.103.856.19a2.1 2.1 0 01.918.919c.088.172.155.411.191.856.037.455.038 1.042.038 1.897v1.4c0 .855 0 1.442-.038 1.897-.036.445-.103.684-.19.856a2.1 2.1 0 01-.919.918 1.56 1.56 0 01-.425.136.9.9 0 00.337 1.768c.319-.06.618-.154.905-.3a3.9 3.9 0 001.705-1.705c.239-.468.336-.97.381-1.526.044-.537.044-1.198.044-2.006V9.762c0-.808 0-1.469-.044-2.006-.045-.556-.142-1.058-.381-1.527a3.9 3.9 0 00-1.705-1.704c-.468-.239-.97-.336-1.526-.381-.537-.044-1.198-.044-2.006-.044z\" fill=\"currentColor\" /><path d=\"M13.06 14.06a1.5 1.5 0 00-2.12 0l-4.233 4.233c-.63.63-.184 1.707.707 1.707h9.172c.89 0 1.337-1.077.707-1.707L13.06 14.06z\" fill=\"currentColor\" /></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon24AirplayVideoOutlineProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon24AirplayVideoOutline: FC<Icon24AirplayVideoOutlineProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 24,\n    height: !isNaN(props.height) ? +props.height : 24,\n  }));\n};\n\n(Icon24AirplayVideoOutline as any).mountIcon = mountIcon;\n\nexport default Icon24AirplayVideoOutline;\n"]},"metadata":{},"sourceType":"module"}