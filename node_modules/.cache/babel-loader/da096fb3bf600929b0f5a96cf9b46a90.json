{"ast":null,"code":"import { canUseDOM } from './dom';\nexport var IPHONE_SAFARI_BOTTOM_BAR = 45;\nexport var IPHONE_X_SAFARI_BOTTOM_BAR = 85;\nexport var IPHONE_KEYBOARD_REJECT_OFFSET = 180; // 44 iPhone, 55 iPad, iPad Pro 69\n\nexport var IOS_NO_KEYBOARD_ALLOWED_OFFSET = 70;\nexport function detectIOS(ua) {\n  if (!ua) {\n    ua = canUseDOM ? navigator.userAgent.toLowerCase() : '';\n  }\n\n  var isIPadOS = checkIPadOS(ua);\n  var isIPad = isIPadOS || ua.indexOf('ipad') !== -1;\n  var isIPhone = !isIPad && ua.search(/iphone|ipod/) !== -1;\n  var isIOS = isIPhone || isIPad;\n  var iosVersion = isIOS && ua.match(/OS ([\\d_]+) like Mac OS X/i);\n  var iosMajor = 0;\n  var iosMinor = 0;\n\n  if (isIPadOS) {\n    iosMajor = 13;\n    iosMinor = 0;\n  } else if (iosVersion) {\n    iosVersion = iosVersion[1].split('_');\n    iosMajor = +iosVersion[0];\n    iosMinor = +iosVersion[1];\n  }\n\n  iosVersion = null;\n  var isScrollBasedViewport = iosMajor < 13 && !(iosMajor === 11 && iosMinor < 3);\n  var isWKWebView = isIOS && checkWKWebView(ua);\n  var isIPhoneX = false;\n\n  if (canUseDOM) {\n    isIPhoneX = isIOS && screen.width === 375 && screen.height === 812 && window.devicePixelRatio === 3;\n  }\n\n  var isIOSChrome = ua.search(/crios/i) !== -1;\n  return {\n    isIPad: isIPad,\n    isIPhone: isIPhone,\n    isIOS: isIOS,\n    isIPadOS: isIPadOS,\n    iosMajor: iosMajor,\n    iosMinor: iosMinor,\n    isWKWebView: isWKWebView,\n    isScrollBasedViewport: isScrollBasedViewport,\n    isIPhoneX: isIPhoneX,\n    isIOSChrome: isIOSChrome\n  };\n}\n\nvar _detectIOS = detectIOS(),\n    isIPad = _detectIOS.isIPad,\n    isIPhone = _detectIOS.isIPhone,\n    isIOS = _detectIOS.isIOS,\n    isIPadOS = _detectIOS.isIPadOS,\n    iosMajor = _detectIOS.iosMajor,\n    iosMinor = _detectIOS.iosMinor,\n    isWKWebView = _detectIOS.isWKWebView,\n    isScrollBasedViewport = _detectIOS.isScrollBasedViewport,\n    isIPhoneX = _detectIOS.isIPhoneX,\n    isIOSChrome = _detectIOS.isIOSChrome;\n\nexport { isIPad, isIPhone, isIOS, isIPadOS, iosMajor, iosMinor, isWKWebView, isScrollBasedViewport, isIPhoneX, isIOSChrome };\nexport function isLandscapePhone() {\n  return Math.abs(window.orientation) === 90 && !isIPad;\n} // Reference:\n// https://stackoverflow.com/questions/28795476/detect-if-page-is-loaded-inside-wkwebview-in-javascript/30495399#30495399\n\nfunction checkWKWebView(ua) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  var webkit = window.webkit;\n\n  if (webkit && webkit.messageHandlers) {\n    return true;\n  }\n\n  var lte9 = /constructor/i.test(String(window.HTMLElement));\n  var idb = !!window.indexedDB;\n\n  if (ua.indexOf('safari') !== -1 && ua.indexOf('version') !== -1 && !navigator.standalone) {// Safari (WKWebView/Nitro since 6+)\n  } else if (!idb && lte9 || !(window.statusbar && window.statusbar.visible)) {// UIWebView\n  } else if (!lte9 || idb) {\n    // WKWebView\n    return true;\n  }\n\n  return false;\n}\n\nexport function checkIPadOS(ua) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  var notIOS = !/ipad|iphone|ipod/.test(ua);\n  var macOS = /mac os/.test(ua);\n\n  if (macOS && notIOS && typeof navigator.standalone === 'boolean') {\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["../../src/IOSDetections.ts"],"names":["IPHONE_SAFARI_BOTTOM_BAR","IPHONE_X_SAFARI_BOTTOM_BAR","IPHONE_KEYBOARD_REJECT_OFFSET","IOS_NO_KEYBOARD_ALLOWED_OFFSET","ua","canUseDOM","navigator","isIPadOS","checkIPadOS","isIPad","isIPhone","isIOS","iosVersion","iosMajor","iosMinor","isScrollBasedViewport","isWKWebView","checkWKWebView","isIPhoneX","screen","window","isIOSChrome","detectIOS","Math","webkit","lte9","String","idb","notIOS","macOS"],"mappings":"AAAA,SAAA,SAAA,QAAA,OAAA;AAEA,OAAO,IAAMA,wBAAwB,GAA9B,EAAA;AACP,OAAO,IAAMC,0BAA0B,GAAhC,EAAA;AAEP,OAAO,IAAMC,6BAA6B,GAAnC,GAAA,C,CAEP;;AACA,OAAO,IAAMC,8BAA8B,GAApC,EAAA;AAEP,OAAO,SAAA,SAAA,CAAA,EAAA,EAAgC;AACrC,MAAI,CAAJ,EAAA,EAAS;AACPC,IAAAA,EAAE,GAAGC,SAAS,GAAGC,SAAS,CAATA,SAAAA,CAAH,WAAGA,EAAH,GAAdF,EAAAA;AACD;;AAED,MAAMG,QAAQ,GAAGC,WAAW,CAA5B,EAA4B,CAA5B;AACA,MAAMC,MAAM,GAAGF,QAAQ,IAAIH,EAAE,CAAFA,OAAAA,CAAAA,MAAAA,MAAuB,CAAlD,CAAA;AACA,MAAMM,QAAQ,GAAG,CAAA,MAAA,IAAWN,EAAE,CAAFA,MAAAA,CAAAA,aAAAA,MAA6B,CAAzD,CAAA;AACA,MAAMO,KAAK,GAAGD,QAAQ,IAAtB,MAAA;AAEA,MAAIE,UAAU,GAAGD,KAAK,IAAIP,EAAE,CAAFA,KAAAA,CAA1B,4BAA0BA,CAA1B;AACA,MAAIS,QAAQ,GAAZ,CAAA;AACA,MAAIC,QAAQ,GAAZ,CAAA;;AAEA,MAAA,QAAA,EAAc;AACZD,IAAAA,QAAQ,GAARA,EAAAA;AACAC,IAAAA,QAAQ,GAARA,CAAAA;AAFF,GAAA,MAGO,IAAA,UAAA,EAAgB;AACrBF,IAAAA,UAAU,GAAGA,UAAU,CAAVA,CAAU,CAAVA,CAAAA,KAAAA,CAAbA,GAAaA,CAAbA;AACAC,IAAAA,QAAQ,GAAG,CAACD,UAAU,CAAtBC,CAAsB,CAAtBA;AACAC,IAAAA,QAAQ,GAAG,CAACF,UAAU,CAAtBE,CAAsB,CAAtBA;AACD;;AAEDF,EAAAA,UAAU,GAAVA,IAAAA;AAEA,MAAMG,qBAAqB,GAAGF,QAAQ,GAARA,EAAAA,IAAiB,EAAEA,QAAQ,KAARA,EAAAA,IAAmBC,QAAQ,GAA5E,CAA+C,CAA/C;AACA,MAAME,WAAW,GAAGL,KAAK,IAAIM,cAAc,CAA3C,EAA2C,CAA3C;AAEA,MAAIC,SAAS,GAAb,KAAA;;AAEA,MAAA,SAAA,EAAe;AACbA,IAAAA,SAAS,GAAGP,KAAK,IAAIQ,MAAM,CAANA,KAAAA,KAATR,GAAAA,IACVQ,MAAM,CAANA,MAAAA,KADUR,GAAAA,IACeS,MAAM,CAANA,gBAAAA,KAD3BF,CAAAA;AAED;;AAED,MAAMG,WAAW,GAAGjB,EAAE,CAAFA,MAAAA,CAAAA,QAAAA,MAAwB,CAA5C,CAAA;AAEA,SAAO;AACLK,IAAAA,MAAM,EADD,MAAA;AACGC,IAAAA,QAAQ,EADX,QAAA;AACaC,IAAAA,KAAK,EADlB,KAAA;AACoBJ,IAAAA,QAAQ,EAD5B,QAAA;AAELM,IAAAA,QAAQ,EAFH,QAAA;AAEKC,IAAAA,QAAQ,EAFb,QAAA;AAGLE,IAAAA,WAAW,EAHN,WAAA;AAGQD,IAAAA,qBAAqB,EAH7B,qBAAA;AAILG,IAAAA,SAAS,EAJJ,SAAA;AAKLG,IAAAA,WAAW,EAAXA;AALK,GAAP;AAOD;;iBAQGC,SAAS,E;IALXb,M,cAAAA,M;IAAQC,Q,cAAAA,Q;IAAUC,K,cAAAA,K;IAAOJ,Q,cAAAA,Q;IACzBM,Q,cAAAA,Q;IAAUC,Q,cAAAA,Q;IACVE,W,cAAAA,W;IAAaD,qB,cAAAA,qB;IACbG,S,cAAAA,S;IACAG,W,cAAAA,W;;AAGF,SAAA,MAAA,EAAA,QAAA,EAAA,KAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,SAAA,EAAA,WAAA;AAQA,OAAO,SAAA,gBAAA,GAA4B;AACjC,SAAOE,IAAI,CAAJA,GAAAA,CAASH,MAAM,CAAfG,WAAAA,MAAAA,EAAAA,IAAiD,CAAxD,MAAA;EAGF;AACA;;AACA,SAAA,cAAA,CAAA,EAAA,EAAoC;AAClC,MAAI,CAAJ,SAAA,EAAgB;AACd,WAAA,KAAA;AACD;;AAED,MAAMC,MAAM,GAAIJ,MAAD,CAAf,MAAA;;AAEA,MAAII,MAAM,IAAIA,MAAM,CAApB,eAAA,EAAsC;AACpC,WAAA,IAAA;AACD;;AAED,MAAMC,IAAI,GAAG,eAAA,IAAA,CAAoBC,MAAM,CAACN,MAAM,CAA9C,WAAuC,CAA1B,CAAb;AACA,MAAMO,GAAG,GAAG,CAAC,CAACP,MAAM,CAApB,SAAA;;AAEA,MACEhB,EAAE,CAAFA,OAAAA,CAAAA,QAAAA,MAAyB,CAAzBA,CAAAA,IACAA,EAAE,CAAFA,OAAAA,CAAAA,SAAAA,MAA0B,CAD1BA,CAAAA,IAEA,CAAEE,SAAD,CAHH,UAAA,EAIE,CACA;AALF,GAAA,MAMO,IAAK,CAAA,GAAA,IAAD,IAAC,IAAiB,EAAEc,MAAM,CAANA,SAAAA,IAAoBA,MAAM,CAANA,SAAAA,CAA5C,OAAsB,CAAtB,EAAuE,CAC5E;AADK,GAAA,MAEA,IAAI,CAAA,IAAA,IAAJ,GAAA,EAAkB;AACvB;AACA,WAAA,IAAA;AACD;;AAED,SAAA,KAAA;AACD;;AAED,OAAO,SAAA,WAAA,CAAA,EAAA,EAAiC;AACtC,MAAI,CAAJ,SAAA,EAAgB;AACd,WAAA,KAAA;AACD;;AAED,MAAMQ,MAAM,GAAG,CAAC,mBAAA,IAAA,CAAhB,EAAgB,CAAhB;AACA,MAAMC,KAAK,GAAG,SAAA,IAAA,CAAd,EAAc,CAAd;;AAEA,MAAIA,KAAK,IAALA,MAAAA,IAAmB,OAAQvB,SAAD,CAAP,UAAA,KAAvB,SAAA,EAA2E;AACzE,WAAA,IAAA;AACD;;AAED,SAAA,KAAA;AACD","sourcesContent":["import { canUseDOM } from './dom';\n\nexport const IPHONE_SAFARI_BOTTOM_BAR = 45;\nexport const IPHONE_X_SAFARI_BOTTOM_BAR = 85;\n\nexport const IPHONE_KEYBOARD_REJECT_OFFSET = 180;\n\n// 44 iPhone, 55 iPad, iPad Pro 69\nexport const IOS_NO_KEYBOARD_ALLOWED_OFFSET = 70;\n\nexport function detectIOS(ua?: string) {\n  if (!ua) {\n    ua = canUseDOM ? navigator.userAgent.toLowerCase() : '';\n  }\n\n  const isIPadOS = checkIPadOS(ua);\n  const isIPad = isIPadOS || ua.indexOf('ipad') !== -1;\n  const isIPhone = !isIPad && ua.search(/iphone|ipod/) !== -1;\n  const isIOS = isIPhone || isIPad;\n\n  let iosVersion = isIOS && ua.match(/OS ([\\d_]+) like Mac OS X/i);\n  let iosMajor = 0;\n  let iosMinor = 0;\n\n  if (isIPadOS) {\n    iosMajor = 13;\n    iosMinor = 0;\n  } else if (iosVersion) {\n    iosVersion = iosVersion[1].split('_');\n    iosMajor = +iosVersion[0];\n    iosMinor = +iosVersion[1];\n  }\n\n  iosVersion = null;\n\n  const isScrollBasedViewport = iosMajor < 13 && !(iosMajor === 11 && iosMinor < 3);\n  const isWKWebView = isIOS && checkWKWebView(ua);\n\n  let isIPhoneX = false;\n\n  if (canUseDOM) {\n    isIPhoneX = isIOS && screen.width === 375 &&\n      screen.height === 812 && window.devicePixelRatio === 3;\n  }\n\n  const isIOSChrome = ua.search(/crios/i) !== -1;\n\n  return {\n    isIPad, isIPhone, isIOS, isIPadOS,\n    iosMajor, iosMinor,\n    isWKWebView, isScrollBasedViewport,\n    isIPhoneX,\n    isIOSChrome,\n  };\n}\n\nconst {\n  isIPad, isIPhone, isIOS, isIPadOS,\n  iosMajor, iosMinor,\n  isWKWebView, isScrollBasedViewport,\n  isIPhoneX,\n  isIOSChrome,\n} = detectIOS();\n\nexport {\n  isIPad, isIPhone, isIOS, isIPadOS,\n  iosMajor, iosMinor,\n  isWKWebView, isScrollBasedViewport,\n  isIPhoneX,\n  isIOSChrome,\n};\n\nexport function isLandscapePhone() {\n  return Math.abs(window.orientation as number) === 90 && !isIPad;\n}\n\n// Reference:\n// https://stackoverflow.com/questions/28795476/detect-if-page-is-loaded-inside-wkwebview-in-javascript/30495399#30495399\nfunction checkWKWebView(ua: string) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  const webkit = (window as any).webkit;\n\n  if (webkit && webkit.messageHandlers) {\n    return true;\n  }\n\n  const lte9 = /constructor/i.test(String(window.HTMLElement));\n  const idb = !!window.indexedDB;\n\n  if (\n    ua.indexOf('safari') !== -1 &&\n    ua.indexOf('version') !== -1 &&\n    !(navigator as any).standalone\n  ) {\n    // Safari (WKWebView/Nitro since 6+)\n  } else if ((!idb && lte9) || !(window.statusbar && window.statusbar.visible)) {\n    // UIWebView\n  } else if (!lte9 || idb) {\n    // WKWebView\n    return true;\n  }\n\n  return false;\n}\n\nexport function checkIPadOS(ua: string) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  const notIOS = !/ipad|iphone|ipod/.test(ua);\n  const macOS = /mac os/.test(ua);\n\n  if (macOS && notIOS && typeof (navigator as any).standalone === 'boolean') {\n    return true;\n  }\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}