{"ast":null,"code":"export var ModalType;\n\n(function (ModalType) {\n  ModalType[\"PAGE\"] = \"page\";\n  ModalType[\"CARD\"] = \"card\";\n})(ModalType || (ModalType = {}));","map":{"version":3,"sources":["../../../src/components/ModalRoot/types.ts"],"names":["ModalType"],"mappings":"AAAA,OAAA,IAAA,SAAA;;WAAYA,S;AAAAA,EAAAA,S,QAAAA,G,MAAAA;AAAAA,EAAAA,S,QAAAA,G,MAAAA;GAAAA,S,KAAAA,S","sourcesContent":["export enum ModalType {\n  PAGE = 'page',\n  CARD = 'card',\n}\n\nexport type TranslateRange = [number, number];\n\nexport type ModalsState = { [index: string]: ModalsStateEntry };\n\nexport interface ModalElements {\n  modalElement?: HTMLElement | null;\n  innerElement?: HTMLElement | null;\n  headerElement?: HTMLElement | null;\n  contentElement?: HTMLElement | null;\n  footerElement?: HTMLElement | null;\n}\n\nexport interface ModalsStateEntry extends ModalElements {\n  id: string;\n  onClose?: () => any;\n  type?: ModalType;\n\n  settlingHeight?: number;\n  dynamicContentHeight?: boolean;\n  expandable?: boolean;\n\n  /**\n   * Процент текущего сдвига модалки\n   */\n  translateY?: number;\n  /**\n   * Процент сдвига модалки в изначальном состоянии\n   */\n  translateYFrom?: number;\n  /**\n   * Процент сдвига модалки во время взаимодействия с ней (потянуть, чтобы открыть или закрыть)\n   */\n  translateYCurrent?: number;\n\n  touchStartTime?: Date;\n  touchStartContentScrollTop?: number;\n  touchMovePositive?: boolean | null;\n  touchShiftYPercent?: number;\n\n  expanded?: boolean;\n  collapsed?: boolean;\n  hidden?: boolean;\n\n  contentScrolled?: boolean;\n  contentScrollStopTimeout?: number;\n\n  expandedRange?: TranslateRange;\n  collapsedRange?: TranslateRange;\n  hiddenRange?: TranslateRange;\n}\n"]},"metadata":{},"sourceType":"module"}