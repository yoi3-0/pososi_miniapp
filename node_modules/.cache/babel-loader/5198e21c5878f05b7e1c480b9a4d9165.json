{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/typeof\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction parse(query) {\n  if (typeof query !== 'string') {\n    return {};\n  }\n\n  query = query.trim().replace(/^[?#&]/, '');\n\n  if (!query) {\n    return {};\n  }\n\n  var matches = /\\?(.+)$/ig.exec(query);\n  var str = matches ? matches[1] : query;\n  return str.split('&').reduce(function (acc, item) {\n    var param = item.split('=');\n\n    if (param[1]) {\n      acc[param[0]] = decodeURIComponent(param[1]);\n    }\n\n    return acc;\n  }, {});\n}\n\nfunction stringify(data) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(data) !== 'object' || data === null) {\n    return '';\n  }\n\n  options = _objectSpread({\n    encode: true\n  }, options);\n\n  var encode = function encode(value) {\n    return options.encode ? encodeURIComponent(value) : String(value);\n  };\n\n  return Object.keys(data).reduce(function (acc, key) {\n    var value = data[key];\n\n    if (value === undefined) {\n      return acc;\n    }\n\n    if (value === null) {\n      if (!options.skipNull) {\n        acc.push([encode(key), ''].join('='));\n      }\n\n      return acc;\n    }\n\n    if (Array.isArray(value)) {\n      value.map(function (arrayItem) {\n        acc.push(\"\".concat(encode(key), \"[]=\").concat(encode(arrayItem)));\n      }).join();\n      return acc;\n    }\n\n    acc.push([encode(key), encode(value)].join('='));\n    return acc;\n  }, []).join('&');\n}\n\nexport var querystring = {\n  parse: parse,\n  stringify: stringify\n};","map":{"version":3,"sources":["../../src/querystring.ts"],"names":["query","matches","str","param","item","acc","decodeURIComponent","options","data","encode","encodeURIComponent","String","value","Array","querystring","parse","stringify"],"mappings":"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","sourcesContent":["export interface ParsedQuery<T = string> {\n  [key: string]: T | T[] | null;\n}\n\nfunction parse(query: string | any): ParsedQuery {\n  if (typeof query !== 'string') {\n    return {};\n  }\n\n  query = query.trim().replace(/^[?#&]/, '');\n  if (!query) {\n    return {};\n  }\n\n  const matches = /\\?(.+)$/ig.exec(query);\n  const str = matches ? matches[1] : query;\n\n  return str\n    .split('&')\n    .reduce((acc: ParsedQuery, item: string) => {\n      const param = item.split('=');\n\n      if (param[1]) {\n        acc[param[0]] = decodeURIComponent(param[1]);\n      }\n\n      return acc;\n    }, {});\n}\n\ntype StringifyQueryItem = string | boolean | number | null | undefined;\n\ntype StringifyQuery = Record<string, StringifyQueryItem | readonly StringifyQueryItem[]>;\n\ninterface StringifyOptions {\n  /**\n   * URL encode the keys and values\n   *\n   * @default true\n   */\n  encode?: boolean;\n\n  /**\n   * Skip keys with `null` as the value.\n   * Keys with `undefined` as the value are always ignored.\n   *\n   * @default true\n   */\n  skipNull?: true;\n}\n\nfunction stringify(data: StringifyQuery, options: StringifyOptions = {}): string {\n  if (typeof data !== 'object' || data === null) {\n    return '';\n  }\n\n  options = {\n    encode: true,\n    ...options,\n  };\n\n  const encode = (value: any): string => {\n    return options.encode ? encodeURIComponent(value) : String(value);\n  };\n\n  return Object.keys(data).reduce<string[]>((acc, key) => {\n    const value = data[key];\n\n    if (value === undefined) {\n      return acc;\n    }\n\n    if (value === null) {\n      if (!options.skipNull) {\n        acc.push([encode(key), ''].join('='));\n      }\n\n      return acc;\n    }\n\n    if (Array.isArray(value)) {\n      value.map((arrayItem) => {\n        acc.push(`${encode(key)}[]=${encode(arrayItem)}`);\n      }).join();\n      return acc;\n    }\n\n    acc.push([encode(key), encode(value)].join('='));\n    return acc;\n  }, []).join('&');\n}\n\nexport const querystring = {\n  parse,\n  stringify,\n};\n"]},"metadata":{},"sourceType":"module"}