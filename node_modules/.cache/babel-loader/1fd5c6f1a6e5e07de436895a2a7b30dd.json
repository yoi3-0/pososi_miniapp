{"ast":null,"code":"/**\n * Escapes a string so that it can be put into RegExp as a variable\n *\n * @example\n * new RegExp(`foo-${escapeRegExp('(bar)')}`, 'i')\n */\nexport function escapeRegExp(string) {\n  if (string) {\n    return string.replace(/([.*+?^${}()|[\\]\\/\\\\])/g, '\\\\$1');\n  }\n\n  return '';\n}","map":{"version":3,"sources":["../../src/regexp.ts"],"names":["string"],"mappings":"AAAA;;;;;;AAMA,OAAO,SAAA,YAAA,CAAA,MAAA,EAA8C;AACnD,MAAA,MAAA,EAAY;AACV,WAAOA,MAAM,CAANA,OAAAA,CAAAA,yBAAAA,EAAP,MAAOA,CAAP;AACD;;AAED,SAAA,EAAA;AACD","sourcesContent":["/**\n * Escapes a string so that it can be put into RegExp as a variable\n *\n * @example\n * new RegExp(`foo-${escapeRegExp('(bar)')}`, 'i')\n */\nexport function escapeRegExp(string: string): string {\n  if (string) {\n    return string.replace(/([.*+?^${}()|[\\]\\/\\\\])/g, '\\\\$1');\n  }\n\n  return '';\n}\n"]},"metadata":{},"sourceType":"module"}