{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 20 20';\nvar id = 'videocam_20';\nvar content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" id=\"videocam_20\"><path d=\"M1.5 8.8c0-1.68 0-2.52.327-3.162a3 3 0 011.311-1.311C3.78 4 4.62 4 6.3 4h3.9c1.68 0 2.52 0 3.162.327a3 3 0 011.311 1.311C15 6.28 15 7.12 15 8.8v2.4c0 1.68 0 2.52-.327 3.162a3 3 0 01-1.311 1.311C12.72 16 11.88 16 10.2 16H6.3c-1.68 0-2.52 0-3.162-.327a3 3 0 01-1.311-1.311C1.5 13.72 1.5 12.88 1.5 11.2V8.8zm17.632-2.224l-2.38 1.329a.487.487 0 00-.252.424v3.342c0 .175.096.337.252.424l2.38 1.33c.387.215.868-.057.868-.493V7.068c0-.436-.481-.708-.868-.492z\" fill=\"currentColor\" /></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon20Videocam = function Icon20Videocam(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 20,\n    height: !isNaN(props.height) ? +props.height : 20\n  }));\n};\n\nIcon20Videocam.mountIcon = mountIcon;\nexport default Icon20Videocam;","map":{"version":3,"sources":["../../../tmp/20/videocam.ts"],"names":["viewBox","id","content","isMounted","addSpriteSymbol","Icon20Videocam","useIsomorphicLayoutEffect","mountIcon","assign","width","isNaN","props","height"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA,C,CACA;;AACA,OAAA,aAAA,MAAA,kCAAA,C,CACA;;AACA,SAAA,MAAA,QAAA,mBAAA;AACA,SAAA,eAAA,EAAA,yBAAA,QAAA,WAAA;AACA,SAAA,OAAA,QAAA,YAAA;AAEA,IAAMA,OAAO,GAAb,WAAA;AACA,IAAMC,EAAE,GAAR,aAAA;AACA,IAAMC,OAAO,GAAb,4kBAAA;AAEA,IAAIC,SAAS,GAAb,KAAA;;AACA,SAAA,SAAA,GAAqB;AACnB,MAAI,CAAJ,SAAA,EAAgB;AACdC,IAAAA,eAAe,CAAC,IAAA,aAAA,CAAkB;AAChCH,MAAAA,EAAE,EAD8B,EAAA;AAEhCD,MAAAA,OAAO,EAFyB,OAAA;AAGhCE,MAAAA,OAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfE;AAMAD,IAAAA,SAAS,GAATA,IAAAA;AACD;AACF;;AASD,IAAME,cAAuC,GAAG,SAA1CA,cAA0C,CAAA,KAAA,EAAW;AACzDC,EAAAA,yBAAyB,CAAC,YAAM;AAC9BC,IAAAA,SAAS;AADc,GAAA,EAAzBD,EAAyB,CAAzBA;AAIA,SAAA,aAAO,KAAK,CAAL,aAAA,CAAA,OAAA,EAA6BE,MAAM,CAAA,EAAA,EAAA,KAAA,EAAY;AACpDR,IAAAA,OAAO,EAD6C,OAAA;AAEpDC,IAAAA,EAAE,EAFkD,EAAA;AAGpDQ,IAAAA,KAAK,EAAE,CAACC,KAAK,CAACC,KAAK,CAAZ,KAAM,CAAN,GAAsB,CAACA,KAAK,CAA5B,KAAA,GAH6C,EAAA;AAIpDC,IAAAA,MAAM,EAAE,CAACF,KAAK,CAACC,KAAK,CAAZ,MAAM,CAAN,GAAuB,CAACA,KAAK,CAA7B,MAAA,GAAuC;AAJK,GAAZ,CAAnC,CAAP;AALF,CAAA;;AAaCN,cAAD,CAAA,SAACA,GAAD,SAACA;AAED,eAAA,cAAA","sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 20 20';\nconst id = 'videocam_20';\nconst content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" id=\"videocam_20\"><path d=\"M1.5 8.8c0-1.68 0-2.52.327-3.162a3 3 0 011.311-1.311C3.78 4 4.62 4 6.3 4h3.9c1.68 0 2.52 0 3.162.327a3 3 0 011.311 1.311C15 6.28 15 7.12 15 8.8v2.4c0 1.68 0 2.52-.327 3.162a3 3 0 01-1.311 1.311C12.72 16 11.88 16 10.2 16H6.3c-1.68 0-2.52 0-3.162-.327a3 3 0 01-1.311-1.311C1.5 13.72 1.5 12.88 1.5 11.2V8.8zm17.632-2.224l-2.38 1.329a.487.487 0 00-.252.424v3.342c0 .175.096.337.252.424l2.38 1.33c.387.215.868-.057.868-.493V7.068c0-.436-.481-.708-.868-.492z\" fill=\"currentColor\" /></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon20VideocamProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon20Videocam: FC<Icon20VideocamProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 20,\n    height: !isNaN(props.height) ? +props.height : 20,\n  }));\n};\n\n(Icon20Videocam as any).mountIcon = mountIcon;\n\nexport default Icon20Videocam;\n"]},"metadata":{},"sourceType":"module"}