{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { noop } from \"../lib/utils\";\nimport { useCallback, useEffect, useRef } from 'react';\nimport { canUseDOM } from \"../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\nexport function useEventListener(event, _cb, _options) {\n  var cbRef = useRef(_cb);\n  useIsomorphicLayoutEffect(function () {\n    cbRef.current = _cb;\n  }, [_cb]);\n  var cb = useCallback(function (e) {\n    return cbRef.current(e);\n  }, []);\n  var detach = useRef(noop);\n  var remove = useCallback(function () {\n    return detach.current();\n  }, []);\n  var add = useCallback(function (el) {\n    if (!canUseDOM) {\n      return;\n    }\n\n    remove();\n\n    var options = _objectSpread({}, _options);\n\n    el.addEventListener(event, cb, options);\n\n    detach.current = function () {\n      el.removeEventListener(event, cb, options);\n      detach.current = noop;\n    };\n  }, []);\n  useEffect(function () {\n    return remove;\n  }, []);\n  return {\n    add: add,\n    remove: remove\n  };\n}","map":{"version":3,"sources":["../../src/hooks/useEventListener.ts"],"names":["cbRef","useRef","useIsomorphicLayoutEffect","cb","useCallback","detach","remove","add","options","el","useEffect"],"mappings":";AAAA,SAAA,IAAA,QAAA,cAAA;AACA,SAAA,WAAA,EAAA,SAAA,EAAA,MAAA,QAAA,OAAA;AACA,SAAA,SAAA,QAAA,YAAA;AACA,SAAA,yBAAA,QAAA,kCAAA;AAaA,OAAO,SAAA,gBAAA,CAAA,KAAA,EAAA,GAAA,EAAA,QAAA,EAAsG;AAC3G,MAAMA,KAAK,GAAGC,MAAM,CAApB,GAAoB,CAApB;AACAC,EAAAA,yBAAyB,CAAC,YAAM;AAC9BF,IAAAA,KAAK,CAALA,OAAAA,GAAAA,GAAAA;AADuB,GAAA,EAEtB,CAFHE,GAEG,CAFsB,CAAzBA;AAGA,MAAMC,EAAE,GAAGC,WAAW,CAAa,UAAA,CAAA,EAAA;AAAA,WAAOJ,KAAK,CAALA,OAAAA,CAAP,CAAOA,CAAP;AAAb,GAAA,EAAtB,EAAsB,CAAtB;AAEA,MAAMK,MAAM,GAAGJ,MAAM,CAArB,IAAqB,CAArB;AACA,MAAMK,MAAM,GAAGF,WAAW,CAAC,YAAA;AAAA,WAAMC,MAAM,CAAZ,OAAMA,EAAN;AAAD,GAAA,EAA1B,EAA0B,CAA1B;AACA,MAAME,GAAG,GAAGH,WAAW,CAAC,UAAA,EAAA,EAAgC;AACtD,QAAI,CAAJ,SAAA,EAAgB;AACd;AACD;;AACDE,IAAAA,MAAM;;AACN,QAAME,OAAO,GAAA,aAAA,CAAA,EAAA,EAAb,QAAa,CAAb;;AACAC,IAAAA,EAAE,CAAFA,gBAAAA,CAAAA,KAAAA,EAAAA,EAAAA,EAAAA,OAAAA;;AACAJ,IAAAA,MAAM,CAANA,OAAAA,GAAiB,YAAM;AACrBI,MAAAA,EAAE,CAAFA,mBAAAA,CAAAA,KAAAA,EAAAA,EAAAA,EAAAA,OAAAA;AACAJ,MAAAA,MAAM,CAANA,OAAAA,GAAAA,IAAAA;AAFFA,KAAAA;AAPqB,GAAA,EAAvB,EAAuB,CAAvB;AAYAK,EAAAA,SAAS,CAAC,YAAA;AAAA,WAAA,MAAA;AAAD,GAAA,EAATA,EAAS,CAATA;AAEA,SAAO;AAAEH,IAAAA,GAAG,EAAL,GAAA;AAAOD,IAAAA,MAAM,EAANA;AAAP,GAAP;AACD","sourcesContent":["import { noop } from '../lib/utils';\nimport { useCallback, useEffect, useRef } from 'react';\nimport { canUseDOM } from '../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../lib/useIsomorphicLayoutEffect';\n\ninterface EventListenerHandle {\n  add(el: HTMLElement | Document): void;\n  remove(): void;\n}\n\nexport function useEventListener<K extends keyof GlobalEventHandlersEventMap>(\n  event: K,\n  _cb: (ev: GlobalEventHandlersEventMap[K]) => any,\n  _options?: AddEventListenerOptions,\n): EventListenerHandle;\nexport function useEventListener(event: string, _cb: (ev: Event) => any, _options?: AddEventListenerOptions): EventListenerHandle;\nexport function useEventListener(event: string, _cb: (ev: Event) => any, _options?: AddEventListenerOptions) {\n  const cbRef = useRef(_cb);\n  useIsomorphicLayoutEffect(() => {\n    cbRef.current = _cb;\n  }, [_cb]);\n  const cb = useCallback<typeof _cb>((e) => cbRef.current(e), []);\n\n  const detach = useRef(noop);\n  const remove = useCallback(() => detach.current(), []);\n  const add = useCallback((el: HTMLElement | Document) => {\n    if (!canUseDOM) {\n      return;\n    }\n    remove();\n    const options = { ..._options };\n    el.addEventListener(event, cb, options);\n    detach.current = () => {\n      el.removeEventListener(event, cb, options);\n      detach.current = noop;\n    };\n  }, []);\n  useEffect(() => remove, []);\n\n  return { add, remove };\n}\n"]},"metadata":{},"sourceType":"module"}