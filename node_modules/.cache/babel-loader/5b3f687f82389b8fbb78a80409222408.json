{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Removable } from \"../Removable/Removable\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nvar FormLayoutGroup = withAdaptivity(function (_ref) {\n  var children = _ref.children,\n      mode = _ref.mode,\n      removable = _ref.removable,\n      removePlaceholder = _ref.removePlaceholder,\n      onRemove = _ref.onRemove,\n      sizeY = _ref.sizeY,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"mode\", \"removable\", \"removePlaceholder\", \"onRemove\", \"sizeY\"]);\n\n  var platform = usePlatform();\n  var isRemovable = removable && mode === 'horizontal';\n  return createScopedElement(\"div\", _extends({\n    vkuiClass: classNames(getClassName('FormLayoutGroup', platform), \"FormLayoutGroup--sizeY-\".concat(sizeY), \"FormLayoutGroup--\".concat(mode))\n  }, restProps), isRemovable ? createScopedElement(Removable, {\n    align: \"start\",\n    removePlaceholder: removePlaceholder,\n    onRemove: onRemove\n  }, children) : children);\n}, {\n  sizeY: true\n});\nFormLayoutGroup.defaultProps = {\n  mode: 'vertical',\n  removePlaceholder: 'Удалить'\n};\nexport default FormLayoutGroup;","map":{"version":3,"sources":["../../../src/components/FormLayoutGroup/FormLayoutGroup.tsx"],"names":["FormLayoutGroup","withAdaptivity","children","mode","removable","removePlaceholder","onRemove","sizeY","restProps","platform","usePlatform","isRemovable","classNames","getClassName"],"mappings":";;;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,SAAA,UAAA,QAAA,sBAAA;AACA,SAAA,WAAA,QAAA,yBAAA;AACA,SAAA,SAAA,QAAA,wBAAA;AACA,SAAA,cAAA,QAAA,0BAAA;AAcA,IAAMA,eAAwD,GAAGC,cAAc,CAAC,UAAA,IAAA,EAQnB;AAAA,MAP3DC,QAO2D,GAAA,IAAA,CAP3DA,QAO2D;AAAA,MAN3DC,IAM2D,GAAA,IAAA,CAN3DA,IAM2D;AAAA,MAL3DC,SAK2D,GAAA,IAAA,CAL3DA,SAK2D;AAAA,MAJ3DC,iBAI2D,GAAA,IAAA,CAJ3DA,iBAI2D;AAAA,MAH3DC,QAG2D,GAAA,IAAA,CAH3DA,QAG2D;AAAA,MAF3DC,KAE2D,GAAA,IAAA,CAF3DA,KAE2D;AAAA,MADxDC,SACwD,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,MAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,UAAA,EAAA,OAAA,CAAA,CAAA;;AAC3D,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;AACA,MAAMC,WAAW,GAAGP,SAAS,IAAID,IAAI,KAArC,YAAA;AAEA,SACE,mBAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AACE,IAAA,SAAS,EAAES,UAAU,CACnBC,YAAY,CAAA,iBAAA,EADO,QACP,CADO,EAAA,0BAAA,MAAA,CAAA,KAAA,CAAA,EAAA,oBAAA,MAAA,CAAA,IAAA,CAAA;AADvB,GAAA,EAAA,SAAA,CAAA,EAOGF,WAAW,GACR,mBAAA,CAAA,SAAA,EAAA;AAAW,IAAA,KAAK,EAAhB,OAAA;AAAyB,IAAA,iBAAiB,EAA1C,iBAAA;AAA+D,IAAA,QAAQ,EAAEL;AAAzE,GAAA,EADQ,QACR,CADQ,GARhB,QACE,CADF;AAZ6E,CAAA,EA0B5E;AACDC,EAAAA,KAAK,EAAE;AADN,CA1B4E,CAA/E;AA8BAP,eAAe,CAAfA,YAAAA,GAA+B;AAC7BG,EAAAA,IAAI,EADyB,UAAA;AAE7BE,EAAAA,iBAAiB,EAAE;AAFU,CAA/BL;AAKA,eAAA,eAAA","sourcesContent":["import { FunctionComponent, HTMLAttributes, MouseEvent } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { Removable, RemovePlaceholderProps } from '../Removable/Removable';\nimport { withAdaptivity, AdaptivityProps } from '../../hoc/withAdaptivity';\n\nexport interface FormLayoutGroupProps extends HTMLAttributes<HTMLDivElement>, RemovePlaceholderProps {\n  mode?: 'vertical' | 'horizontal';\n  /**\n   * Только для режима horizontal. Дает возможность удалить всю группу `FormItem`.\n   */\n  removable?: boolean;\n  /**\n   * Коллбэк срабатывает при клике на контрол удаления.\n   */\n  onRemove?: (e: MouseEvent) => void;\n}\n\nconst FormLayoutGroup: FunctionComponent<FormLayoutGroupProps> = withAdaptivity(({\n  children,\n  mode,\n  removable,\n  removePlaceholder,\n  onRemove,\n  sizeY,\n  ...restProps\n}: FormLayoutGroupProps & Pick<AdaptivityProps, 'sizeY'>) => {\n  const platform = usePlatform();\n  const isRemovable = removable && mode === 'horizontal';\n\n  return (\n    <div\n      vkuiClass={classNames(\n        getClassName('FormLayoutGroup', platform),\n        `FormLayoutGroup--sizeY-${sizeY}`,\n        `FormLayoutGroup--${mode}`,\n      )}\n      {...restProps}>\n      {isRemovable\n        ? <Removable align=\"start\" removePlaceholder={removePlaceholder} onRemove={onRemove}>{children}</Removable>\n        : children\n      }\n    </div>\n  );\n}, {\n  sizeY: true,\n});\n\nFormLayoutGroup.defaultProps = {\n  mode: 'vertical',\n  removePlaceholder: 'Удалить',\n};\n\nexport default FormLayoutGroup;\n"]},"metadata":{},"sourceType":"module"}