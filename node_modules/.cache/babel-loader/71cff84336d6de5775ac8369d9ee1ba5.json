{"ast":null,"code":"/**\n * Функция для js анимации\n * @param {number} duration\n * @param {function} timing тайминг функция анимации\n * @param {function} draw коллбэк, в который прокидывается прогресс [0, 1]\n * @returns {void}\n */\nexport default function animate(_ref) {\n  var duration = _ref.duration,\n      timing = _ref.timing,\n      draw = _ref.draw;\n\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  var start = window.performance.now();\n  window.requestAnimationFrame(function animate(time) {\n    var timeFraction = (time - start) / duration;\n\n    if (timeFraction > 1) {\n      timeFraction = 1;\n    }\n\n    var progress = timing(timeFraction);\n    draw(progress);\n\n    if (timeFraction < 1) {\n      window.requestAnimationFrame(animate);\n    }\n  });\n}","map":{"version":3,"sources":["../../src/lib/animate.ts"],"names":["duration","timing","draw","start","window","timeFraction","time","progress"],"mappings":"AAAA;;;;;;;AAiBA,eAAe,SAAA,OAAA,CAAA,IAAA,EAA8E;AAAA,MAA3DA,QAA2D,GAAA,IAAA,CAA3DA,QAA2D;AAAA,MAAjDC,MAAiD,GAAA,IAAA,CAAjDA,MAAiD;AAAA,MAAzCC,IAAyC,GAAA,IAAA,CAAzCA,IAAyC;;AAC3F,MAAI,OAAA,MAAA,KAAJ,WAAA,EAAmC;AACjC;AACD;;AAED,MAAMC,KAAK,GAAGC,MAAM,CAANA,WAAAA,CAAd,GAAcA,EAAd;AAEAA,EAAAA,MAAM,CAANA,qBAAAA,CAA6B,SAAA,OAAA,CAAA,IAAA,EAAqC;AAChE,QAAIC,YAAY,GAAG,CAACC,IAAI,GAAL,KAAA,IAAnB,QAAA;;AAEA,QAAID,YAAY,GAAhB,CAAA,EAAsB;AACpBA,MAAAA,YAAY,GAAZA,CAAAA;AACD;;AAED,QAAME,QAAQ,GAAGN,MAAM,CAAvB,YAAuB,CAAvB;AAEAC,IAAAA,IAAI,CAAJA,QAAI,CAAJA;;AAEA,QAAIG,YAAY,GAAhB,CAAA,EAAsB;AACpBD,MAAAA,MAAM,CAANA,qBAAAA,CAAAA,OAAAA;AACD;AAbHA,GAAAA;AAeD","sourcesContent":["/**\n * Функция для js анимации\n * @param {number} duration\n * @param {function} timing тайминг функция анимации\n * @param {function} draw коллбэк, в который прокидывается прогресс [0, 1]\n * @returns {void}\n */\nexport type TimingInterface = (timeFraction: number) => number;\n\nexport type DrawInterface = (progress: number) => void;\n\nexport interface AnimateArgumentsInterface {\n  duration: number;\n  timing: TimingInterface;\n  draw: DrawInterface;\n}\n\nexport default function animate({ duration, timing, draw }: AnimateArgumentsInterface): void {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  const start = window.performance.now();\n\n  window.requestAnimationFrame(function animate(time: number): void {\n    let timeFraction = (time - start) / duration;\n\n    if (timeFraction > 1) {\n      timeFraction = 1;\n    }\n\n    const progress = timing(timeFraction);\n\n    draw(progress);\n\n    if (timeFraction < 1) {\n      window.requestAnimationFrame(animate);\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}