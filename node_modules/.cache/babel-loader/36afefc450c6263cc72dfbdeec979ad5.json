{"ast":null,"code":"import React from 'react'; // @ts-ignore\n\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol'; // @ts-ignore\n\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\nvar viewBox = '0 0 16 16';\nvar id = 'comment_16';\nvar content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"comment_16\"><path d=\"M11.957 3c.595 0 .81.062 1.028.178.217.116.387.287.504.504.116.217.178.433.178 1.027v4.582c0 .594-.062.81-.178 1.027a1.212 1.212 0 01-.504.504c-.218.116-.433.178-1.028.178H9l-2.48 2.48a.5.5 0 01-.853-.354V11h-.958c-.594 0-.81-.062-1.027-.178a1.211 1.211 0 01-.504-.504C3.062 10.1 3 9.885 3 9.29V4.709c0-.594.062-.81.178-1.027.116-.217.287-.388.504-.504C3.9 3.062 4.115 3 4.71 3h7.248z\" fill=\"currentColor\" /></symbol>';\nvar isMounted = false;\n\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content\n    }));\n    isMounted = true;\n  }\n}\n\nvar Icon16Comment = function Icon16Comment(props) {\n  useIsomorphicLayoutEffect(function () {\n    mountIcon();\n  }, []);\n  return /*#__PURE__*/React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 16,\n    height: !isNaN(props.height) ? +props.height : 16\n  }));\n};\n\nIcon16Comment.mountIcon = mountIcon;\nexport default Icon16Comment;","map":{"version":3,"sources":["../../../tmp/16/comment.ts"],"names":["viewBox","id","content","isMounted","addSpriteSymbol","Icon16Comment","useIsomorphicLayoutEffect","mountIcon","assign","width","isNaN","props","height"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA,C,CACA;;AACA,OAAA,aAAA,MAAA,kCAAA,C,CACA;;AACA,SAAA,MAAA,QAAA,mBAAA;AACA,SAAA,eAAA,EAAA,yBAAA,QAAA,WAAA;AACA,SAAA,OAAA,QAAA,YAAA;AAEA,IAAMA,OAAO,GAAb,WAAA;AACA,IAAMC,EAAE,GAAR,YAAA;AACA,IAAMC,OAAO,GAAb,ugBAAA;AAEA,IAAIC,SAAS,GAAb,KAAA;;AACA,SAAA,SAAA,GAAqB;AACnB,MAAI,CAAJ,SAAA,EAAgB;AACdC,IAAAA,eAAe,CAAC,IAAA,aAAA,CAAkB;AAChCH,MAAAA,EAAE,EAD8B,EAAA;AAEhCD,MAAAA,OAAO,EAFyB,OAAA;AAGhCE,MAAAA,OAAO,EAAEA;AAHuB,KAAlB,CAAD,CAAfE;AAMAD,IAAAA,SAAS,GAATA,IAAAA;AACD;AACF;;AASD,IAAME,aAAqC,GAAG,SAAxCA,aAAwC,CAAA,KAAA,EAAW;AACvDC,EAAAA,yBAAyB,CAAC,YAAM;AAC9BC,IAAAA,SAAS;AADc,GAAA,EAAzBD,EAAyB,CAAzBA;AAIA,SAAA,aAAO,KAAK,CAAL,aAAA,CAAA,OAAA,EAA6BE,MAAM,CAAA,EAAA,EAAA,KAAA,EAAY;AACpDR,IAAAA,OAAO,EAD6C,OAAA;AAEpDC,IAAAA,EAAE,EAFkD,EAAA;AAGpDQ,IAAAA,KAAK,EAAE,CAACC,KAAK,CAACC,KAAK,CAAZ,KAAM,CAAN,GAAsB,CAACA,KAAK,CAA5B,KAAA,GAH6C,EAAA;AAIpDC,IAAAA,MAAM,EAAE,CAACF,KAAK,CAACC,KAAK,CAAZ,MAAM,CAAN,GAAuB,CAACA,KAAK,CAA7B,MAAA,GAAuC;AAJK,GAAZ,CAAnC,CAAP;AALF,CAAA;;AAaCN,aAAD,CAAA,SAACA,GAAD,SAACA;AAED,eAAA,aAAA","sourcesContent":["import React, { FC, HTMLAttributes, RefCallback, RefObject } from 'react';\n// @ts-ignore\nimport BrowserSymbol from 'svg-baker-runtime/browser-symbol';\n// @ts-ignore\nimport { assign } from 'es6-object-assign';\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from '../sprite';\nimport { SvgIcon } from '../SvgIcon';\n\nconst viewBox = '0 0 16 16';\nconst id = 'comment_16';\nconst content = '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\" id=\"comment_16\"><path d=\"M11.957 3c.595 0 .81.062 1.028.178.217.116.387.287.504.504.116.217.178.433.178 1.027v4.582c0 .594-.062.81-.178 1.027a1.212 1.212 0 01-.504.504c-.218.116-.433.178-1.028.178H9l-2.48 2.48a.5.5 0 01-.853-.354V11h-.958c-.594 0-.81-.062-1.027-.178a1.211 1.211 0 01-.504-.504C3.062 10.1 3 9.885 3 9.29V4.709c0-.594.062-.81.178-1.027.116-.217.287-.388.504-.504C3.9 3.062 4.115 3 4.71 3h7.248z\" fill=\"currentColor\" /></symbol>';\n\nlet isMounted = false;\nfunction mountIcon() {\n  if (!isMounted) {\n    addSpriteSymbol(new BrowserSymbol({\n      id: id,\n      viewBox: viewBox,\n      content: content,\n    }));\n\n    isMounted = true;\n  }\n}\n\nexport interface Icon16CommentProps extends HTMLAttributes<HTMLDivElement> {\n  fill?: string;\n  width?: number;\n  height?: number;\n  getRootRef?: RefCallback<HTMLDivElement> | RefObject<HTMLDivElement>;\n}\n\nconst Icon16Comment: FC<Icon16CommentProps> = (props) => {\n  useIsomorphicLayoutEffect(() => {\n    mountIcon();\n  }, []);\n\n  return React.createElement(SvgIcon, assign({}, props, {\n    viewBox: viewBox,\n    id: id,\n    width: !isNaN(props.width) ? +props.width : 16,\n    height: !isNaN(props.height) ? +props.height : 16,\n  }));\n};\n\n(Icon16Comment as any).mountIcon = mountIcon;\n\nexport default Icon16Comment;\n"]},"metadata":{},"sourceType":"module"}