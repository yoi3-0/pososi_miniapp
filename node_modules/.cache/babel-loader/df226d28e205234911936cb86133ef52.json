{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport Tappable from \"../Tappable/Tappable\";\nimport Title from \"../Typography/Title/Title\";\nimport Text from \"../Typography/Text/Text\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport Caption from \"../Typography/Caption/Caption\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { SizeType, withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { IOS, VKCOM } from \"../../lib/platform\";\n\nvar ButtonTypography = function ButtonTypography(props) {\n  var size = props.size,\n      sizeY = props.sizeY,\n      platform = props.platform,\n      restProps = _objectWithoutProperties(props, [\"size\", \"sizeY\", \"platform\"]);\n\n  var isCompact = sizeY === SizeType.COMPACT;\n\n  switch (size) {\n    case 'l':\n      if (isCompact) {\n        return createScopedElement(Text, _extends({\n          weight: \"medium\"\n        }, restProps));\n      }\n\n      return createScopedElement(Title, _extends({\n        level: \"3\",\n        weight: \"medium\"\n      }, restProps));\n\n    case 'm':\n      if (isCompact) {\n        return createScopedElement(Subhead, _extends({\n          weight: platform === VKCOM ? 'regular' : 'medium'\n        }, restProps));\n      }\n\n      return createScopedElement(Text, _extends({\n        weight: \"medium\"\n      }, restProps));\n\n    case 's':\n    default:\n      if (platform === IOS) {\n        return createScopedElement(Subhead, _extends({\n          weight: \"medium\"\n        }, restProps));\n      }\n\n      if (platform === VKCOM) {\n        return createScopedElement(Caption, _extends({\n          level: \"1\",\n          weight: \"regular\"\n        }, restProps));\n      }\n\n      if (isCompact) {\n        return createScopedElement(Caption, _extends({\n          level: \"1\",\n          weight: \"medium\"\n        }, restProps));\n      }\n\n      return createScopedElement(Subhead, _extends({\n        weight: \"medium\"\n      }, restProps));\n  }\n};\n\nvar Button = function Button(props) {\n  var _classNames;\n\n  var platform = usePlatform();\n\n  var size = props.size,\n      mode = props.mode,\n      stretched = props.stretched,\n      align = props.align,\n      children = props.children,\n      before = props.before,\n      after = props.after,\n      getRootRef = props.getRootRef,\n      sizeY = props.sizeY,\n      _props$Component = props.Component,\n      Component = _props$Component === void 0 ? 'button' : _props$Component,\n      restProps = _objectWithoutProperties(props, [\"size\", \"mode\", \"stretched\", \"align\", \"children\", \"before\", \"after\", \"getRootRef\", \"sizeY\", \"Component\"]);\n\n  var hasIcons = Boolean(before || after);\n  return createScopedElement(Tappable, _extends({}, restProps, {\n    Component: restProps.href ? 'a' : Component,\n    vkuiClass: classNames(getClassName('Button', platform), \"Button--sz-\".concat(size), \"Button--lvl-\".concat(mode), \"Button--aln-\".concat(align), \"Button--sizeY-\".concat(sizeY), (_classNames = {}, _defineProperty(_classNames, 'Button--str', stretched), _defineProperty(_classNames, 'Button--with-icon', hasIcons), _classNames)),\n    getRootRef: getRootRef,\n    activeMode: \"opacity\"\n  }), createScopedElement(\"span\", {\n    vkuiClass: \"Button__in\"\n  }, before && createScopedElement(\"span\", {\n    vkuiClass: \"Button__before\"\n  }, before), children && createScopedElement(ButtonTypography, {\n    size: size,\n    sizeY: sizeY,\n    platform: platform,\n    vkuiClass: \"Button__content\"\n  }, children), after && createScopedElement(\"span\", {\n    vkuiClass: \"Button__after\"\n  }, after)));\n};\n\nButton.defaultProps = {\n  mode: 'primary',\n  align: 'center',\n  size: 's',\n  stretched: false,\n  stopPropagation: true,\n  hasFocusVisible: true\n};\nexport default withAdaptivity(Button, {\n  sizeY: true\n});","map":{"version":3,"sources":["../../../src/components/Button/Button.tsx"],"names":["ButtonTypography","size","sizeY","platform","restProps","props","isCompact","SizeType","Button","usePlatform","mode","stretched","align","children","before","after","getRootRef","Component","hasIcons","Boolean","classNames","getClassName","stopPropagation","hasFocusVisible","withAdaptivity"],"mappings":"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","sourcesContent":["import { ElementType, FC, ReactNode } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport Tappable, { TappableProps } from '../Tappable/Tappable';\nimport Title from '../Typography/Title/Title';\nimport Text from '../Typography/Text/Text';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport Caption from '../Typography/Caption/Caption';\nimport { HasAlign } from '../../types';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { AdaptivityProps, SizeType, withAdaptivity } from '../../hoc/withAdaptivity';\nimport { Platform, IOS, VKCOM } from '../../lib/platform';\n\nexport interface VKUIButtonProps extends HasAlign {\n  mode?: 'primary' | 'secondary' | 'tertiary' | 'outline' | 'commerce' | 'destructive' | 'overlay_primary' | 'overlay_secondary' | 'overlay_outline';\n  size?: 's' | 'm' | 'l';\n  stretched?: boolean;\n  before?: ReactNode;\n  after?: ReactNode;\n}\n\nexport interface ButtonProps extends Omit<TappableProps, 'size'>, VKUIButtonProps {}\n\ninterface ButtonTypographyProps {\n  size: ButtonProps['size'];\n  platform: Platform;\n  sizeY: AdaptivityProps['sizeY'];\n  children?: ButtonProps['children'];\n  Component?: ElementType;\n}\n\nconst ButtonTypography: FC<ButtonTypographyProps> = (props: ButtonTypographyProps) => {\n  const { size, sizeY, platform, ...restProps } = props;\n  const isCompact = sizeY === SizeType.COMPACT;\n\n  switch (size) {\n    case 'l':\n      if (isCompact) {\n        return <Text weight=\"medium\" {...restProps} />;\n      }\n\n      return <Title level=\"3\" weight=\"medium\" {...restProps} />;\n    case 'm':\n      if (isCompact) {\n        return <Subhead weight={platform === VKCOM ? 'regular' : 'medium'} {...restProps} />;\n      }\n\n      return <Text weight=\"medium\" {...restProps} />;\n    case 's':\n    default:\n      if (platform === IOS) {\n        return <Subhead weight=\"medium\" {...restProps} />;\n      }\n\n      if (platform === VKCOM) {\n        return <Caption level=\"1\" weight=\"regular\" {...restProps} />;\n      }\n\n      if (isCompact) {\n        return <Caption level=\"1\" weight=\"medium\" {...restProps} />;\n      }\n\n      return <Subhead weight=\"medium\" {...restProps} />;\n  }\n};\n\nconst Button: FC<ButtonProps> = (props: ButtonProps) => {\n  const platform = usePlatform();\n  const { size, mode, stretched, align, children, before, after, getRootRef, sizeY, Component = 'button', ...restProps } = props;\n  const hasIcons = Boolean(before || after);\n\n  return (\n    <Tappable\n      {...restProps}\n      Component={restProps.href ? 'a' : Component}\n      vkuiClass={\n        classNames(\n          getClassName('Button', platform),\n          `Button--sz-${size}`,\n          `Button--lvl-${mode}`,\n          `Button--aln-${align}`,\n          `Button--sizeY-${sizeY}`,\n          {\n            ['Button--str']: stretched,\n            ['Button--with-icon']: hasIcons,\n          },\n        )\n      }\n      getRootRef={getRootRef}\n      activeMode=\"opacity\"\n    >\n      <span vkuiClass=\"Button__in\">\n        {before && <span vkuiClass=\"Button__before\">{before}</span>}\n        {children && (\n          <ButtonTypography\n            size={size}\n            sizeY={sizeY}\n            platform={platform}\n            vkuiClass=\"Button__content\"\n          >\n            {children}\n          </ButtonTypography>\n        )}\n        {after && <span vkuiClass=\"Button__after\">{after}</span>}\n      </span>\n    </Tappable>\n  );\n};\n\nButton.defaultProps = {\n  mode: 'primary',\n  align: 'center',\n  size: 's',\n  stretched: false,\n  stopPropagation: true,\n  hasFocusVisible: true,\n};\n\nexport default withAdaptivity(Button, {\n  sizeY: true,\n});\n"]},"metadata":{},"sourceType":"module"}