{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { isPrimitiveReactNode } from \"../../lib/utils\";\nimport { IOS, VKCOM, ANDROID } from \"../../lib/platform\";\nimport Text from \"../Typography/Text/Text\";\nimport Title from \"../Typography/Title/Title\";\n\nvar ButtonTypography = function ButtonTypography(_ref) {\n  var primary = _ref.primary,\n      children = _ref.children;\n  var platform = usePlatform();\n\n  if (platform === IOS) {\n    return createScopedElement(Title, {\n      Component: \"span\",\n      level: \"3\",\n      weight: primary ? 'semibold' : 'regular'\n    }, children);\n  }\n\n  return createScopedElement(Text, {\n    weight: platform === VKCOM ? 'regular' : 'medium'\n  }, children);\n};\n\nexport var PanelHeaderButton = function PanelHeaderButton(_ref2) {\n  var children = _ref2.children,\n      primary = _ref2.primary,\n      label = _ref2.label,\n      restProps = _objectWithoutProperties(_ref2, [\"children\", \"primary\", \"label\"]);\n\n  var isPrimitive = isPrimitiveReactNode(children);\n  var isPrimitiveLabel = isPrimitiveReactNode(label);\n  var platform = usePlatform();\n  var hoverMode;\n  var activeMode;\n\n  switch (platform) {\n    case ANDROID:\n      hoverMode = 'background';\n      activeMode = 'background';\n      break;\n\n    case IOS:\n      hoverMode = 'background';\n      activeMode = 'opacity';\n      break;\n\n    case VKCOM:\n      hoverMode = 'PanelHeaderButton--hover';\n      activeMode = 'PanelHeaderButton--active';\n  }\n\n  return createScopedElement(Tappable, _extends({}, restProps, {\n    hoverMode: hoverMode,\n    Component: restProps.href ? 'a' : 'button',\n    activeEffectDelay: 200,\n    activeMode: activeMode,\n    vkuiClass: classNames(getClassName('PanelHeaderButton', platform), {\n      'PanelHeaderButton--primary': primary,\n      'PanelHeaderButton--primitive': isPrimitive,\n      'PanelHeaderButton--notPrimitive': !isPrimitive && !isPrimitiveLabel\n    })\n  }), isPrimitive ? createScopedElement(ButtonTypography, {\n    primary: primary\n  }, children) : children, isPrimitiveLabel ? createScopedElement(ButtonTypography, {\n    primary: primary\n  }, label) : label);\n};\nPanelHeaderButton.defaultProps = {\n  'primary': false,\n  'aria-label': 'Закрыть'\n};","map":{"version":3,"sources":["../../../src/components/PanelHeaderButton/PanelHeaderButton.tsx"],"names":["ButtonTypography","primary","children","platform","usePlatform","PanelHeaderButton","label","restProps","isPrimitive","isPrimitiveReactNode","isPrimitiveLabel","hoverMode","activeMode","classNames","getClassName"],"mappings":"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","sourcesContent":["import { AllHTMLAttributes, FunctionComponent, ReactNode } from 'react';\nimport Tappable, { TappableProps } from '../Tappable/Tappable';\nimport { getClassName } from '../../helpers/getClassName';\nimport { classNames } from '../../lib/classNames';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { isPrimitiveReactNode } from '../../lib/utils';\nimport { IOS, VKCOM, ANDROID } from '../../lib/platform';\nimport Text from '../Typography/Text/Text';\nimport Title from '../Typography/Title/Title';\n\nexport interface PanelHeaderButtonProps extends Omit<TappableProps, 'label'> {\n  primary?: boolean;\n  label?: ReactNode;\n}\n\ninterface ButtonTypographyProps extends AllHTMLAttributes<HTMLElement> {\n  primary?: PanelHeaderButtonProps['primary'];\n}\n\nconst ButtonTypography: FunctionComponent<ButtonTypographyProps> = ({ primary, children }: ButtonTypographyProps) => {\n  const platform = usePlatform();\n\n  if (platform === IOS) {\n    return (\n      <Title Component=\"span\" level=\"3\" weight={primary ? 'semibold' : 'regular'}>\n        {children}\n      </Title>\n    );\n  }\n\n  return (\n    <Text weight={platform === VKCOM ? 'regular' : 'medium'}>\n      {children}\n    </Text>\n  );\n};\n\nexport const PanelHeaderButton: FunctionComponent<PanelHeaderButtonProps> = ({\n  children,\n  primary,\n  label,\n  ...restProps\n}: PanelHeaderButtonProps) => {\n  const isPrimitive = isPrimitiveReactNode(children);\n  const isPrimitiveLabel = isPrimitiveReactNode(label);\n  const platform = usePlatform();\n\n  let hoverMode;\n  let activeMode;\n\n  switch (platform) {\n    case ANDROID:\n      hoverMode = 'background';\n      activeMode = 'background';\n      break;\n    case IOS:\n      hoverMode = 'background';\n      activeMode = 'opacity';\n      break;\n    case VKCOM:\n      hoverMode = 'PanelHeaderButton--hover';\n      activeMode = 'PanelHeaderButton--active';\n  }\n\n  return (\n    <Tappable\n      {...restProps}\n      hoverMode={hoverMode}\n      Component={restProps.href ? 'a' : 'button'}\n      activeEffectDelay={200}\n      activeMode={activeMode}\n      vkuiClass={classNames(\n        getClassName('PanelHeaderButton', platform),\n        {\n          'PanelHeaderButton--primary': primary,\n          'PanelHeaderButton--primitive': isPrimitive,\n          'PanelHeaderButton--notPrimitive': !isPrimitive && !isPrimitiveLabel,\n        },\n      )}\n    >\n      {isPrimitive\n        ? <ButtonTypography primary={primary}>{children}</ButtonTypography>\n        : children\n      }\n      {isPrimitiveLabel\n        ? <ButtonTypography primary={primary}>{label}</ButtonTypography>\n        : label\n      }\n    </Tappable>\n  );\n};\n\nPanelHeaderButton.defaultProps = {\n  'primary': false,\n  'aria-label': 'Закрыть',\n};\n"]},"metadata":{},"sourceType":"module"}