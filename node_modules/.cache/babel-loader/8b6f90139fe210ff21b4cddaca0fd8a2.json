{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../lib/jsxRuntime\";\nimport { useContext } from 'react';\nimport { getClassName } from \"../../helpers/getClassName\";\nimport Tappable from \"../Tappable/Tappable\";\nimport { classNames } from \"../../lib/classNames\";\nimport { VKCOM } from \"../../lib/platform\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { TabsModeContext } from \"../Tabs/Tabs\";\nimport Headline from \"../Typography/Headline/Headline\";\nimport Subhead from \"../Typography/Subhead/Subhead\";\nimport Text from \"../Typography/Text/Text\";\n\nvar TabsItem = function TabsItem(_ref) {\n  var children = _ref.children,\n      selected = _ref.selected,\n      after = _ref.after,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"selected\", \"after\"]);\n\n  var platform = usePlatform();\n  var mode = useContext(TabsModeContext);\n  var TypographyComponent = platform === VKCOM ? Text : mode === 'buttons' || mode === 'segmented' ? Subhead : Headline;\n  return createScopedElement(Tappable, _extends({}, restProps, {\n    vkuiClass: classNames(getClassName('TabsItem', platform), {\n      'TabsItem--selected': selected\n    }),\n    hasActive: mode === 'segmented',\n    activeMode: \"TabsItem--active\"\n  }), createScopedElement(TypographyComponent, {\n    vkuiClass: \"TabsItem__in\",\n    weight: \"medium\"\n  }, children), hasReactNode(after) && createScopedElement(\"div\", {\n    vkuiClass: \"TabsItem__after\"\n  }, after));\n};\n\nTabsItem.defaultProps = {\n  selected: false\n};\nexport default TabsItem;","map":{"version":3,"sources":["../../../src/components/TabsItem/TabsItem.tsx"],"names":["TabsItem","children","selected","after","restProps","platform","usePlatform","mode","useContext","TypographyComponent","classNames","getClassName","hasReactNode"],"mappings":";;;AAAA,SAAA,UAAA,QAAA,OAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,OAAA,QAAA,MAAA,sBAAA;AACA,SAAA,UAAA,QAAA,sBAAA;AACA,SAAA,KAAA,QAAA,oBAAA;AACA,SAAA,WAAA,QAAA,yBAAA;AACA,SAAA,YAAA,QAAA,iBAAA;AACA,SAAA,eAAA,QAAA,cAAA;AACA,OAAA,QAAA,MAAA,iCAAA;AACA,OAAA,OAAA,MAAA,+BAAA;AACA,OAAA,IAAA,MAAA,yBAAA;;AAOA,IAAMA,QAA0C,GAAG,SAA7CA,QAA6C,CAAA,IAAA,EAK9B;AAAA,MAJnBC,QAImB,GAAA,IAAA,CAJnBA,QAImB;AAAA,MAHnBC,QAGmB,GAAA,IAAA,CAHnBA,QAGmB;AAAA,MAFnBC,KAEmB,GAAA,IAAA,CAFnBA,KAEmB;AAAA,MADhBC,SACgB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,OAAA,CAAA,CAAA;;AACnB,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;AACA,MAAMC,IAAI,GAAGC,UAAU,CAAvB,eAAuB,CAAvB;AAEA,MAAMC,mBAAmB,GAAGJ,QAAQ,KAARA,KAAAA,GAAAA,IAAAA,GAExBE,IAAI,KAAJA,SAAAA,IAAsBA,IAAI,KAA1BA,WAAAA,GAAAA,OAAAA,GAFJ,QAAA;AAMA,SACE,mBAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,SAAS,EAAEG,UAAU,CAACC,YAAY,CAAA,UAAA,EAAb,QAAa,CAAb,EAAqC;AAAE,4BAAsBT;AAAxB,KAArC,CAFvB;AAGE,IAAA,SAAS,EAAEK,IAAI,KAHjB,WAAA;AAIE,IAAA,UAAU,EAAC;AAJb,GAAA,CAAA,EAME,mBAAA,CAAA,mBAAA,EAAA;AAAqB,IAAA,SAAS,EAA9B,cAAA;AAA8C,IAAA,MAAM,EAAC;AAArD,GAAA,EANF,QAME,CANF,EAOGK,YAAY,CAAZA,KAAY,CAAZA,IAAuB,mBAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAR5B,KAQ4B,CAP1B,CADF;AAfF,CAAA;;AA4BAZ,QAAQ,CAARA,YAAAA,GAAwB;AACtBE,EAAAA,QAAQ,EAAE;AADY,CAAxBF;AAIA,eAAA,QAAA","sourcesContent":["import { FunctionComponent, HTMLAttributes, ReactNode, useContext } from 'react';\nimport { getClassName } from '../../helpers/getClassName';\nimport Tappable from '../Tappable/Tappable';\nimport { classNames } from '../../lib/classNames';\nimport { VKCOM } from '../../lib/platform';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { hasReactNode } from '../../lib/utils';\nimport { TabsModeContext } from '../Tabs/Tabs';\nimport Headline from '../Typography/Headline/Headline';\nimport Subhead from '../Typography/Subhead/Subhead';\nimport Text from '../Typography/Text/Text';\n\nexport interface TabsItemProps extends HTMLAttributes<HTMLElement> {\n  after?: ReactNode;\n  selected?: boolean;\n}\n\nconst TabsItem: FunctionComponent<TabsItemProps> = ({\n  children,\n  selected,\n  after,\n  ...restProps\n}: TabsItemProps) => {\n  const platform = usePlatform();\n  const mode = useContext(TabsModeContext);\n\n  const TypographyComponent = platform === VKCOM\n    ? Text\n    : mode === 'buttons' || mode === 'segmented'\n      ? Subhead\n      : Headline;\n\n  return (\n    <Tappable\n      {...restProps}\n      vkuiClass={classNames(getClassName('TabsItem', platform), { 'TabsItem--selected': selected })}\n      hasActive={mode === 'segmented'}\n      activeMode=\"TabsItem--active\"\n    >\n      <TypographyComponent vkuiClass=\"TabsItem__in\" weight=\"medium\">{children}</TypographyComponent>\n      {hasReactNode(after) && <div vkuiClass=\"TabsItem__after\">{after}</div>}\n    </Tappable>\n  );\n};\n\nTabsItem.defaultProps = {\n  selected: false,\n};\n\nexport default TabsItem;\n"]},"metadata":{},"sourceType":"module"}