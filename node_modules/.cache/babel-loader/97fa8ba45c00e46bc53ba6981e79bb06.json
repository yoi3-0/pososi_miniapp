{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport { createScopedElement } from \"../../../lib/jsxRuntime\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nimport { classNames } from \"../../../lib/classNames\";\nimport { getClassName } from \"../../../helpers/getClassName\";\nimport { warnOnce } from \"../../../lib/warnOnce\";\nvar warn = warnOnce('Text');\n\nvar Text = function Text(_ref) {\n  var children = _ref.children,\n      weight = _ref.weight,\n      _ref$Component = _ref.Component,\n      Component = _ref$Component === void 0 ? 'span' : _ref$Component,\n      getRootRef = _ref.getRootRef,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"weight\", \"Component\", \"getRootRef\"]);\n\n  var platform = usePlatform();\n\n  if (process.env.NODE_ENV === 'development' && typeof Component !== 'string' && getRootRef) {\n    warn('getRootRef can only be used with DOM components');\n  }\n\n  return createScopedElement(Component, _extends({}, restProps, {\n    ref: getRootRef,\n    vkuiClass: classNames(getClassName('Text', platform), \"Text--w-\".concat(weight))\n  }), children);\n};\n\nexport default Text;","map":{"version":3,"sources":["../../../../src/components/Typography/Text/Text.tsx"],"names":["warn","warnOnce","Text","children","weight","Component","getRootRef","restProps","platform","usePlatform","process","classNames","getClassName"],"mappings":";;;AACA,SAAA,WAAA,QAAA,4BAAA;AACA,SAAA,UAAA,QAAA,yBAAA;AACA,SAAA,YAAA,QAAA,+BAAA;AAEA,SAAA,QAAA,QAAA,uBAAA;AAOA,IAAMA,IAAI,GAAGC,QAAQ,CAArB,MAAqB,CAArB;;AACA,IAAMC,IAAmB,GAAG,SAAtBA,IAAsB,CAAA,IAAA,EAMX;AAAA,MALfC,QAKe,GAAA,IAAA,CALfA,QAKe;AAAA,MAJfC,MAIe,GAAA,IAAA,CAJfA,MAIe;AAAA,MAAA,cAAA,GAAA,IAAA,CAHfC,SAGe;AAAA,MAHfA,SAGe,GAAA,cAAA,KAAA,KAAA,CAAA,GAHH,MAGG,GAAA,cAAA;AAAA,MAFfC,UAEe,GAAA,IAAA,CAFfA,UAEe;AAAA,MADZC,SACY,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,QAAA,EAAA,WAAA,EAAA,YAAA,CAAA,CAAA;;AACf,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;;AAEA,MAAIC,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAAA,aAAAA,IAA0C,OAAA,SAAA,KAA1CA,QAAAA,IAAJ,UAAA,EAA2F;AACzFV,IAAAA,IAAI,CAAJA,iDAAI,CAAJA;AACD;;AAED,SACE,mBAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,GAAG,EAFL,UAAA;AAGE,IAAA,SAAS,EAAEW,UAAU,CAACC,YAAY,CAAA,MAAA,EAAb,QAAa,CAAb,EAAA,WAAA,MAAA,CAAA,MAAA,CAAA;AAHvB,GAAA,CAAA,EADF,QACE,CADF;AAbF,CAAA;;AAwBA,eAAA,IAAA","sourcesContent":["import { AllHTMLAttributes, ElementType, FC } from 'react';\nimport { usePlatform } from '../../../hooks/usePlatform';\nimport { classNames } from '../../../lib/classNames';\nimport { getClassName } from '../../../helpers/getClassName';\nimport { HasRootRef } from '../../../types';\nimport { warnOnce } from '../../../lib/warnOnce';\n\nexport interface TextProps extends AllHTMLAttributes<HTMLElement>, HasRootRef<HTMLDivElement> {\n  weight: 'regular' | 'medium' | 'semibold';\n  Component?: ElementType;\n}\n\nconst warn = warnOnce('Text');\nconst Text: FC<TextProps> = ({\n  children,\n  weight,\n  Component = 'span',\n  getRootRef,\n  ...restProps\n}: TextProps) => {\n  const platform = usePlatform();\n\n  if (process.env.NODE_ENV === 'development' && typeof Component !== 'string' && getRootRef) {\n    warn('getRootRef can only be used with DOM components');\n  }\n\n  return (\n    <Component\n      {...restProps}\n      ref={getRootRef}\n      vkuiClass={classNames(getClassName('Text', platform), `Text--w-${weight}`)}\n    >\n      {children}\n    </Component>\n  );\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}